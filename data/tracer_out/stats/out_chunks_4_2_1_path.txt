MESA: Linking to LLVM resource bind packing.
Vulkan SDK Header Version: 182

Vulkan Instance Extensions: 
- VK_KHR_device_group_creation (0.0.1)
- VK_KHR_external_fence_capabilities (0.0.1)
- VK_KHR_external_memory_capabilities (0.0.1)
- VK_KHR_external_semaphore_capabilities (0.0.1)
- VK_KHR_get_physical_device_properties2 (0.0.2)
- VK_KHR_get_surface_capabilities2 (0.0.1)
- VK_KHR_surface (0.0.25)
- VK_KHR_surface_protected_capabilities (0.0.1)
- VK_KHR_xcb_surface (0.0.6)
- VK_KHR_xlib_surface (0.0.6)
- VK_EXT_debug_report (0.0.10)
- VK_EXT_debug_utils (0.0.2)

Vulkan Instance Layers: 
- VK_LAYER_NV_optimus (1.3.236) : NVIDIA Optimus layer
- VK_LAYER_LUNARG_device_simulation (1.2.182) : LunarG device simulation layer
- VK_LAYER_LUNARG_api_dump (1.2.182) : LunarG API dump layer
- VK_LAYER_KHRONOS_validation (1.2.182) : Khronos Validation Layer
- VK_LAYER_LUNARG_monitor (1.2.182) : Execution Monitoring Layer
- VK_LAYER_LUNARG_screenshot (1.2.182) : LunarG image capture layer
- VK_LAYER_LUNARG_gfxreconstruct (1.2.182) : GFXReconstruct Capture Layer Version 0.9.8
- VK_LAYER_KHRONOS_synchronization2 (1.2.182) : Khronos Synchronization2 layer

Vulkan Devices: 
- [0] UnknownVendor 'llvmpipe (LLVM 10.0.0, 256 bits)' (CPU: vulkan 1.3.254, driver llvmpipe Mesa 23.2.0-devel (git-45f329e0bb) (LLVM 10.0.0) - 0.0.1)

Setting Device [0]:
Getting ray tracing pipeline properties...
- loading '../assets/textures/white.png'... (1 x 1 x 3) 3.8205e-05s
RTV: Creating device buffer Vertices of size 9835452
LVP: vkBuffer size 9835452 created at 0x556b94d64358
RTV: New vkBuffer created at 0x556b94d64358
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9576deb0; llvmpipe_resource 0x556b9576deb0; pipe_memory_allocation 0x7f9f5d4be000;
LVP: Binding lvp_buffer 0x556b94b019e0: buffer->bo: 0x556b9576deb0; buffer->pmem: 0x7f9f5d4be000; memory-offset: 0;


        *** GPGPU-Sim Simulator Version 4.0.0  [build gpgpu-sim_git-commit-4930c4c3cdbc4296555441708ee65862bf1eac8a_modified_0.0] ***


GPGPU-Sim PTX: simulation mode -1058838766 (can change with PTX_SIM_MODE_FUNC environment variable:
               1=functional simulation only, 0=detailed performance simulator)
GPGPU-Sim PTX: overriding embedded ptx with ptx file (PTX_SIM_USE_PTX_FILE is set)
GPGPU-Sim: Configuration options:

-save_embedded_ptx                      0 # saves ptx files embedded in binary as <n>.ptx
-keep                                   0 # keep intermediate files created by GPGPU-Sim when interfacing with external programs
-gpgpu_ptx_save_converted_ptxplus                    0 # Saved converted ptxplus to a file
-gpgpu_occupancy_sm_number                   75 # The SM number to pass to ptxas when getting register usage for computing GPU occupancy. This parameter is required in the config.
-ptx_opcode_latency_int      4,13,4,5,145,32 # Opcode latencies for integers <ADD,MAX,MUL,MAD,DIV,SHFL>Default 1,1,19,25,145,32
-ptx_opcode_latency_fp          4,13,4,5,39 # Opcode latencies for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,30
-ptx_opcode_latency_dp         8,19,8,8,330 # Opcode latencies for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,335
-ptx_opcode_latency_sfu                  100 # Opcode latencies for SFU instructionsDefault 8
-ptx_opcode_latency_tesnor                   64 # Opcode latencies for Tensor instructionsDefault 64
-ptx_opcode_initiation_int          2,2,2,2,8,4 # Opcode initiation intervals for integers <ADD,MAX,MUL,MAD,DIV,SHFL>Default 1,1,4,4,32,4
-ptx_opcode_initiation_fp            2,2,2,2,4 # Opcode initiation intervals for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,5
-ptx_opcode_initiation_dp          4,4,4,4,130 # Opcode initiation intervals for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,130
-ptx_opcode_initiation_sfu                    8 # Opcode initiation intervals for sfu instructionsDefault 8
-ptx_opcode_initiation_tensor                   64 # Opcode initiation intervals for tensor instructionsDefault 64
-cdp_latency         7200,8000,100,12000,1600 # CDP API latency <cudaStreamCreateWithFlags, cudaGetParameterBufferV2_init_perWarp, cudaGetParameterBufferV2_perKernel, cudaLaunchDeviceV2_init_perWarp, cudaLaunchDevicV2_perKernel>Default 7200,8000,100,12000,1600
-network_mode                           2 # Interconnection network mode
-inter_config_file                   mesh # Interconnection network config file
-icnt_in_buffer_limit                  512 # in_buffer_limit
-icnt_out_buffer_limit                  512 # out_buffer_limit
-icnt_subnets                           2 # subnets
-icnt_arbiter_algo                      1 # arbiter_algo
-icnt_verbose                           0 # inct_verbose
-icnt_grant_cycles                      1 # grant_cycles
-gpgpu_ptx_use_cuobjdump                    1 # Use cuobjdump to extract ptx and sass from binaries
-gpgpu_experimental_lib_support                    0 # Try to extract code from cuda libraries [Broken because of unknown cudaGetExportTable]
-checkpoint_option                      0 #  checkpointing flag (0 = no checkpoint)
-checkpoint_kernel                      1 #  checkpointing during execution of which kernel (1- 1st kernel)
-checkpoint_CTA                         0 #  checkpointing after # of CTA (< less than total CTA)
-resume_option                          0 #  resume flag (0 = no resume)
-resume_kernel                          0 #  Resume from which kernel (1= 1st kernel)
-resume_CTA                             0 #  resume from which CTA 
-checkpoint_CTA_t                       0 #  resume from which CTA 
-checkpoint_insn_Y                      0 #  resume from which CTA 
-gpgpu_ptx_convert_to_ptxplus                    0 # Convert SASS (native ISA) to ptxplus and run ptxplus
-gpgpu_ptx_force_max_capability                   75 # Force maximum compute capability
-gpgpu_ptx_inst_debug_to_file                    0 # Dump executed instructions' debug information to file
-gpgpu_ptx_inst_debug_file       inst_debug.txt # Executed instructions' debug output file
-gpgpu_ptx_inst_debug_thread_uid                    1 # Thread UID for executed instructions' debug output
-gpgpu_simd_model                       1 # 1 = post-dominator
-gpgpu_simd_rec_time_out                   -1 # -1 = no reconvergence time out
-gpgpu_simd_rec_size                    6 # number of physical entries in the reconvergence table
-gpgpu_simd_st_size                     6 # number of physical entries in the splits table
-gpgpu_simd_rec_replacement                    0 # reconvergence table replacement policy
-gpgpu_simd_st_replacement                    0 # splits table replacement policy
-gpgpu_shader_core_pipeline              1024:32 # shader core pipeline config, i.e., {<nthread>:<warpsize>}
-gpgpu_tex_cache:l1  N:4:128:256,L:R:m:N:L,T:512:8,128:2 # per-shader L1 texture cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>:<rf>}
-gpgpu_const_cache:l1 N:128:64:8,L:R:f:N:L,S:2:64,4 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_rt_cache:l1   S:32:128:16,L:R:m:L:P,A:256:256,32:0,32 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_rt_use_l1                        1 # use existing L1 cache instead of dedicated L0 cache 
-gpgpu_rt_perfect_mem                    0 # assume 0 latency BVH accesses 
-gpgpu_rt_coherence_engine                    0 # enable coherency engine (ray sorting) 
-gpgpu_rt_coherence_engine_config 100,10,16,g,0,3,2,0.25 # max cycles, hash 
-gpgpu_rt_disable_rt_cache                    0 # bypass RT cache and connect RT unit directly to interconnect 
-gpgpu_rt_max_warps                     4 # max number of warps concurrently in one rt core 
-gpgpu_rt_max_mshr                     64 # max number of MSHR entries in RT unit 
-gpgpu_rt_coalesce_warps                    0 # try to coalesce memory requests between warps 
-gpgpu_rt_intersection_latency        4,8,8,4,8,8,8 # latency of pipelined intersection tests (7 types)
-gpgpu_rt_intersection_table_type                    0 # type of intersection table
-gpgpu_cache:il1     N:64:128:16,L:R:f:N:L,S:2:48,4 # shader L1 instruction cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:dl1     S:1:128:512,L:L:s:N:L,A:256:8,16:0,32 # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_l1_banks                         4 # The number of L1 cache banks
-gpgpu_l1_banks_byte_interleaving                   32 # l1 banks byte interleaving granularity
-gpgpu_l1_banks_hashing_function                    0 # l1 banks hashing function
-gpgpu_l1_latency                      20 # L1 Hit Latency
-gpgpu_smem_latency                    20 # smem Latency
-gpgpu_cache:dl1PrefL1                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PrefShared                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_gmem_skip_L1D                    0 # global memory access skip L1D cache (implements -Xptxas -dlcm=cg, default=no skip)
-gpgpu_perfect_mem                      0 # enable perfect memory mode (no cache miss)
-n_regfile_gating_group                    4 # group of lanes that should be read/written together)
-gpgpu_clock_gated_reg_file                    0 # enable clock gated reg file for power calculations
-gpgpu_clock_gated_lanes                    0 # enable clock gated lanes for power calculations
-gpgpu_shader_registers                32768 # Number of registers per shader core. Limits number of concurrent CTAs. (default 8192)
-gpgpu_registers_per_block                32768 # Maximum number of registers per CTA. (default 8192)
-gpgpu_ignore_resources_limitation                    0 # gpgpu_ignore_resources_limitation (default 0)
-gpgpu_shader_cta                      16 # Maximum number of concurrent CTAs in shader (default 8)
-gpgpu_num_cta_barriers                   16 # Maximum number of named barriers per CTA (default 16)
-gpgpu_n_clusters                       2 # number of processing clusters
-gpgpu_n_cores_per_cluster                    1 # number of simd cores per cluster
-gpgpu_n_cluster_ejection_buffer_size                   32 # number of packets in ejection buffer
-gpgpu_n_ldst_response_buffer_size                    2 # number of response packets in ld/st unit ejection buffer
-gpgpu_shmem_per_block                65536 # Size of shared memory per thread block or CTA (default 48kB)
-gpgpu_shmem_size                   65536 # Size of shared memory per shader core (default 16kB)
-gpgpu_adaptive_cache_config                    0 # adaptive_cache_config
-gpgpu_shmem_sizeDefault                65536 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefL1                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefShared                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_num_banks                   32 # Number of banks in the shared memory in each shader core (default 16)
-gpgpu_shmem_limited_broadcast                    0 # Limit shared memory to do one broadcast per cycle (default on)
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_mem_unit_ports                    1 # The number of memory transactions allowed per core cycle
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_warpdistro_shader                   -1 # Specify which shader core to collect the warp size distribution from
-gpgpu_warp_issue_shader                    0 # Specify which shader core to collect the warp issue distribution from
-gpgpu_local_mem_map                    1 # Mapping from local memory space address to simulated GPU physical address space (default = enabled)
-gpgpu_num_reg_banks                   16 # Number of register banks (default = 8)
-gpgpu_reg_bank_use_warp_id                    0 # Use warp ID in mapping registers to banks (default = off)
-gpgpu_sub_core_model                    1 # Sub Core Volta/Pascal model (default = off)
-gpgpu_enable_specialized_operand_collector                    0 # enable_specialized_operand_collector
-gpgpu_operand_collector_num_units_sp                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_dp                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_units_sfu                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_int                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_units_tensor_core                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_mem                    2 # number of collector units (default = 2)
-gpgpu_operand_collector_num_units_gen                    8 # number of collector units (default = 0)
-gpgpu_operand_collector_num_in_ports_sp                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_dp                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_in_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_int                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_in_ports_tensor_core                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_gen                    8 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sp                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_dp                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_int                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_tensor_core                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_gen                    8 # number of collector unit in ports (default = 0)
-gpgpu_coalesce_arch                   75 # Coalescing arch (GT200 = 13, Fermi = 20)
-gpgpu_num_sched_per_core                    4 # Number of warp schedulers per core
-gpgpu_max_insn_issue_per_warp                    1 # Max number of instructions that can be issued per warp in one cycle by scheduler (either 1 or 2)
-gpgpu_dual_issue_diff_exec_units                    1 # should dual issue use two different execution unit resources (Default = 1)
-gpgpu_simt_core_sim_order                    1 # Select the simulation order of cores in a cluster (0=Fix, 1=Round-Robin)
-gpgpu_pipeline_widths 4,0,4,4,4,4,0,4,4,4,8,4,4,4,4 # Pipeline widths ID_OC_SP,ID_OC_DP,ID_OC_INT,ID_OC_SFU,ID_OC_MEM,OC_EX_SP,OC_EX_DP,OC_EX_INT,OC_EX_SFU,OC_EX_MEM,EX_WB,ID_OC_TENSOR_CORE,OC_EX_TENSOR_CORE,ID_OC_RT,OC_EX_RT
-gpgpu_tensor_core_avail                    1 # Tensor Core Available (default=0)
-gpgpu_num_sp_units                     4 # Number of SP units (default=1)
-gpgpu_num_dp_units                     0 # Number of DP units (default=0)
-gpgpu_num_int_units                    4 # Number of INT units (default=0)
-gpgpu_num_sfu_units                    4 # Number of SF units (default=1)
-gpgpu_num_tensor_core_units                    4 # Number of tensor_core units (default=1)
-gpgpu_num_rt_core_units                    1 # Number of rt core units (default=1)
-gpgpu_num_mem_units                    1 # Number if ldst units (default=1) WARNING: not hooked up to anything
-gpgpu_scheduler                      gto # Scheduler configuration: < lrr | gto | two_level_active > If two_level_active:<num_active_warps>:<inner_prioritization>:<outer_prioritization>For complete list of prioritization values see shader.h enum scheduler_prioritization_typeDefault: gto
-gpgpu_concurrent_kernel_sm                    0 # Support concurrent kernels on a SM (default = disabled)
-gpgpu_perfect_inst_const_cache                    1 # perfect inst and const cache mode, so all inst and const hits in the cache(default = disabled)
-gpgpu_inst_fetch_throughput                    4 # the number of fetched intruction per warp each cycle
-gpgpu_reg_file_port_throughput                    2 # the number ports of the register file
-specialized_unit_1         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_2         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_3         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_4         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_5         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_6         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_7         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_8         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-gpgpu_perf_sim_memcpy                    1 # Fill the L2 cache on memcpy
-gpgpu_simple_dram_model                    0 # simple_dram_model with fixed latency and BW
-gpgpu_dram_scheduler                    1 # 0 = fifo, 1 = FR-FCFS (defaul)
-gpgpu_dram_partition_queues          64:64:64:64 # i2$:$2d:d2$:$2i
-l2_ideal                               0 # Use a ideal L2 cache that always hit
-gpgpu_cache:dl2     S:64:128:16,L:B:m:L:P,A:192:4,32:0,32 # unified banked L2 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>}
-gpgpu_cache:dl2_texture_only                    0 # L2 cache used for texture only
-gpgpu_n_mem                            1 # number of memory modules (e.g. memory controllers) in gpu
-gpgpu_n_sub_partition_per_mchannel                    1 # number of memory subpartition in each memory module
-gpgpu_n_mem_per_ctrlr                    1 # number of memory chips per memory controller
-gpgpu_memlatency_stat                   14 # track and display latency statistics 0x2 enables MC, 0x4 enables queue logs
-gpgpu_frfcfs_dram_sched_queue_size                   64 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_return_queue_size                  192 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_buswidth                    2 # default = 4 bytes (8 bytes per cycle at DDR)
-gpgpu_dram_burst_length                    8 # Burst length of each DRAM request (default = 4 data bus cycle)
-dram_data_command_freq_ratio                    2 # Frequency ratio between DRAM data bus and command bus (default = 2 times, i.e. DDR)
-gpgpu_dram_timing_opt nbk=16:CCD=4:RRD=10:RCD=20:RAS=50:RP=20:RC=62: CL=20:WL=8:CDLR=9:WR=20:nbkgrp=4:CCDL=4:RTPL=4 # DRAM timing parameters = {nbk:tCCD:tRRD:tRCD:tRAS:tRP:tRC:CL:WL:tCDLR:tWR:nbkgrp:tCCDL:tRTPL}
-gpgpu_l2_rop_latency                  160 # ROP queue latency (default 85)
-dram_latency                         100 # DRAM latency (default 30)
-dram_dual_bus_interface                    0 # dual_bus_interface (default = 0) 
-dram_bnk_indexing_policy                    0 # dram_bnk_indexing_policy (0 = normal indexing, 1 = Xoring with the higher bits) (Default = 0)
-dram_bnkgrp_indexing_policy                    1 # dram_bnkgrp_indexing_policy (0 = take higher bits, 1 = take lower bits) (Default = 0)
-dram_seperate_write_queue_enable                    0 # Seperate_Write_Queue_Enable
-dram_write_queue_size             32:28:16 # Write_Queue_Size
-dram_elimnate_rw_turnaround                    0 # elimnate_rw_turnaround i.e set tWTR and tRTW = 0
-icnt_flit_size                        40 # icnt_flit_size
-gpgpu_mem_addr_mapping dramid@8;00000000.00000000.00000000.00000000.0000RRRR.RRRRRRRR.RBBBCCCC.BCCSSSSS # mapping memory address to dram model {dramid@<start bit>;<memory address map>}
-gpgpu_mem_addr_test                    0 # run sweep test to check address mapping for aliased address
-gpgpu_mem_address_mask                    1 # 0 = old addressing mask, 1 = new addressing mask, 2 = new add. mask + flipped bank sel and chip sel bits
-gpgpu_memory_partition_indexing                    0 # 0 = no indexing, 1 = bitwise xoring, 2 = IPoly, 3 = custom indexing
-gpuwattch_xml_file         gpuwattch.xml # GPUWattch XML file
-power_simulation_enabled                    0 # Turn on power simulator (1=On, 0=Off)
-power_per_cycle_dump                    0 # Dump detailed power output each cycle
-power_trace_enabled                    1 # produce a file for the power trace (1=On, 0=Off)
-power_trace_zlevel                     6 # Compression level of the power trace output log (0=no comp, 9=highest)
-steady_power_levels_enabled                    1 # produce a file for the steady power levels (1=On, 0=Off)
-steady_state_definition                  8:4 # allowed deviation:number of samples
-gpgpu_intermittent_stats                    0 # print intermittent stats
-gpgpu_intermittent_stats_freq                10000 # intermittent stats frequency
-gpgpu_max_cycle                        0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_insn                         0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_cta                          0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_completed_cta                    0 # terminates gpu simulation early (0 = no limit)
-gpgpu_runtime_stat                   500 # display runtime statistics such as dram utilization {<freq>:<flag>}
-liveness_message_freq                    1 # Minimum number of seconds between simulation liveness messages (0 = always print)
-gpgpu_compute_capability_major                    7 # Major compute capability version number
-gpgpu_compute_capability_minor                    5 # Minor compute capability version number
-gpgpu_flush_l1_cache                    1 # Flush L1 cache at the end of each kernel call
-gpgpu_flush_l2_cache                    0 # Flush L2 cache at the end of each kernel call
-gpgpu_deadlock_detect                    1 # Stop the simulation at deadlock (1=on (default), 0=off)
-gpgpu_ptx_instruction_classification                    1 # if enabled will classify ptx instruction types per kernel (Max 255 kernels now)
-gpgpu_ptx_sim_mode                     0 # Select between Performance (default) or Functional simulation (1)
-gpgpu_clock_domains 1365.0:1365.0:1365.0:3500.0 # Clock Domain Frequencies in MhZ {<Core Clock>:<ICNT Clock>:<L2 Clock>:<DRAM Clock>}
-gpgpu_max_concurrent_kernel                    8 # maximum kernels that can run concurrently on GPU
-gpgpu_cflog_interval                    0 # Interval between each snapshot in control flow logger
-visualizer_enabled                     1 # Turn on visualizer output (1=On, 0=Off)
-visualizer_outputfile     Characterization # Specifies the output log file for visualizer
-visualizer_zlevel                      6 # Compression level of the visualizer output log (0=no comp, 9=highest)
-gpgpu_stack_size_limit                 1024 # GPU thread stack size
-gpgpu_heap_size_limit              8388608 # GPU malloc heap size 
-gpgpu_runtime_sync_depth_limit                    2 # GPU device runtime synchronize depth
-gpgpu_runtime_pending_launch_count_limit                 2048 # GPU device runtime pending launch count
-trace_enabled                          0 # Turn on traces
-trace_components                    none # comma seperated list of traces to enable. Complete list found in trace_streams.tup. Default none
-trace_sampling_core                    0 # The core which is printed using CORE_DPRINTF. Default 0
-trace_sampling_memory_partition                   -1 # The memory partition which is printed using MEMPART_DPRINTF. Default -1 (i.e. all)
-enable_ptx_file_line_stats                    1 # Turn on PTX source line statistic profiling. (1 = On)
-ptx_line_stats_filename gpgpu_inst_stats.txt # Output file for PTX source line statistics.
-gpgpu_kernel_launch_latency                 5000 # Kernel launch latency in cycles. Default: 0
-gpgpu_cdp_enabled                      0 # Turn on CDP
-gpgpu_TB_launch_latency                    0 # thread block launch latency in cycles. Default: 0
-gpgpu_max_simulated_rt_kernels                    1 # Max simulated kernels, used to limit how many frames we render. Default: 0
-selected_coordinates /home/ggc/ray_tracing/Predictor/data/coordinates//chunk_2_1.coords # Filepath of the coordinates list to trace
Streaming cache with 8192 mshr
GPGPU-Sim: Ray Coherence Engine Settings:
	Enabled: No
	Max cycles: 100
	Max packets: 16
	Sorting hash: grid-spherical
	Bits: 3-2
DRAM Timing Options:
nbk                                    16 # number of banks
CCD                                     4 # column to column delay
RRD                                    10 # minimal delay between activation of rows in different banks
RCD                                    20 # row to column delay
RAS                                    50 # time needed to activate row
RP                                     20 # time needed to precharge (deactivate) row
RC                                     62 # row cycle time
CDLR                                    9 # switching from write to read (changes tWTR)
WR                                     20 # last data-in to row precharge
CL                                     20 # CAS latency
WL                                      8 # Write latency
nbkgrp                                  4 # number of bank groups
CCDL                                    4 # column to column delay between accesses to different bank groups
RTPL                                    4 # read to precharge delay between accesses to different bank groups
Total number of memory sub partition = 1
addr_dec_mask[CHIP]  = 0000000000000000 	high:64 low:0
addr_dec_mask[BK]    = 0000000000007080 	high:15 low:7
addr_dec_mask[ROW]   = 000000000fff8000 	high:28 low:15
addr_dec_mask[COL]   = 0000000000000f7f 	high:12 low:0
addr_dec_mask[BURST] = 000000000000001f 	high:5 low:0
sub_partition_id_mask = 0000000000000000
GPGPU-Sim uArch: clock freqs: 1365000000.000000:1365000000.000000:1365000000.000000:3500000000.000000
GPGPU-Sim uArch: clock periods: 0.00000000073260073260:0.00000000073260073260:0.00000000073260073260:0.00000000028571428571
*** Initializing Memory Statistics ***
GPGPU-Sim uArch: performance model initialization complete.
gpgpusim: binding gpgpusim buffer 0xc0000000 (size 9835452) to vulkan buffer 0x7f9f5d4be000
LVP: gpgpusim buffer size 9835452 allocated at 0xc0000000
RTV: Bind buffer memory for vkBuffer 0x556b94d64358
LVP: vkBuffer size 9835452 created at 0x556b96e2afb8
RTV: New vkBuffer created at 0x556b96e2afb8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9980b3f0; llvmpipe_resource 0x556b9980b3f0; pipe_memory_allocation 0x7f9f5c35a000;
LVP: Binding lvp_buffer 0x556b9980b370: buffer->bo: 0x556b9980b3f0; buffer->pmem: 0x7f9f5c35a000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc0961400 (size 9835452) to vulkan buffer 0x7f9f5c35a000
LVP: gpgpusim buffer size 9835452 allocated at 0xc0961400
RTV: Bind buffer memory for vkBuffer 0x556b96e2afb8
LVP: Finding mapped memory for mem 0x556b9980b600: mem->pmem 0x7f9f5c35a000 
LVP: Identified at 0x7f9f5c35a000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Indices of size 5984256
LVP: vkBuffer size 5984256 created at 0x556b96e2afb8
RTV: New vkBuffer created at 0x556b96e2afb8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9bd91f90; llvmpipe_resource 0x556b9bd91f90; pipe_memory_allocation 0x556b9bd93000;
LVP: Binding lvp_buffer 0x556b9980b600: buffer->bo: 0x556b9bd91f90; buffer->pmem: 0x556b9bd93000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc12c2800 (size 5984256) to vulkan buffer 0x556b9bd93000
LVP: gpgpusim buffer size 5984256 allocated at 0xc12c2800
RTV: Bind buffer memory for vkBuffer 0x556b96e2afb8
LVP: vkBuffer size 5984256 created at 0x556b9bd905a8
RTV: New vkBuffer created at 0x556b9bd905a8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da1b320; llvmpipe_resource 0x556b9da1b320; pipe_memory_allocation 0x556b9da1c000;
LVP: Binding lvp_buffer 0x556b9bd91e60: buffer->bo: 0x556b9da1b320; buffer->pmem: 0x556b9da1c000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1877800 (size 5984256) to vulkan buffer 0x556b9da1c000
LVP: gpgpusim buffer size 5984256 allocated at 0xc1877800
RTV: Bind buffer memory for vkBuffer 0x556b9bd905a8
LVP: Finding mapped memory for mem 0x556b9da1b530: mem->pmem 0x556b9da1c000 
LVP: Identified at 0x556b9da1c000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Materials of size 15584
LVP: vkBuffer size 15584 created at 0x556b9bd905a8
RTV: New vkBuffer created at 0x556b9bd905a8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da1c000; llvmpipe_resource 0x556b9da1c000; pipe_memory_allocation 0x556b9da1d000;
LVP: Binding lvp_buffer 0x556b9da1b530: buffer->bo: 0x556b9da1c000; buffer->pmem: 0x556b9da1d000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e2c800 (size 15584) to vulkan buffer 0x556b9da1d000
LVP: gpgpusim buffer size 15584 allocated at 0xc1e2c800
RTV: Bind buffer memory for vkBuffer 0x556b9bd905a8
LVP: vkBuffer size 15584 created at 0x556b9f6a45d8
RTV: New vkBuffer created at 0x556b9f6a45d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da2f470; llvmpipe_resource 0x556b9da2f470; pipe_memory_allocation 0x556b9da30000;
LVP: Binding lvp_buffer 0x556b9f6a4700: buffer->bo: 0x556b9da2f470; buffer->pmem: 0x556b9da30000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e30500 (size 15584) to vulkan buffer 0x556b9da30000
LVP: gpgpusim buffer size 15584 allocated at 0xc1e30500
RTV: Bind buffer memory for vkBuffer 0x556b9f6a45d8
LVP: Finding mapped memory for mem 0x556b9da2f680: mem->pmem 0x556b9da30000 
LVP: Identified at 0x556b9da30000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Offsets of size 3896
LVP: vkBuffer size 3896 created at 0x556b9f6a45d8
RTV: New vkBuffer created at 0x556b9f6a45d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da30000; llvmpipe_resource 0x556b9da30000; pipe_memory_allocation 0x556b9da31000;
LVP: Binding lvp_buffer 0x556b9da2f680: buffer->bo: 0x556b9da30000; buffer->pmem: 0x556b9da31000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e34200 (size 3896) to vulkan buffer 0x556b9da31000
LVP: gpgpusim buffer size 3896 allocated at 0xc1e34200
RTV: Bind buffer memory for vkBuffer 0x556b9f6a45d8
LVP: vkBuffer size 3896 created at 0x556b9da42798
RTV: New vkBuffer created at 0x556b9da42798
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da43d70; llvmpipe_resource 0x556b9da43d70; pipe_memory_allocation 0x556b9da44000;
LVP: Binding lvp_buffer 0x556b9da428c0: buffer->bo: 0x556b9da43d70; buffer->pmem: 0x556b9da44000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e35200 (size 3896) to vulkan buffer 0x556b9da44000
LVP: gpgpusim buffer size 3896 allocated at 0xc1e35200
RTV: Bind buffer memory for vkBuffer 0x556b9da42798
LVP: Finding mapped memory for mem 0x556b9da43f80: mem->pmem 0x556b9da44000 
LVP: Identified at 0x556b9da44000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer AABBs of size 11688
LVP: vkBuffer size 11688 created at 0x556b9da42798
RTV: New vkBuffer created at 0x556b9da42798
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da44000; llvmpipe_resource 0x556b9da44000; pipe_memory_allocation 0x556b9da49000;
LVP: Binding lvp_buffer 0x556b9da43f80: buffer->bo: 0x556b9da44000; buffer->pmem: 0x556b9da49000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e36200 (size 11688) to vulkan buffer 0x556b9da49000
LVP: gpgpusim buffer size 11688 allocated at 0xc1e36200
RTV: Bind buffer memory for vkBuffer 0x556b9da42798
LVP: vkBuffer size 11688 created at 0x556b9da48c68
RTV: New vkBuffer created at 0x556b9da48c68
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da566f0; llvmpipe_resource 0x556b9da566f0; pipe_memory_allocation 0x556b9da57000;
LVP: Binding lvp_buffer 0x556b9da48d90: buffer->bo: 0x556b9da566f0; buffer->pmem: 0x556b9da57000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e39000 (size 11688) to vulkan buffer 0x556b9da57000
LVP: gpgpusim buffer size 11688 allocated at 0xc1e39000
RTV: Bind buffer memory for vkBuffer 0x556b9da48c68
LVP: Finding mapped memory for mem 0x556b9da56900: mem->pmem 0x556b9da57000 
LVP: Identified at 0x556b9da57000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Procedurals of size 7792
LVP: vkBuffer size 7792 created at 0x556b9da48c68
RTV: New vkBuffer created at 0x556b9da48c68
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da57000; llvmpipe_resource 0x556b9da57000; pipe_memory_allocation 0x556b9da66000;
LVP: Binding lvp_buffer 0x556b9da56900: buffer->bo: 0x556b9da57000; buffer->pmem: 0x556b9da66000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e3be00 (size 7792) to vulkan buffer 0x556b9da66000
LVP: gpgpusim buffer size 7792 allocated at 0xc1e3be00
RTV: Bind buffer memory for vkBuffer 0x556b9da48c68
LVP: vkBuffer size 7792 created at 0x556b9da64e18
RTV: New vkBuffer created at 0x556b9da64e18
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da6bd60; llvmpipe_resource 0x556b9da6bd60; pipe_memory_allocation 0x556b9da6d000;
LVP: Binding lvp_buffer 0x556b9da64f40: buffer->bo: 0x556b9da6bd60; buffer->pmem: 0x556b9da6d000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e3dd00 (size 7792) to vulkan buffer 0x556b9da6d000
LVP: gpgpusim buffer size 7792 allocated at 0xc1e3dd00
RTV: Bind buffer memory for vkBuffer 0x556b9da64e18
LVP: Finding mapped memory for mem 0x556b9da6bf70: mem->pmem 0x556b9da6d000 
LVP: Identified at 0x556b9da6d000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer CubeAABBs of size 11688
LVP: vkBuffer size 11688 created at 0x556b9da64e18
RTV: New vkBuffer created at 0x556b9da64e18
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da6d000; llvmpipe_resource 0x556b9da6d000; pipe_memory_allocation 0x556b9da76000;
LVP: Binding lvp_buffer 0x556b9da6bf70: buffer->bo: 0x556b9da6d000; buffer->pmem: 0x556b9da76000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e3fc00 (size 11688) to vulkan buffer 0x556b9da76000
LVP: gpgpusim buffer size 11688 allocated at 0xc1e3fc00
RTV: Bind buffer memory for vkBuffer 0x556b9da64e18
LVP: vkBuffer size 11688 created at 0x556b9da75868
RTV: New vkBuffer created at 0x556b9da75868
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da82230; llvmpipe_resource 0x556b9da82230; pipe_memory_allocation 0x556b9da83000;
LVP: Binding lvp_buffer 0x556b9da75990: buffer->bo: 0x556b9da82230; buffer->pmem: 0x556b9da83000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e42a00 (size 11688) to vulkan buffer 0x556b9da83000
LVP: gpgpusim buffer size 11688 allocated at 0xc1e42a00
RTV: Bind buffer memory for vkBuffer 0x556b9da75868
LVP: Finding mapped memory for mem 0x556b9da82440: mem->pmem 0x556b9da83000 
LVP: Identified at 0x556b9da83000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer ProceduralCubes of size 7792
LVP: vkBuffer size 7792 created at 0x556b9da75868
RTV: New vkBuffer created at 0x556b9da75868
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da83000; llvmpipe_resource 0x556b9da83000; pipe_memory_allocation 0x556b9da91000;
LVP: Binding lvp_buffer 0x556b9da82440: buffer->bo: 0x556b9da83000; buffer->pmem: 0x556b9da91000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e45800 (size 7792) to vulkan buffer 0x556b9da91000
LVP: gpgpusim buffer size 7792 allocated at 0xc1e45800
RTV: Bind buffer memory for vkBuffer 0x556b9da75868
LVP: vkBuffer size 7792 created at 0x556b9da90958
RTV: New vkBuffer created at 0x556b9da90958
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da97800; llvmpipe_resource 0x556b9da97800; pipe_memory_allocation 0x556b9da98000;
LVP: Binding lvp_buffer 0x556b9da90a80: buffer->bo: 0x556b9da97800; buffer->pmem: 0x556b9da98000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e47700 (size 7792) to vulkan buffer 0x556b9da98000
LVP: gpgpusim buffer size 7792 allocated at 0xc1e47700
RTV: Bind buffer memory for vkBuffer 0x556b9da90958
LVP: Finding mapped memory for mem 0x556b9da97a10: mem->pmem 0x556b9da98000 
LVP: Identified at 0x556b9da98000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer CylinderAABBs of size 11688
LVP: vkBuffer size 11688 created at 0x556b9da90958
RTV: New vkBuffer created at 0x556b9da90958
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9da97800; llvmpipe_resource 0x556b9da97800; pipe_memory_allocation 0x556b9daa2000;
LVP: Binding lvp_buffer 0x556b9da97a10: buffer->bo: 0x556b9da97800; buffer->pmem: 0x556b9daa2000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e49600 (size 11688) to vulkan buffer 0x556b9daa2000
LVP: gpgpusim buffer size 11688 allocated at 0xc1e49600
RTV: Bind buffer memory for vkBuffer 0x556b9da90958
LVP: vkBuffer size 11688 created at 0x556b9daa1308
RTV: New vkBuffer created at 0x556b9daa1308
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9daad9b0; llvmpipe_resource 0x556b9daad9b0; pipe_memory_allocation 0x556b9daae000;
LVP: Binding lvp_buffer 0x556b9daa1430: buffer->bo: 0x556b9daad9b0; buffer->pmem: 0x556b9daae000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e4c400 (size 11688) to vulkan buffer 0x556b9daae000
LVP: gpgpusim buffer size 11688 allocated at 0xc1e4c400
RTV: Bind buffer memory for vkBuffer 0x556b9daa1308
LVP: Finding mapped memory for mem 0x556b9daadbc0: mem->pmem 0x556b9daae000 
LVP: Identified at 0x556b9daae000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer ProceduralCylinders of size 7792
LVP: vkBuffer size 7792 created at 0x556b9daa1308
RTV: New vkBuffer created at 0x556b9daa1308
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9daad9b0; llvmpipe_resource 0x556b9daad9b0; pipe_memory_allocation 0x556b9dabd000;
LVP: Binding lvp_buffer 0x556b9daadbc0: buffer->bo: 0x556b9daad9b0; buffer->pmem: 0x556b9dabd000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e4f200 (size 7792) to vulkan buffer 0x556b9dabd000
LVP: gpgpusim buffer size 7792 allocated at 0xc1e4f200
RTV: Bind buffer memory for vkBuffer 0x556b9daa1308
LVP: vkBuffer size 7792 created at 0x556b9dabc498
RTV: New vkBuffer created at 0x556b9dabc498
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dac3000; llvmpipe_resource 0x556b9dac3000; pipe_memory_allocation 0x556b9dac4000;
LVP: Binding lvp_buffer 0x556b9dabc5c0: buffer->bo: 0x556b9dac3000; buffer->pmem: 0x556b9dac4000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e51100 (size 7792) to vulkan buffer 0x556b9dac4000
LVP: gpgpusim buffer size 7792 allocated at 0xc1e51100
RTV: Bind buffer memory for vkBuffer 0x556b9dabc498
LVP: Finding mapped memory for mem 0x556b9dac3210: mem->pmem 0x556b9dac4000 
LVP: Identified at 0x556b9dac4000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
LVP: vkBuffer size 4 created at 0x556b9da1cfd8
RTV: New vkBuffer created at 0x556b9da1cfd8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dac3000; llvmpipe_resource 0x556b9dac3000; pipe_memory_allocation 0x556b9dac4000;
LVP: Binding lvp_buffer 0x556b9dac3210: buffer->bo: 0x556b9dac3000; buffer->pmem: 0x556b9dac4000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e53000 (size 4) to vulkan buffer 0x556b9dac4000
LVP: gpgpusim buffer size 4 allocated at 0xc1e53000
RTV: Bind buffer memory for vkBuffer 0x556b9da1cfd8
LVP: Finding mapped memory for mem 0x556b9dabc5c0: mem->pmem 0x556b9dac4000 
LVP: Identified at 0x556b9dac4000
LVP: Image created at 0x556b9dac3fe8
RTV: Creating image at 0x556b9dac4020
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dac40e0; llvmpipe_resource 0x556b9dac40e0; pipe_memory_allocation 0x556b9dac5000;
gpgpusim: binding gpgpusim buffer 0xc1e53100 (size 256) to vulkan buffer 0x556b9dac5000
LVP: Image 0x556b9dac4020 bound to pmem 0x556b9dac5000 using pointer 0xc1e53100
LVP: Creating image_view for image 0x556b9dac4020
RTV: Creating image view at 0x556b9dac46d0
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER_TO_IMAGE2
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x180
RTV: Rounding size of BVH structure up to 0x200
RTV: Total accel structure size = 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + 0x200 + ... = 0x3ce00
LVP: vkBuffer size 249344 created at 0x556b9dac48e8
RTV: New vkBuffer created at 0x556b9dac48e8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dad4640; llvmpipe_resource 0x556b9dad4640; pipe_memory_allocation 0x556b9daf6000;
LVP: Binding lvp_buffer 0x556b9dabc5c0: buffer->bo: 0x556b9dad4640; buffer->pmem: 0x556b9daf6000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e53200 (size 249344) to vulkan buffer 0x556b9daf6000
LVP: gpgpusim buffer size 249344 allocated at 0xc1e53200
RTV: Bind buffer memory for vkBuffer 0x556b9dac48e8
LVP: vkBuffer size 62336 created at 0x556b967266f8
RTV: New vkBuffer created at 0x556b967266f8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dc0fd50; llvmpipe_resource 0x556b9dc0fd50; pipe_memory_allocation 0x556b9dc10000;
LVP: Binding lvp_buffer 0x556b9dac49f0: buffer->bo: 0x556b9dc0fd50; buffer->pmem: 0x556b9dc10000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e90000 (size 62336) to vulkan buffer 0x556b9dc10000
LVP: gpgpusim buffer size 62336 allocated at 0xc1e90000
RTV: Bind buffer memory for vkBuffer 0x556b967266f8
RTV: Created buffer for 0x3ce00 size BLAS at 0x556b9dabc5c0
RTV: Creating bottom level acceleration structure 0...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x0 = 0x556b9daf6000 allocated to accel structure 0x556b959108b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6000 to 0xc1e53200
RTV: Building BLAS into 0x556b959108b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1000.000, -2000.000, -1000.000), (1000.000, 0.000, 1000.000)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x0 for accel 0x556b959108b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 1...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x200 = 0x556b9daf6200 allocated to accel structure 0x556b94e52590
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6200 to 0xc1e53200
RTV: Building BLAS into 0x556b94e52590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.344, 0.000, -10.483), (-9.944, 0.400, -10.083)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x200 for accel 0x556b94e52590
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 2...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x400 = 0x556b9daf6400 allocated to accel structure 0x556b94e52150
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6400 to 0xc1e53200
RTV: Building BLAS into 0x556b94e52150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-11.110, 0.000, -10.060), (-10.710, 0.400, -9.660)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x400 for accel 0x556b94e52150
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 3...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x600 = 0x556b9daf6600 allocated to accel structure 0x556b94e52210
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6600 to 0xc1e53200
RTV: Building BLAS into 0x556b94e52210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-11.181, 0.000, -8.614), (-10.781, 0.400, -8.214)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x600 for accel 0x556b94e52210
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 4...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x800 = 0x556b9daf6800 allocated to accel structure 0x556b958e80c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6800 to 0xc1e53200
RTV: Building BLAS into 0x556b958e80c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.307, 0.000, -8.036), (-9.907, 0.400, -7.636)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x800 for accel 0x556b958e80c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 5...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xa00 = 0x556b9daf6a00 allocated to accel structure 0x556b9dc5cbf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5cbf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.938, 0.000, -7.179), (-10.538, 0.400, -6.779)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xa00 for accel 0x556b9dc5cbf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 6...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xc00 = 0x556b9daf6c00 allocated to accel structure 0x556b9dc5cc90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5cc90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.991, 0.000, -5.870), (-10.591, 0.400, -5.470)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xc00 for accel 0x556b9dc5cc90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 7...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xe00 = 0x556b9daf6e00 allocated to accel structure 0x556b9dc5cd30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf6e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5cd30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.493, 0.000, -5.118), (-10.093, 0.400, -4.718)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf6e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xe00 for accel 0x556b9dc5cd30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf6e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf6e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 8...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1000 = 0x556b9daf7000 allocated to accel structure 0x556b9dc5cdd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5cdd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.426, 0.000, -4.158), (-10.026, 0.400, -3.758)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1000 for accel 0x556b9dc5cdd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 9...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1200 = 0x556b9daf7200 allocated to accel structure 0x556b9dc5ce70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ce70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.331, 0.000, -2.352), (-9.931, 0.400, -1.952)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1200 for accel 0x556b9dc5ce70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 10...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1400 = 0x556b9daf7400 allocated to accel structure 0x556b9dc5cf10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5cf10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.992, 0.000, -2.112), (-10.592, 0.400, -1.712)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1400 for accel 0x556b9dc5cf10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 11...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1600 = 0x556b9daf7600 allocated to accel structure 0x556b9dc5cfb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5cfb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-11.169, 0.000, -0.450), (-10.769, 0.400, -0.050)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1600 for accel 0x556b9dc5cfb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 12...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1800 = 0x556b9daf7800 allocated to accel structure 0x556b9dc5d050
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.817, 0.000, 0.081), (-10.417, 0.400, 0.481)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1800 for accel 0x556b9dc5d050
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 13...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1a00 = 0x556b9daf7a00 allocated to accel structure 0x556b9dc5d0f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d0f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.502, 0.000, 1.558), (-10.102, 0.400, 1.958)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1a00 for accel 0x556b9dc5d0f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 14...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1c00 = 0x556b9daf7c00 allocated to accel structure 0x556b9dc5d190
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.844, 0.000, 2.646), (-10.444, 0.400, 3.046)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1c00 for accel 0x556b9dc5d190
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 15...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1e00 = 0x556b9daf7e00 allocated to accel structure 0x556b9dc5d230
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf7e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-11.024, 0.000, 3.313), (-10.624, 0.400, 3.713)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf7e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1e00 for accel 0x556b9dc5d230
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf7e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf7e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 16...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2000 = 0x556b9daf8000 allocated to accel structure 0x556b9dc5d2d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d2d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.714, 0.000, 4.044), (-10.314, 0.400, 4.444)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2000 for accel 0x556b9dc5d2d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 17...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2200 = 0x556b9daf8200 allocated to accel structure 0x556b9dc5d3a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d3a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-11.073, 0.000, 5.048), (-10.673, 0.400, 5.448)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2200 for accel 0x556b9dc5d3a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 18...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2400 = 0x556b9daf8400 allocated to accel structure 0x556b9dc5d440
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d440
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.845, 0.000, 6.495), (-10.445, 0.400, 6.895)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2400 for accel 0x556b9dc5d440
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 19...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2600 = 0x556b9daf8600 allocated to accel structure 0x556b9dc5d4e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d4e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.544, 0.000, 7.440), (-10.144, 0.400, 7.840)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2600 for accel 0x556b9dc5d4e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 20...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2800 = 0x556b9daf8800 allocated to accel structure 0x556b9dc5d580
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d580
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.377, 0.000, 7.904), (-9.977, 0.400, 8.304)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2800 for accel 0x556b9dc5d580
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 21...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2a00 = 0x556b9daf8a00 allocated to accel structure 0x556b9dc5d620
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d620
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.920, 0.000, 9.134), (-10.520, 0.400, 9.534)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2a00 for accel 0x556b9dc5d620
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 22...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2c00 = 0x556b9daf8c00 allocated to accel structure 0x556b9dc5d6c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d6c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.695, 0.000, 10.598), (-10.295, 0.400, 10.998)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2c00 for accel 0x556b9dc5d6c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 23...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2e00 = 0x556b9daf8e00 allocated to accel structure 0x556b9dc5d760
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf8e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d760
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.695, 0.000, -10.550), (-9.295, 0.400, -10.150)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf8e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2e00 for accel 0x556b9dc5d760
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf8e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf8e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 24...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3000 = 0x556b9daf9000 allocated to accel structure 0x556b9dc5d830
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.100, 0.000, -9.815), (-9.700, 0.400, -9.415)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3000 for accel 0x556b9dc5d830
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 25...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3200 = 0x556b9daf9200 allocated to accel structure 0x556b9dc5d8d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d8d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.917, 0.000, -8.772), (-9.517, 0.400, -8.372)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3200 for accel 0x556b9dc5d8d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 26...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3400 = 0x556b9daf9400 allocated to accel structure 0x556b9dc5d970
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5d970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.714, 0.000, -7.831), (-9.314, 0.400, -7.431)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3400 for accel 0x556b9dc5d970
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 27...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3600 = 0x556b9daf9600 allocated to accel structure 0x556b9dc5da10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5da10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.055, 0.000, -6.575), (-9.655, 0.400, -6.175)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3600 for accel 0x556b9dc5da10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 28...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3800 = 0x556b9daf9800 allocated to accel structure 0x556b9dc5dab0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5dab0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.789, 0.000, -5.416), (-9.389, 0.400, -5.016)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3800 for accel 0x556b9dc5dab0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 29...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3a00 = 0x556b9daf9a00 allocated to accel structure 0x556b9dc5db50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5db50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.473, 0.000, -4.908), (-9.073, 0.400, -4.508)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3a00 for accel 0x556b9dc5db50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 30...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3c00 = 0x556b9daf9c00 allocated to accel structure 0x556b9dc5dbf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5dbf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.617, 0.000, -3.995), (-9.217, 0.400, -3.595)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3c00 for accel 0x556b9dc5dbf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 31...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3e00 = 0x556b9daf9e00 allocated to accel structure 0x556b9dc5dc90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daf9e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5dc90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.740, 0.000, -3.052), (-9.340, 0.400, -2.652)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daf9e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3e00 for accel 0x556b9dc5dc90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daf9e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daf9e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 32...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4000 = 0x556b9dafa000 allocated to accel structure 0x556b9dc5dd30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafa000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5dd30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.980, 0.000, -1.896), (-9.580, 0.400, -1.496)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafa000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4000 for accel 0x556b9dc5dd30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafa000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafa040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 33...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4200 = 0x556b9dafa200 allocated to accel structure 0x556b9dc5ddd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafa200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ddd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.873, 0.000, -0.837), (-9.473, 0.400, -0.437)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafa200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4200 for accel 0x556b9dc5ddd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafa200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafa240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 34...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4400 = 0x556b9dafa400 allocated to accel structure 0x556b9dc5de70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafa400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5de70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.559, 0.000, 0.248), (-9.159, 0.400, 0.648)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafa400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4400 for accel 0x556b9dc5de70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafa400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafa440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 35...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4600 = 0x556b9dafa600 allocated to accel structure 0x556b9dc5df10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafa600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5df10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.748, 0.000, 1.679), (-9.348, 0.400, 2.079)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafa600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4600 for accel 0x556b9dc5df10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafa600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafa640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 36...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4800 = 0x556b9dafa800 allocated to accel structure 0x556b9dc5dfb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafa800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5dfb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.587, 0.000, 2.016), (-9.187, 0.400, 2.416)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafa800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4800 for accel 0x556b9dc5dfb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafa800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafa840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 37...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4a00 = 0x556b9dafaa00 allocated to accel structure 0x556b9dc5e050
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafaa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.595, 0.000, 3.333), (-9.195, 0.400, 3.733)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafaa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4a00 for accel 0x556b9dc5e050
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafaa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafaa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 38...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4c00 = 0x556b9dafac00 allocated to accel structure 0x556b9dc5e0f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafac00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e0f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.777, 0.000, 4.131), (-9.377, 0.400, 4.531)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafac00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4c00 for accel 0x556b9dc5e0f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafac00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafac40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 39...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x4e00 = 0x556b9dafae00 allocated to accel structure 0x556b9dc5e190
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafae00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-10.119, 0.000, 5.535), (-9.719, 0.400, 5.935)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafae00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x4e00 for accel 0x556b9dc5e190
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafae00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafae40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 40...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5000 = 0x556b9dafb000 allocated to accel structure 0x556b9dc5e230
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafb000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.427, 0.000, 5.837), (-9.027, 0.400, 6.237)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafb000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5000 for accel 0x556b9dc5e230
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafb000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafb040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 41...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5200 = 0x556b9dafb200 allocated to accel structure 0x556b9dc5e2d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafb200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e2d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.996, 0.000, 7.529), (-9.596, 0.400, 7.929)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafb200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5200 for accel 0x556b9dc5e2d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafb200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafb240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 42...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5400 = 0x556b9dafb400 allocated to accel structure 0x556b9dc5e370
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafb400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.734, 0.000, 8.148), (-9.334, 0.400, 8.548)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafb400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5400 for accel 0x556b9dc5e370
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafb400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafb440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 43...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5600 = 0x556b9dafb600 allocated to accel structure 0x556b9dc5e410
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafb600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e410
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.368, 0.000, 8.988), (-8.968, 0.400, 9.388)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafb600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5600 for accel 0x556b9dc5e410
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafb600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafb640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 44...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5800 = 0x556b9dafb800 allocated to accel structure 0x556b9dc5e4b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafb800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e4b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.316, 0.000, 10.536), (-8.916, 0.400, 10.936)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafb800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5800 for accel 0x556b9dc5e4b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafb800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafb840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 45...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5a00 = 0x556b9dafba00 allocated to accel structure 0x556b9dc5e550
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafba00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.393, 0.000, -10.331), (-7.993, 0.400, -9.931)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafba00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5a00 for accel 0x556b9dc5e550
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafba00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafba40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 46...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5c00 = 0x556b9dafbc00 allocated to accel structure 0x556b9dc5e5f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafbc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e5f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.570, 0.000, -9.886), (-8.170, 0.400, -9.486)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafbc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5c00 for accel 0x556b9dc5e5f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafbc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafbc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 47...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x5e00 = 0x556b9dafbe00 allocated to accel structure 0x556b9dc5e690
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafbe00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.622, 0.000, -8.401), (-8.222, 0.400, -8.001)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafbe00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x5e00 for accel 0x556b9dc5e690
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafbe00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafbe40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 48...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6000 = 0x556b9dafc000 allocated to accel structure 0x556b9dc5e730
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafc000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e730
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.677, 0.000, -7.654), (-8.277, 0.400, -7.254)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafc000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6000 for accel 0x556b9dc5e730
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafc000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafc040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 49...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6200 = 0x556b9dafc200 allocated to accel structure 0x556b9dc5e7d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafc200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e7d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.055, 0.000, -6.944), (-8.655, 0.400, -6.544)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafc200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6200 for accel 0x556b9dc5e7d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafc200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafc240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 50...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6400 = 0x556b9dafc400 allocated to accel structure 0x556b9dc5e870
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafc400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e870
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.042, 0.000, -5.998), (-8.642, 0.400, -5.598)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafc400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6400 for accel 0x556b9dc5e870
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafc400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafc440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 51...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6600 = 0x556b9dafc600 allocated to accel structure 0x556b9dc5e910
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafc600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.986, 0.000, -5.184), (-8.586, 0.400, -4.784)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafc600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6600 for accel 0x556b9dc5e910
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafc600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafc640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 52...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6800 = 0x556b9dafc800 allocated to accel structure 0x556b9dc5e9b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafc800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5e9b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.551, 0.000, -3.436), (-8.151, 0.400, -3.036)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafc800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6800 for accel 0x556b9dc5e9b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafc800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafc840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 53...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6a00 = 0x556b9dafca00 allocated to accel structure 0x556b9dc5ea50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafca00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ea50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.961, 0.000, -2.627), (-8.561, 0.400, -2.227)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafca00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6a00 for accel 0x556b9dc5ea50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafca00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafca40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 54...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6c00 = 0x556b9dafcc00 allocated to accel structure 0x556b9dc5eaf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafcc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5eaf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.385, 0.000, -1.397), (-7.985, 0.400, -0.997)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafcc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6c00 for accel 0x556b9dc5eaf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafcc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafcc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 55...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x6e00 = 0x556b9dafce00 allocated to accel structure 0x556b9dc5eb90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafce00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5eb90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.757, 0.000, -0.598), (-8.357, 0.400, -0.198)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafce00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x6e00 for accel 0x556b9dc5eb90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafce00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafce40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 56...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7000 = 0x556b9dafd000 allocated to accel structure 0x556b9dc5ec30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafd000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ec30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.508, 0.000, -0.178), (-8.108, 0.400, 0.222)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafd000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7000 for accel 0x556b9dc5ec30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafd000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafd040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 57...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7200 = 0x556b9dafd200 allocated to accel structure 0x556b9dc5ecd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafd200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ecd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.377, 0.000, 1.052), (-7.977, 0.400, 1.452)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafd200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7200 for accel 0x556b9dc5ecd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafd200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafd240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 58...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7400 = 0x556b9dafd400 allocated to accel structure 0x556b9dc5ed70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafd400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ed70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.527, 0.000, 2.133), (-8.127, 0.400, 2.533)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafd400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7400 for accel 0x556b9dc5ed70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafd400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafd440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 59...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7600 = 0x556b9dafd600 allocated to accel structure 0x556b9dc5ee10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafd600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ee10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.330, 0.000, 3.297), (-7.930, 0.400, 3.697)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafd600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7600 for accel 0x556b9dc5ee10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafd600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafd640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 60...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7800 = 0x556b9dafd800 allocated to accel structure 0x556b9dc5eeb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafd800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5eeb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.028, 0.000, 4.147), (-8.628, 0.400, 4.547)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafd800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7800 for accel 0x556b9dc5eeb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafd800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafd840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 61...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7a00 = 0x556b9dafda00 allocated to accel structure 0x556b9dc5ef50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafda00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ef50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.357, 0.000, 5.155), (-7.957, 0.400, 5.555)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafda00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7a00 for accel 0x556b9dc5ef50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafda00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafda40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 62...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7c00 = 0x556b9dafdc00 allocated to accel structure 0x556b9dc5eff0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafdc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5eff0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.596, 0.000, 6.354), (-8.196, 0.400, 6.754)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafdc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7c00 for accel 0x556b9dc5eff0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafdc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafdc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 63...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x7e00 = 0x556b9dafde00 allocated to accel structure 0x556b9dc5f090
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafde00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.533, 0.000, 7.090), (-8.133, 0.400, 7.490)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafde00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x7e00 for accel 0x556b9dc5f090
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafde00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafde40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 64...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8000 = 0x556b9dafe000 allocated to accel structure 0x556b9dc5f130
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafe000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.702, 0.000, 8.124), (-8.302, 0.400, 8.524)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafe000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8000 for accel 0x556b9dc5f130
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafe000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafe040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 65...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8200 = 0x556b9dafe200 allocated to accel structure 0x556b9dc5f1d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafe200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f1d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.378, 0.000, 9.350), (-7.978, 0.400, 9.750)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafe200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8200 for accel 0x556b9dc5f1d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafe200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafe240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 66...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8400 = 0x556b9dafe400 allocated to accel structure 0x556b9dc5f270
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafe400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-9.025, 0.000, 10.518), (-8.625, 0.400, 10.918)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafe400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8400 for accel 0x556b9dc5f270
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafe400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafe440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 67...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8600 = 0x556b9dafe600 allocated to accel structure 0x556b9dc5f310
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafe600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f310
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.896, 0.000, -10.402), (-7.496, 0.400, -10.002)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafe600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8600 for accel 0x556b9dc5f310
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafe600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafe640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 68...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8800 = 0x556b9dafe800 allocated to accel structure 0x556b9dc5f3b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafe800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f3b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.595, 0.000, -9.680), (-7.195, 0.400, -9.280)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafe800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8800 for accel 0x556b9dc5f3b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafe800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafe840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 69...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8a00 = 0x556b9dafea00 allocated to accel structure 0x556b9dc5f450
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafea00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.668, 0.000, -8.445), (-7.268, 0.400, -8.045)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafea00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8a00 for accel 0x556b9dc5f450
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafea00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafea40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 70...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8c00 = 0x556b9dafec00 allocated to accel structure 0x556b9dc5f4f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafec00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f4f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.717, 0.000, -7.876), (-7.317, 0.400, -7.476)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafec00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8c00 for accel 0x556b9dc5f4f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafec00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafec40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 71...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x8e00 = 0x556b9dafee00 allocated to accel structure 0x556b9dc5f590
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9dafee00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.639, 0.000, -6.331), (-7.239, 0.400, -5.931)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9dafee00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x8e00 for accel 0x556b9dc5f590
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9dafee00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9dafee40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 72...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9000 = 0x556b9daff000 allocated to accel structure 0x556b9dc5f630
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daff000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f630
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.570, 0.000, -5.713), (-7.170, 0.400, -5.313)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daff000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9000 for accel 0x556b9dc5f630
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daff000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daff040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 73...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9200 = 0x556b9daff200 allocated to accel structure 0x556b9dc5f6d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daff200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f6d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.909, 0.000, -4.557), (-7.509, 0.400, -4.157)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daff200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9200 for accel 0x556b9dc5f6d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daff200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daff240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 74...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9400 = 0x556b9daff400 allocated to accel structure 0x556b9dc5f770
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daff400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f770
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.974, 0.000, -4.129), (-7.574, 0.400, -3.729)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daff400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9400 for accel 0x556b9dc5f770
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daff400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daff440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 75...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9600 = 0x556b9daff600 allocated to accel structure 0x556b9dc5f810
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daff600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f810
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.832, 0.000, -2.580), (-7.432, 0.400, -2.180)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daff600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9600 for accel 0x556b9dc5f810
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daff600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daff640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 76...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9800 = 0x556b9daff800 allocated to accel structure 0x556b9dc5f8b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daff800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f8b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.116, 0.000, -1.706), (-7.716, 0.400, -1.306)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daff800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9800 for accel 0x556b9dc5f8b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daff800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daff840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 77...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9a00 = 0x556b9daffa00 allocated to accel structure 0x556b9dc5f950
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daffa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.536, 0.000, -0.735), (-7.136, 0.400, -0.335)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daffa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9a00 for accel 0x556b9dc5f950
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daffa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daffa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 78...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9c00 = 0x556b9daffc00 allocated to accel structure 0x556b9dc5f9f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daffc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5f9f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.808, 0.000, 0.299), (-7.408, 0.400, 0.699)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daffc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9c00 for accel 0x556b9dc5f9f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daffc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daffc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 79...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x9e00 = 0x556b9daffe00 allocated to accel structure 0x556b9dc5fa90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9daffe00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fa90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.518, 0.000, 0.943), (-7.118, 0.400, 1.343)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9daffe00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x9e00 for accel 0x556b9dc5fa90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9daffe00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9daffe40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 80...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xa000 = 0x556b9db00000 allocated to accel structure 0x556b9dc5fb30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fb30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.920, 0.000, 1.837), (-7.520, 0.400, 2.237)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xa000 for accel 0x556b9dc5fb30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 81...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xa200 = 0x556b9db00200 allocated to accel structure 0x556b9dc5c640
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5c640
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.758, 0.000, 3.487), (-7.358, 0.400, 3.887)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xa200 for accel 0x556b9dc5c640
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 82...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xa400 = 0x556b9db00400 allocated to accel structure 0x556b9dc5fc70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fc70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-8.157, 0.000, 4.159), (-7.757, 0.400, 4.559)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xa400 for accel 0x556b9dc5fc70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 83...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xa600 = 0x556b9db00600 allocated to accel structure 0x556b9dc5fd10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fd10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.637, 0.000, 4.814), (-7.237, 0.400, 5.214)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xa600 for accel 0x556b9dc5fd10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 84...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xa800 = 0x556b9db00800 allocated to accel structure 0x556b9dc5fdb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fdb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.646, 0.000, 5.947), (-7.246, 0.400, 6.347)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xa800 for accel 0x556b9dc5fdb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 85...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xaa00 = 0x556b9db00a00 allocated to accel structure 0x556b9dc5fe50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fe50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.354, 0.000, 7.373), (-6.954, 0.400, 7.773)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xaa00 for accel 0x556b9dc5fe50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 86...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xac00 = 0x556b9db00c00 allocated to accel structure 0x556b9dc5fef0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fef0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.470, 0.000, 8.212), (-7.070, 0.400, 8.612)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xac00 for accel 0x556b9dc5fef0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 87...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xae00 = 0x556b9db00e00 allocated to accel structure 0x556b9dc5ff90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db00e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5ff90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.385, 0.000, 9.386), (-6.985, 0.400, 9.786)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db00e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xae00 for accel 0x556b9dc5ff90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db00e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db00e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 88...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xb000 = 0x556b9db01000 allocated to accel structure 0x556b9dc60030
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60030
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.953, 0.000, 9.976), (-7.553, 0.400, 10.376)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xb000 for accel 0x556b9dc60030
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 89...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xb200 = 0x556b9db01200 allocated to accel structure 0x556b9dc600d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc600d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.585, 0.000, -10.644), (-6.185, 0.400, -10.244)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xb200 for accel 0x556b9dc600d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 90...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xb400 = 0x556b9db01400 allocated to accel structure 0x556b9dc60170
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60170
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.893, 0.000, -10.179), (-6.493, 0.400, -9.779)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xb400 for accel 0x556b9dc60170
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 91...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xb600 = 0x556b9db01600 allocated to accel structure 0x556b9dc60210
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.634, 0.000, -8.886), (-6.234, 0.400, -8.486)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xb600 for accel 0x556b9dc60210
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 92...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xb800 = 0x556b9db01800 allocated to accel structure 0x556b9dc602b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc602b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.707, 0.000, -7.946), (-6.307, 0.400, -7.546)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xb800 for accel 0x556b9dc602b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 93...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xba00 = 0x556b9db01a00 allocated to accel structure 0x556b9dc60350
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60350
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.524, 0.000, -6.819), (-6.124, 0.400, -6.419)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xba00 for accel 0x556b9dc60350
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 94...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xbc00 = 0x556b9db01c00 allocated to accel structure 0x556b9dc603f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc603f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.975, 0.000, -5.865), (-6.575, 0.400, -5.465)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xbc00 for accel 0x556b9dc603f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 95...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xbe00 = 0x556b9db01e00 allocated to accel structure 0x556b9dc60490
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db01e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60490
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.814, 0.000, -4.985), (-6.414, 0.400, -4.585)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db01e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xbe00 for accel 0x556b9dc60490
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db01e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db01e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 96...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xc000 = 0x556b9db02000 allocated to accel structure 0x556b9dc60530
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60530
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.860, 0.000, -4.107), (-6.460, 0.400, -3.707)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xc000 for accel 0x556b9dc60530
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 97...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xc200 = 0x556b9db02200 allocated to accel structure 0x556b9dc605d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc605d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.394, 0.000, -2.932), (-5.994, 0.400, -2.532)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xc200 for accel 0x556b9dc605d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 98...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xc400 = 0x556b9db02400 allocated to accel structure 0x556b9dc60670
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60670
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.881, 0.000, -2.118), (-6.481, 0.400, -1.718)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xc400 for accel 0x556b9dc60670
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 99...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xc600 = 0x556b9db02600 allocated to accel structure 0x556b9dc60710
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60710
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.684, 0.000, -0.766), (-6.284, 0.400, -0.366)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xc600 for accel 0x556b9dc60710
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 100...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xc800 = 0x556b9db02800 allocated to accel structure 0x556b9dc607b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc607b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.125, 0.000, 0.369), (-6.725, 0.400, 0.769)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xc800 for accel 0x556b9dc607b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 101...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xca00 = 0x556b9db02a00 allocated to accel structure 0x556b9dc60850
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60850
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.523, 0.000, 0.991), (-6.123, 0.400, 1.391)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xca00 for accel 0x556b9dc60850
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 102...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xcc00 = 0x556b9db02c00 allocated to accel structure 0x556b9dc608f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc608f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.323, 0.000, 2.245), (-5.923, 0.400, 2.645)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xcc00 for accel 0x556b9dc608f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 103...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xce00 = 0x556b9db02e00 allocated to accel structure 0x556b9dc60990
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db02e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60990
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.401, 0.000, 3.463), (-6.001, 0.400, 3.863)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db02e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xce00 for accel 0x556b9dc60990
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db02e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db02e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 104...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xd000 = 0x556b9db03000 allocated to accel structure 0x556b9dc60a30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60a30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.447, 0.000, 4.485), (-6.047, 0.400, 4.885)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xd000 for accel 0x556b9dc60a30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 105...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xd200 = 0x556b9db03200 allocated to accel structure 0x556b9dc60b40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60b40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-7.135, 0.000, 5.000), (-6.735, 0.400, 5.400)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xd200 for accel 0x556b9dc60b40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 106...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xd400 = 0x556b9db03400 allocated to accel structure 0x556b9dc60ba0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60ba0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.990, 0.000, 5.876), (-6.590, 0.400, 6.276)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xd400 for accel 0x556b9dc60ba0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 107...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xd600 = 0x556b9db03600 allocated to accel structure 0x556b9dc64c40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64c40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.347, 0.000, 7.013), (-5.947, 0.400, 7.413)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xd600 for accel 0x556b9dc64c40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 108...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xd800 = 0x556b9db03800 allocated to accel structure 0x556b9dc64ce0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64ce0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.563, 0.000, 8.139), (-6.163, 0.400, 8.539)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xd800 for accel 0x556b9dc64ce0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 109...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xda00 = 0x556b9db03a00 allocated to accel structure 0x556b9dc5c7c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5c7c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.384, 0.000, 9.024), (-5.984, 0.400, 9.424)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xda00 for accel 0x556b9dc5c7c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 110...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xdc00 = 0x556b9db03c00 allocated to accel structure 0x556b9dc64df0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64df0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.686, 0.000, 10.222), (-6.286, 0.400, 10.622)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xdc00 for accel 0x556b9dc64df0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 111...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xde00 = 0x556b9db03e00 allocated to accel structure 0x556b9dc64e90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db03e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64e90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.529, 0.000, -10.530), (-5.129, 0.400, -10.130)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db03e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xde00 for accel 0x556b9dc64e90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db03e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db03e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 112...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xe000 = 0x556b9db04000 allocated to accel structure 0x556b9dc64f30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64f30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.125, 0.000, -9.943), (-5.725, 0.400, -9.543)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xe000 for accel 0x556b9dc64f30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 113...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xe200 = 0x556b9db04200 allocated to accel structure 0x556b9dc64fd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64fd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.327, 0.000, -8.320), (-4.927, 0.400, -7.920)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xe200 for accel 0x556b9dc64fd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 114...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xe400 = 0x556b9db04400 allocated to accel structure 0x556b9dc65070
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65070
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.373, 0.000, -7.306), (-4.973, 0.400, -6.906)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xe400 for accel 0x556b9dc65070
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 115...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xe600 = 0x556b9db04600 allocated to accel structure 0x556b9dc65110
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65110
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.729, 0.000, -7.132), (-5.329, 0.400, -6.732)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xe600 for accel 0x556b9dc65110
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 116...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xe800 = 0x556b9db04800 allocated to accel structure 0x556b9dc651b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc651b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.005, 0.000, -5.634), (-5.605, 0.400, -5.234)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xe800 for accel 0x556b9dc651b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 117...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xea00 = 0x556b9db04a00 allocated to accel structure 0x556b9dc65250
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65250
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.389, 0.000, -4.854), (-4.989, 0.400, -4.454)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xea00 for accel 0x556b9dc65250
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 118...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xec00 = 0x556b9db04c00 allocated to accel structure 0x556b9dc652f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc652f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.845, 0.000, -3.399), (-5.445, 0.400, -2.999)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xec00 for accel 0x556b9dc652f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 119...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xee00 = 0x556b9db04e00 allocated to accel structure 0x556b9dc65390
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db04e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65390
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.783, 0.000, -2.618), (-5.383, 0.400, -2.218)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db04e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xee00 for accel 0x556b9dc65390
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db04e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db04e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 120...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xf000 = 0x556b9db05000 allocated to accel structure 0x556b9dc65430
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65430
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.966, 0.000, -1.323), (-5.566, 0.400, -0.923)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xf000 for accel 0x556b9dc65430
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 121...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xf200 = 0x556b9db05200 allocated to accel structure 0x556b9dc654d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc654d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.468, 0.000, -0.830), (-5.068, 0.400, -0.430)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xf200 for accel 0x556b9dc654d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 122...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xf400 = 0x556b9db05400 allocated to accel structure 0x556b9dc65570
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65570
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.354, 0.000, 0.540), (-4.954, 0.400, 0.940)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xf400 for accel 0x556b9dc65570
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 123...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xf600 = 0x556b9db05600 allocated to accel structure 0x556b9dc65610
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65610
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.361, 0.000, 0.874), (-4.961, 0.400, 1.274)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xf600 for accel 0x556b9dc65610
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 124...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xf800 = 0x556b9db05800 allocated to accel structure 0x556b9dc656b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc656b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.500, 0.000, 2.139), (-5.100, 0.400, 2.539)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xf800 for accel 0x556b9dc656b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 125...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xfa00 = 0x556b9db05a00 allocated to accel structure 0x556b9dc65750
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65750
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.857, 0.000, 3.475), (-5.457, 0.400, 3.875)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xfa00 for accel 0x556b9dc65750
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 126...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xfc00 = 0x556b9db05c00 allocated to accel structure 0x556b9dc657f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc657f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-6.167, 0.000, 4.222), (-5.767, 0.400, 4.622)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xfc00 for accel 0x556b9dc657f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 127...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0xfe00 = 0x556b9db05e00 allocated to accel structure 0x556b9dc65890
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db05e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65890
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.468, 0.000, 5.423), (-5.068, 0.400, 5.823)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db05e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0xfe00 for accel 0x556b9dc65890
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db05e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db05e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 128...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10000 = 0x556b9db06000 allocated to accel structure 0x556b9dc65930
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65930
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.673, 0.000, 6.300), (-5.273, 0.400, 6.700)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10000 for accel 0x556b9dc65930
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 129...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10200 = 0x556b9db06200 allocated to accel structure 0x556b9dc659d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc659d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.977, 0.000, 7.140), (-5.577, 0.400, 7.540)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10200 for accel 0x556b9dc659d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 130...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10400 = 0x556b9db06400 allocated to accel structure 0x556b9dc65a70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65a70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.953, 0.000, 8.659), (-5.553, 0.400, 9.059)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10400 for accel 0x556b9dc65a70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 131...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10600 = 0x556b9db06600 allocated to accel structure 0x556b9dc65b10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65b10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.878, 0.000, 8.842), (-5.478, 0.400, 9.242)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10600 for accel 0x556b9dc65b10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 132...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10800 = 0x556b9db06800 allocated to accel structure 0x556b9dc65bb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65bb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.452, 0.000, 10.495), (-5.052, 0.400, 10.895)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10800 for accel 0x556b9dc65bb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 133...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10a00 = 0x556b9db06a00 allocated to accel structure 0x556b9dc65c50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65c50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.411, 0.000, -11.120), (-4.011, 0.400, -10.720)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10a00 for accel 0x556b9dc65c50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 134...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10c00 = 0x556b9db06c00 allocated to accel structure 0x556b9dc65cf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65cf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.494, 0.000, -9.520), (-4.094, 0.400, -9.120)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10c00 for accel 0x556b9dc65cf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 135...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x10e00 = 0x556b9db06e00 allocated to accel structure 0x556b9dc65d90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db06e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65d90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.187, 0.000, -8.644), (-4.787, 0.400, -8.244)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db06e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x10e00 for accel 0x556b9dc65d90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db06e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db06e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 136...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11000 = 0x556b9db07000 allocated to accel structure 0x556b9dc65e30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65e30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.118, 0.000, -7.806), (-4.718, 0.400, -7.406)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11000 for accel 0x556b9dc65e30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 137...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11200 = 0x556b9db07200 allocated to accel structure 0x556b9dc65ed0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65ed0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.843, 0.000, -6.381), (-4.443, 0.400, -5.981)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11200 for accel 0x556b9dc65ed0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 138...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11400 = 0x556b9db07400 allocated to accel structure 0x556b9dc65f70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc65f70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.787, 0.000, -6.068), (-4.387, 0.400, -5.668)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11400 for accel 0x556b9dc65f70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 139...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11600 = 0x556b9db07600 allocated to accel structure 0x556b9dc66010
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66010
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.318, 0.000, -5.159), (-3.918, 0.400, -4.759)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11600 for accel 0x556b9dc66010
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 140...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11800 = 0x556b9db07800 allocated to accel structure 0x556b9dc660b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc660b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.893, 0.000, -3.984), (-4.493, 0.400, -3.584)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11800 for accel 0x556b9dc660b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 141...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11a00 = 0x556b9db07a00 allocated to accel structure 0x556b9dc66150
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.075, 0.000, -2.840), (-4.675, 0.400, -2.440)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11a00 for accel 0x556b9dc66150
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 142...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11c00 = 0x556b9db07c00 allocated to accel structure 0x556b9dc661f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc661f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.413, 0.000, -1.393), (-4.013, 0.400, -0.993)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11c00 for accel 0x556b9dc661f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 143...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x11e00 = 0x556b9db07e00 allocated to accel structure 0x556b9dc66290
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db07e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66290
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.163, 0.000, -0.999), (-4.763, 0.400, -0.599)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db07e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x11e00 for accel 0x556b9dc66290
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db07e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db07e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 144...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12000 = 0x556b9db08000 allocated to accel structure 0x556b9dc66330
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66330
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.706, 0.000, -0.120), (-4.306, 0.400, 0.280)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12000 for accel 0x556b9dc66330
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 145...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12200 = 0x556b9db08200 allocated to accel structure 0x556b9dc663d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc663d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.747, 0.000, 0.916), (-4.347, 0.400, 1.316)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12200 for accel 0x556b9dc663d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 146...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12400 = 0x556b9db08400 allocated to accel structure 0x556b9dc66470
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66470
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.581, 0.000, 2.365), (-4.181, 0.400, 2.765)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12400 for accel 0x556b9dc66470
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 147...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12600 = 0x556b9db08600 allocated to accel structure 0x556b9dc66510
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66510
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.951, 0.000, 2.802), (-4.551, 0.400, 3.202)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12600 for accel 0x556b9dc66510
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 148...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12800 = 0x556b9db08800 allocated to accel structure 0x556b9dc665b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc665b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.717, 0.000, 3.988), (-4.317, 0.400, 4.388)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12800 for accel 0x556b9dc665b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 149...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12a00 = 0x556b9db08a00 allocated to accel structure 0x556b9dc66650
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66650
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.764, 0.000, 5.632), (-4.364, 0.400, 6.032)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12a00 for accel 0x556b9dc66650
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 150...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12c00 = 0x556b9db08c00 allocated to accel structure 0x556b9dc666f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc666f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.144, 0.000, 6.473), (-4.744, 0.400, 6.873)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12c00 for accel 0x556b9dc666f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 151...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x12e00 = 0x556b9db08e00 allocated to accel structure 0x556b9dc66790
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db08e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66790
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.739, 0.000, 7.560), (-4.339, 0.400, 7.960)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db08e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x12e00 for accel 0x556b9dc66790
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db08e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db08e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 152...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13000 = 0x556b9db09000 allocated to accel structure 0x556b9dc66830
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.881, 0.000, 8.203), (-4.481, 0.400, 8.603)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13000 for accel 0x556b9dc66830
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 153...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13200 = 0x556b9db09200 allocated to accel structure 0x556b9dc668d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc668d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.860, 0.000, 9.464), (-4.460, 0.400, 9.864)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13200 for accel 0x556b9dc668d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 154...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13400 = 0x556b9db09400 allocated to accel structure 0x556b9dc66970
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.718, 0.000, 10.095), (-4.318, 0.400, 10.495)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13400 for accel 0x556b9dc66970
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 155...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13600 = 0x556b9db09600 allocated to accel structure 0x556b9dc66a10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc66a10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.490, 0.000, -10.880), (-3.090, 0.400, -10.480)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13600 for accel 0x556b9dc66a10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 156...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13800 = 0x556b9db09800 allocated to accel structure 0x556b9dc60c00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60c00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.698, 0.000, -9.672), (-3.298, 0.400, -9.272)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13800 for accel 0x556b9dc60c00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 157...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13a00 = 0x556b9db09a00 allocated to accel structure 0x556b9dc60ca0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60ca0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.873, 0.000, -8.896), (-3.473, 0.400, -8.496)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13a00 for accel 0x556b9dc60ca0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 158...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13c00 = 0x556b9db09c00 allocated to accel structure 0x556b9dc60d40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60d40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.903, 0.000, -7.312), (-3.503, 0.400, -6.912)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13c00 for accel 0x556b9dc60d40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 159...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x13e00 = 0x556b9db09e00 allocated to accel structure 0x556b9dc60de0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db09e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60de0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.979, 0.000, -6.871), (-3.579, 0.400, -6.471)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db09e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x13e00 for accel 0x556b9dc60de0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db09e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db09e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 160...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14000 = 0x556b9db0a000 allocated to accel structure 0x556b9dc60e80
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0a000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60e80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.150, 0.000, -6.044), (-3.750, 0.400, -5.644)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0a000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14000 for accel 0x556b9dc60e80
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0a000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0a040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 161...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14200 = 0x556b9db0a200 allocated to accel structure 0x556b9dc60f20
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0a200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60f20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.831, 0.000, -5.184), (-3.431, 0.400, -4.784)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0a200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14200 for accel 0x556b9dc60f20
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0a200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0a240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 162...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14400 = 0x556b9db0a400 allocated to accel structure 0x556b9dc60fc0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0a400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc60fc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.374, 0.000, -3.327), (-2.974, 0.400, -2.927)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0a400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14400 for accel 0x556b9dc60fc0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0a400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0a440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 163...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14600 = 0x556b9db0a600 allocated to accel structure 0x556b9dc61060
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0a600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61060
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.598, 0.000, -2.549), (-3.198, 0.400, -2.149)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0a600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14600 for accel 0x556b9dc61060
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0a600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0a640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 164...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14800 = 0x556b9db0a800 allocated to accel structure 0x556b9dc61100
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0a800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61100
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.445, 0.000, -1.948), (-3.045, 0.400, -1.548)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0a800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14800 for accel 0x556b9dc61100
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0a800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0a840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 165...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14a00 = 0x556b9db0aa00 allocated to accel structure 0x556b9dc611a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0aa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc611a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.743, 0.000, -1.020), (-3.343, 0.400, -0.620)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0aa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14a00 for accel 0x556b9dc611a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0aa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0aa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 166...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14c00 = 0x556b9db0ac00 allocated to accel structure 0x556b9dc61240
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ac00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61240
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.121, 0.000, 0.060), (-3.721, 0.400, 0.460)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ac00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14c00 for accel 0x556b9dc61240
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ac00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ac40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 167...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x14e00 = 0x556b9db0ae00 allocated to accel structure 0x556b9dc612e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ae00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc612e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.153, 0.000, 1.334), (-3.753, 0.400, 1.734)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ae00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x14e00 for accel 0x556b9dc612e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ae00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ae40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 168...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15000 = 0x556b9db0b000 allocated to accel structure 0x556b9dc61380
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0b000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61380
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.018, 0.000, 2.691), (-3.618, 0.400, 3.091)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0b000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15000 for accel 0x556b9dc61380
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0b000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0b040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 169...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15200 = 0x556b9db0b200 allocated to accel structure 0x556b9dc61420
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0b200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61420
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.516, 0.000, 2.802), (-3.116, 0.400, 3.202)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0b200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15200 for accel 0x556b9dc61420
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0b200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0b240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 170...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15400 = 0x556b9db0b400 allocated to accel structure 0x556b9dc614c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0b400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc614c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-4.104, 0.000, 4.114), (-3.704, 0.400, 4.514)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0b400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15400 for accel 0x556b9dc614c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0b400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0b440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 171...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15600 = 0x556b9db0b600 allocated to accel structure 0x556b9dc61560
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0b600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61560
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.542, 0.000, 5.640), (-3.142, 0.400, 6.040)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0b600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15600 for accel 0x556b9dc61560
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0b600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0b640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 172...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15800 = 0x556b9db0b800 allocated to accel structure 0x556b9dc5c5b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0b800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5c5b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.551, 0.000, 6.467), (-3.151, 0.400, 6.867)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0b800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15800 for accel 0x556b9dc5c5b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0b800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0b840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 173...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15a00 = 0x556b9db0ba00 allocated to accel structure 0x556b9dc616a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ba00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc616a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.484, 0.000, 7.545), (-3.084, 0.400, 7.945)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ba00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15a00 for accel 0x556b9dc616a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ba00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ba40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 174...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15c00 = 0x556b9db0bc00 allocated to accel structure 0x556b9dc61740
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0bc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61740
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.988, 0.000, 8.533), (-3.588, 0.400, 8.933)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0bc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15c00 for accel 0x556b9dc61740
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0bc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0bc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 175...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x15e00 = 0x556b9db0be00 allocated to accel structure 0x556b9dc617e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0be00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc617e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.847, 0.000, 9.329), (-3.447, 0.400, 9.729)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0be00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x15e00 for accel 0x556b9dc617e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0be00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0be40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 176...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16000 = 0x556b9db0c000 allocated to accel structure 0x556b9dc61880
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0c000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61880
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.390, 0.000, 10.139), (-2.990, 0.400, 10.539)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0c000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16000 for accel 0x556b9dc61880
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0c000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0c040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 177...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16200 = 0x556b9db0c200 allocated to accel structure 0x556b9dc61920
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0c200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61920
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.991, 0.000, -10.680), (-2.591, 0.400, -10.280)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0c200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16200 for accel 0x556b9dc61920
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0c200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0c240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 178...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16400 = 0x556b9db0c400 allocated to accel structure 0x556b9dc619c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0c400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc619c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.994, 0.000, -9.384), (-2.594, 0.400, -8.984)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0c400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16400 for accel 0x556b9dc619c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0c400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0c440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 179...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16600 = 0x556b9db0c600 allocated to accel structure 0x556b9dc61a60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0c600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61a60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.899, 0.000, -8.543), (-2.499, 0.400, -8.143)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0c600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16600 for accel 0x556b9dc61a60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0c600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0c640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 180...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16800 = 0x556b9db0c800 allocated to accel structure 0x556b9dc61b00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0c800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61b00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.533, 0.000, -7.720), (-2.133, 0.400, -7.320)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0c800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16800 for accel 0x556b9dc61b00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0c800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0c840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 181...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16a00 = 0x556b9db0ca00 allocated to accel structure 0x556b9dc61ba0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ca00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61ba0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.976, 0.000, -6.564), (-2.576, 0.400, -6.164)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ca00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16a00 for accel 0x556b9dc61ba0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ca00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ca40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 182...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16c00 = 0x556b9db0cc00 allocated to accel structure 0x556b9dc61c40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0cc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61c40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.755, 0.000, -5.514), (-2.355, 0.400, -5.114)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0cc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16c00 for accel 0x556b9dc61c40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0cc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0cc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 183...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x16e00 = 0x556b9db0ce00 allocated to accel structure 0x556b9dc61ce0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ce00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61ce0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.438, 0.000, -4.859), (-2.038, 0.400, -4.459)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ce00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x16e00 for accel 0x556b9dc61ce0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ce00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ce40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 184...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17000 = 0x556b9db0d000 allocated to accel structure 0x556b9dc61d80
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0d000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61d80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.762, 0.000, -4.065), (-2.362, 0.400, -3.665)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0d000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17000 for accel 0x556b9dc61d80
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0d000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0d040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 185...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17200 = 0x556b9db0d200 allocated to accel structure 0x556b9dc61e20
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0d200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61e20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.575, 0.000, -2.661), (-2.175, 0.400, -2.261)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0d200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17200 for accel 0x556b9dc61e20
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0d200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0d240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 186...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17400 = 0x556b9db0d400 allocated to accel structure 0x556b9dc61ec0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0d400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61ec0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.337, 0.000, -2.037), (-1.937, 0.400, -1.637)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0d400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17400 for accel 0x556b9dc61ec0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0d400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0d440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 187...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17600 = 0x556b9db0d600 allocated to accel structure 0x556b9dc61f60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0d600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc61f60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.784, 0.000, -0.819), (-2.384, 0.400, -0.419)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0d600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17600 for accel 0x556b9dc61f60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0d600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0d640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 188...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17800 = 0x556b9db0d800 allocated to accel structure 0x556b9dc62000
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0d800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62000
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.109, 0.000, 0.255), (-2.709, 0.400, 0.655)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0d800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17800 for accel 0x556b9dc62000
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0d800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0d840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 189...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17a00 = 0x556b9db0da00 allocated to accel structure 0x556b9dc620a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0da00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc620a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.691, 0.000, 0.892), (-2.291, 0.400, 1.292)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0da00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17a00 for accel 0x556b9dc620a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0da00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0da40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 190...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17c00 = 0x556b9db0dc00 allocated to accel structure 0x556b9dc62140
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0dc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62140
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.614, 0.000, 2.437), (-2.214, 0.400, 2.837)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0dc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17c00 for accel 0x556b9dc62140
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0dc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0dc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 191...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x17e00 = 0x556b9db0de00 allocated to accel structure 0x556b9dc621e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0de00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc621e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.537, 0.000, 2.870), (-2.137, 0.400, 3.270)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0de00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x17e00 for accel 0x556b9dc621e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0de00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0de40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 192...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18000 = 0x556b9db0e000 allocated to accel structure 0x556b9dc62280
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0e000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62280
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.988, 0.000, 3.902), (-2.588, 0.400, 4.302)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0e000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18000 for accel 0x556b9dc62280
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0e000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0e040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 193...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18200 = 0x556b9db0e200 allocated to accel structure 0x556b9dc62320
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0e200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62320
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.417, 0.000, 5.099), (-2.017, 0.400, 5.499)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0e200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18200 for accel 0x556b9dc62320
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0e200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0e240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 194...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18400 = 0x556b9db0e400 allocated to accel structure 0x556b9dc623c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0e400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc623c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.859, 0.000, 6.159), (-2.459, 0.400, 6.559)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0e400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18400 for accel 0x556b9dc623c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0e400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0e440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 195...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18600 = 0x556b9db0e600 allocated to accel structure 0x556b9dc62460
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0e600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62460
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.900, 0.000, 7.343), (-2.500, 0.400, 7.743)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0e600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18600 for accel 0x556b9dc62460
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0e600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0e640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 196...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18800 = 0x556b9db0e800 allocated to accel structure 0x556b9dc62500
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0e800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62500
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.781, 0.000, 8.112), (-2.381, 0.400, 8.512)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0e800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18800 for accel 0x556b9dc62500
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0e800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0e840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 197...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18a00 = 0x556b9db0ea00 allocated to accel structure 0x556b9dc625a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ea00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc625a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.998, 0.000, 9.328), (-2.598, 0.400, 9.728)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ea00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18a00 for accel 0x556b9dc625a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ea00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ea40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 198...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18c00 = 0x556b9db0ec00 allocated to accel structure 0x556b9dc62640
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ec00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62640
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-3.051, 0.000, 10.249), (-2.651, 0.400, 10.649)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ec00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18c00 for accel 0x556b9dc62640
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ec00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ec40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 199...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x18e00 = 0x556b9db0ee00 allocated to accel structure 0x556b9dc626e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0ee00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc626e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.631, 0.000, -10.950), (-1.231, 0.400, -10.550)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0ee00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x18e00 for accel 0x556b9dc626e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0ee00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0ee40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 200...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19000 = 0x556b9db0f000 allocated to accel structure 0x556b9dc62780
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0f000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62780
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.787, 0.000, -9.335), (-1.387, 0.400, -8.935)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0f000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19000 for accel 0x556b9dc62780
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0f000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0f040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 201...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19200 = 0x556b9db0f200 allocated to accel structure 0x556b9dc62820
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0f200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62820
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.827, 0.000, -8.698), (-1.427, 0.400, -8.298)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0f200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19200 for accel 0x556b9dc62820
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0f200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0f240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 202...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19400 = 0x556b9db0f400 allocated to accel structure 0x556b9dc628c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0f400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc628c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.921, 0.000, -7.664), (-1.521, 0.400, -7.264)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0f400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19400 for accel 0x556b9dc628c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0f400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0f440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 203...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19600 = 0x556b9db0f600 allocated to accel structure 0x556b9dc62960
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0f600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62960
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.015, 0.000, -6.886), (-1.615, 0.400, -6.486)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0f600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19600 for accel 0x556b9dc62960
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0f600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0f640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 204...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19800 = 0x556b9db0f800 allocated to accel structure 0x556b9dc62a00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0f800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62a00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.447, 0.000, -5.775), (-1.047, 0.400, -5.375)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0f800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19800 for accel 0x556b9dc62a00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0f800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0f840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 205...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19a00 = 0x556b9db0fa00 allocated to accel structure 0x556b9dc62aa0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0fa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62aa0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.728, 0.000, -4.725), (-1.328, 0.400, -4.325)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0fa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19a00 for accel 0x556b9dc62aa0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0fa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0fa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 206...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19c00 = 0x556b9db0fc00 allocated to accel structure 0x556b9dc5c940
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0fc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5c940
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.107, 0.000, -4.060), (-1.707, 0.400, -3.660)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0fc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19c00 for accel 0x556b9dc5c940
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0fc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0fc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 207...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x19e00 = 0x556b9db0fe00 allocated to accel structure 0x556b9dc5c8b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db0fe00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5c8b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.956, 0.000, -2.955), (-1.556, 0.400, -2.555)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db0fe00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x19e00 for accel 0x556b9dc5c8b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db0fe00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db0fe40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 208...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1a000 = 0x556b9db10000 allocated to accel structure 0x556b9dc62cc0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62cc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.444, 0.000, -2.059), (-1.044, 0.400, -1.659)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1a000 for accel 0x556b9dc62cc0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 209...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1a200 = 0x556b9db10200 allocated to accel structure 0x556b9dc62d60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62d60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.607, 0.000, -0.420), (-1.207, 0.400, -0.020)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1a200 for accel 0x556b9dc62d60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 210...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1a400 = 0x556b9db10400 allocated to accel structure 0x556b9dc62e00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62e00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.745, 0.000, 0.405), (-1.345, 0.400, 0.805)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1a400 for accel 0x556b9dc62e00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 211...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1a600 = 0x556b9db10600 allocated to accel structure 0x556b9dc62ea0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62ea0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.613, 0.000, 1.599), (-1.213, 0.400, 1.999)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1a600 for accel 0x556b9dc62ea0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 212...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1a800 = 0x556b9db10800 allocated to accel structure 0x556b9dc62f40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62f40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.657, 0.000, 2.450), (-1.257, 0.400, 2.850)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1a800 for accel 0x556b9dc62f40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 213...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1aa00 = 0x556b9db10a00 allocated to accel structure 0x556b9dc62fe0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62fe0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.453, 0.000, 3.526), (-1.053, 0.400, 3.926)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1aa00 for accel 0x556b9dc62fe0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 214...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ac00 = 0x556b9db10c00 allocated to accel structure 0x556b9dc63080
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63080
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.834, 0.000, 3.984), (-1.434, 0.400, 4.384)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ac00 for accel 0x556b9dc63080
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 215...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ae00 = 0x556b9db10e00 allocated to accel structure 0x556b9dc63120
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db10e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63120
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-2.013, 0.000, 5.462), (-1.613, 0.400, 5.862)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db10e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ae00 for accel 0x556b9dc63120
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db10e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db10e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 216...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1b000 = 0x556b9db11000 allocated to accel structure 0x556b9dc631c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc631c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.566, 0.000, 6.179), (-1.166, 0.400, 6.579)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1b000 for accel 0x556b9dc631c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 217...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1b200 = 0x556b9db11200 allocated to accel structure 0x556b9dc63260
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63260
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.858, 0.000, 7.543), (-1.458, 0.400, 7.943)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1b200 for accel 0x556b9dc63260
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 218...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1b400 = 0x556b9db11400 allocated to accel structure 0x556b9dc63300
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63300
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.504, 0.000, 8.168), (-1.104, 0.400, 8.568)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1b400 for accel 0x556b9dc63300
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 219...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1b600 = 0x556b9db11600 allocated to accel structure 0x556b9dc633a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc633a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.513, 0.000, 9.677), (-1.113, 0.400, 10.077)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1b600 for accel 0x556b9dc633a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 220...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1b800 = 0x556b9db11800 allocated to accel structure 0x556b9dc63440
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63440
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.313, 0.000, 10.239), (-0.913, 0.400, 10.639)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1b800 for accel 0x556b9dc63440
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 221...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ba00 = 0x556b9db11a00 allocated to accel structure 0x556b9dc634e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc634e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.958, 0.000, -10.739), (-0.558, 0.400, -10.339)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ba00 for accel 0x556b9dc634e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 222...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1bc00 = 0x556b9db11c00 allocated to accel structure 0x556b9dc63580
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63580
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.619, 0.000, -10.075), (-0.219, 0.400, -9.675)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1bc00 for accel 0x556b9dc63580
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 223...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1be00 = 0x556b9db11e00 allocated to accel structure 0x556b9dc63620
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db11e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63620
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.955, 0.000, -8.578), (-0.555, 0.400, -8.178)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db11e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1be00 for accel 0x556b9dc63620
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db11e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db11e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 224...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1c000 = 0x556b9db12000 allocated to accel structure 0x556b9dc636c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc636c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.752, 0.000, -7.681), (-0.352, 0.400, -7.281)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1c000 for accel 0x556b9dc636c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 225...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1c200 = 0x556b9db12200 allocated to accel structure 0x556b9dc63760
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63760
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.453, 0.000, -6.752), (-0.053, 0.400, -6.352)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1c200 for accel 0x556b9dc63760
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 226...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1c400 = 0x556b9db12400 allocated to accel structure 0x556b9dc63800
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63800
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.960, 0.000, -5.390), (-0.560, 0.400, -4.990)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1c400 for accel 0x556b9dc63800
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 227...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1c600 = 0x556b9db12600 allocated to accel structure 0x556b9dc638a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc638a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.042, 0.000, -4.755), (-0.642, 0.400, -4.355)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1c600 for accel 0x556b9dc638a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 228...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1c800 = 0x556b9db12800 allocated to accel structure 0x556b9dc63940
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63940
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.820, 0.000, -3.733), (-0.420, 0.400, -3.333)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1c800 for accel 0x556b9dc63940
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 229...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ca00 = 0x556b9db12a00 allocated to accel structure 0x556b9dc639e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc639e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.657, 0.000, -3.119), (-0.257, 0.400, -2.719)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ca00 for accel 0x556b9dc639e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 230...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1cc00 = 0x556b9db12c00 allocated to accel structure 0x556b9dc63a80
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63a80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.376, 0.000, -1.880), (0.024, 0.400, -1.480)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1cc00 for accel 0x556b9dc63a80
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 231...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ce00 = 0x556b9db12e00 allocated to accel structure 0x556b9dc63b20
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db12e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63b20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.603, 0.000, -0.843), (-0.203, 0.400, -0.443)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db12e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ce00 for accel 0x556b9dc63b20
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db12e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db12e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 232...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1d000 = 0x556b9db13000 allocated to accel structure 0x556b9dc63bc0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63bc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.714, 0.000, -0.172), (-0.314, 0.400, 0.228)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1d000 for accel 0x556b9dc63bc0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 233...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1d200 = 0x556b9db13200 allocated to accel structure 0x556b9dc63c60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63c60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.663, 0.000, 1.660), (-0.263, 0.400, 2.060)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1d200 for accel 0x556b9dc63c60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 234...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1d400 = 0x556b9db13400 allocated to accel structure 0x556b9dc63d00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63d00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.884, 0.000, 1.868), (-0.484, 0.400, 2.268)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1d400 for accel 0x556b9dc63d00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 235...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1d600 = 0x556b9db13600 allocated to accel structure 0x556b9dc63da0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63da0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.978, 0.000, 3.214), (-0.578, 0.400, 3.614)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1d600 for accel 0x556b9dc63da0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 236...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1d800 = 0x556b9db13800 allocated to accel structure 0x556b9dc63e40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63e40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.195, 0.000, 4.045), (-0.795, 0.400, 4.445)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1d800 for accel 0x556b9dc63e40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 237...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1da00 = 0x556b9db13a00 allocated to accel structure 0x556b9dc63ee0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63ee0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.875, 0.000, 4.893), (-0.475, 0.400, 5.293)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1da00 for accel 0x556b9dc63ee0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 238...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1dc00 = 0x556b9db13c00 allocated to accel structure 0x556b9dc63f80
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc63f80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.578, 0.000, 6.655), (-0.178, 0.400, 7.055)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1dc00 for accel 0x556b9dc63f80
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 239...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1de00 = 0x556b9db13e00 allocated to accel structure 0x556b9dc64020
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db13e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64020
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.541, 0.000, 7.483), (-0.141, 0.400, 7.883)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db13e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1de00 for accel 0x556b9dc64020
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db13e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db13e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 240...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1e000 = 0x556b9db14000 allocated to accel structure 0x556b9dc640c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc640c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.626, 0.000, 8.423), (-0.226, 0.400, 8.823)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1e000 for accel 0x556b9dc640c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 241...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1e200 = 0x556b9db14200 allocated to accel structure 0x556b9dc64160
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64160
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.311, 0.000, 9.424), (0.089, 0.400, 9.824)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1e200 for accel 0x556b9dc64160
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 242...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1e400 = 0x556b9db14400 allocated to accel structure 0x556b9dc64200
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64200
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.301, 0.000, 10.633), (0.099, 0.400, 11.033)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1e400 for accel 0x556b9dc64200
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 243...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1e600 = 0x556b9db14600 allocated to accel structure 0x556b9dc642a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc642a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.428, 0.000, -11.092), (0.828, 0.400, -10.692)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1e600 for accel 0x556b9dc642a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 244...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1e800 = 0x556b9db14800 allocated to accel structure 0x556b9dc64340
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64340
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.516, 0.000, -9.350), (0.916, 0.400, -8.950)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1e800 for accel 0x556b9dc64340
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 245...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ea00 = 0x556b9db14a00 allocated to accel structure 0x556b9dc643e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc643e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.546, 0.000, -8.730), (0.946, 0.400, -8.330)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ea00 for accel 0x556b9dc643e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 246...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ec00 = 0x556b9db14c00 allocated to accel structure 0x556b9dc64480
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64480
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.233, 0.000, -8.091), (0.633, 0.400, -7.691)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ec00 for accel 0x556b9dc64480
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 247...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1ee00 = 0x556b9db14e00 allocated to accel structure 0x556b9dc64520
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db14e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64520
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.141, 0.000, -6.836), (0.259, 0.400, -6.436)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db14e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1ee00 for accel 0x556b9dc64520
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db14e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db14e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 248...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1f000 = 0x556b9db15000 allocated to accel structure 0x556b9dc645c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc645c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.464, 0.000, -5.913), (0.864, 0.400, -5.513)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1f000 for accel 0x556b9dc645c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 249...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1f200 = 0x556b9db15200 allocated to accel structure 0x556b9dc64660
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64660
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.178, 0.000, -4.824), (0.222, 0.400, -4.424)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1f200 for accel 0x556b9dc64660
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 250...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1f400 = 0x556b9db15400 allocated to accel structure 0x556b9dc64700
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64700
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.146, 0.000, -3.724), (0.546, 0.400, -3.324)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1f400 for accel 0x556b9dc64700
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 251...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1f600 = 0x556b9db15600 allocated to accel structure 0x556b9dc647a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc647a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.490, 0.000, -3.153), (0.890, 0.400, -2.753)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1f600 for accel 0x556b9dc647a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 252...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1f800 = 0x556b9db15800 allocated to accel structure 0x556b9dc64840
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64840
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.045, 0.000, -1.414), (0.445, 0.400, -1.014)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1f800 for accel 0x556b9dc64840
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 253...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1fa00 = 0x556b9db15a00 allocated to accel structure 0x556b9dc648e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc648e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.464, 0.000, -0.730), (0.864, 0.400, -0.330)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1fa00 for accel 0x556b9dc648e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 254...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1fc00 = 0x556b9db15c00 allocated to accel structure 0x556b9dc64980
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.568, 0.000, 0.059), (0.968, 0.400, 0.459)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1fc00 for accel 0x556b9dc64980
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 255...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x1fe00 = 0x556b9db15e00 allocated to accel structure 0x556b9dc64a20
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db15e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64a20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.689, 0.000, 1.619), (1.089, 0.400, 2.019)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db15e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x1fe00 for accel 0x556b9dc64a20
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db15e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db15e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 256...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20000 = 0x556b9db16000 allocated to accel structure 0x556b9dc64ac0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64ac0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.661, 0.000, 1.996), (1.061, 0.400, 2.396)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20000 for accel 0x556b9dc64ac0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 257...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20200 = 0x556b9db16200 allocated to accel structure 0x556b9dc64b60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc64b60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.591, 0.000, 3.684), (0.991, 0.400, 4.084)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20200 for accel 0x556b9dc64b60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 258...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20400 = 0x556b9db16400 allocated to accel structure 0x556b9dc70b50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70b50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.469, 0.000, 3.950), (0.869, 0.400, 4.350)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20400 for accel 0x556b9dc70b50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 259...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20600 = 0x556b9db16600 allocated to accel structure 0x556b9dc70bb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70bb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.009, 0.000, 4.858), (0.409, 0.400, 5.258)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20600 for accel 0x556b9dc70bb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 260...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20800 = 0x556b9db16800 allocated to accel structure 0x556b9dc70c50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70c50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.554, 0.000, 6.648), (0.954, 0.400, 7.048)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20800 for accel 0x556b9dc70c50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 261...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20a00 = 0x556b9db16a00 allocated to accel structure 0x556b9dc70cf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70cf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-0.041, 0.000, 6.842), (0.359, 0.400, 7.242)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20a00 for accel 0x556b9dc70cf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 262...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20c00 = 0x556b9db16c00 allocated to accel structure 0x556b9dc70d90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70d90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.521, 0.000, 8.115), (0.921, 0.400, 8.515)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20c00 for accel 0x556b9dc70d90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 263...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x20e00 = 0x556b9db16e00 allocated to accel structure 0x556b9dc70e30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db16e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70e30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.635, 0.000, 9.266), (1.035, 0.400, 9.666)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db16e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x20e00 for accel 0x556b9dc70e30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db16e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db16e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 264...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21000 = 0x556b9db17000 allocated to accel structure 0x556b9dc70ed0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70ed0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.264, 0.000, 10.157), (0.664, 0.400, 10.557)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21000 for accel 0x556b9dc70ed0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 265...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21200 = 0x556b9db17200 allocated to accel structure 0x556b9dc70f70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc70f70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.002, 0.000, -10.783), (1.402, 0.400, -10.383)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21200 for accel 0x556b9dc70f70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 266...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21400 = 0x556b9db17400 allocated to accel structure 0x556b9dc71010
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71010
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.605, 0.000, -9.666), (2.005, 0.400, -9.266)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21400 for accel 0x556b9dc71010
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 267...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21600 = 0x556b9db17600 allocated to accel structure 0x556b9dc710b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc710b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.917, 0.000, -8.954), (1.317, 0.400, -8.554)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21600 for accel 0x556b9dc710b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 268...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21800 = 0x556b9db17800 allocated to accel structure 0x556b9dc71150
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.096, 0.000, -7.471), (1.496, 0.400, -7.071)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21800 for accel 0x556b9dc71150
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 269...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21a00 = 0x556b9db17a00 allocated to accel structure 0x556b9dc711f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc711f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.135, 0.000, -6.973), (1.535, 0.400, -6.573)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21a00 for accel 0x556b9dc711f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 270...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21c00 = 0x556b9db17c00 allocated to accel structure 0x556b9dc71290
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71290
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.666, 0.000, -6.127), (2.066, 0.400, -5.727)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21c00 for accel 0x556b9dc71290
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 271...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x21e00 = 0x556b9db17e00 allocated to accel structure 0x556b9dc71330
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db17e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71330
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.246, 0.000, -5.145), (1.646, 0.400, -4.745)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db17e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x21e00 for accel 0x556b9dc71330
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db17e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db17e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 272...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22000 = 0x556b9db18000 allocated to accel structure 0x556b9dc713d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc713d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.314, 0.000, -3.458), (1.714, 0.400, -3.058)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22000 for accel 0x556b9dc713d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 273...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22200 = 0x556b9db18200 allocated to accel structure 0x556b9dc71470
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71470
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.040, 0.000, -2.422), (1.440, 0.400, -2.022)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22200 for accel 0x556b9dc71470
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 274...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22400 = 0x556b9db18400 allocated to accel structure 0x556b9dc71510
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71510
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.942, 0.000, -1.434), (1.342, 0.400, -1.034)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22400 for accel 0x556b9dc71510
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 275...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22600 = 0x556b9db18600 allocated to accel structure 0x556b9dc715b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc715b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.412, 0.000, -0.363), (1.812, 0.400, 0.037)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22600 for accel 0x556b9dc715b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 276...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22800 = 0x556b9db18800 allocated to accel structure 0x556b9dc71650
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71650
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.665, 0.000, 0.593), (2.065, 0.400, 0.993)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22800 for accel 0x556b9dc71650
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 277...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22a00 = 0x556b9db18a00 allocated to accel structure 0x556b9dc716f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc716f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.916, 0.000, 0.805), (1.316, 0.400, 1.205)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22a00 for accel 0x556b9dc716f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 278...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22c00 = 0x556b9db18c00 allocated to accel structure 0x556b9dc71790
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71790
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.801, 0.000, 1.945), (1.201, 0.400, 2.345)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22c00 for accel 0x556b9dc71790
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 279...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x22e00 = 0x556b9db18e00 allocated to accel structure 0x556b9dc71830
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db18e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.806, 0.000, 3.033), (1.206, 0.400, 3.433)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db18e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x22e00 for accel 0x556b9dc71830
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db18e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db18e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 280...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23000 = 0x556b9db19000 allocated to accel structure 0x556b9dc718d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc718d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.904, 0.000, 4.369), (1.304, 0.400, 4.769)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23000 for accel 0x556b9dc718d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 281...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23200 = 0x556b9db19200 allocated to accel structure 0x556b9dc71970
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.896, 0.000, 4.916), (1.296, 0.400, 5.316)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23200 for accel 0x556b9dc71970
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 282...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23400 = 0x556b9db19400 allocated to accel structure 0x556b9dc71a10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71a10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.153, 0.000, 6.108), (1.553, 0.400, 6.508)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23400 for accel 0x556b9dc71a10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 283...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23600 = 0x556b9db19600 allocated to accel structure 0x556b9dc71ab0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71ab0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.644, 0.000, 7.510), (2.044, 0.400, 7.910)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23600 for accel 0x556b9dc71ab0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 284...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23800 = 0x556b9db19800 allocated to accel structure 0x556b9dc71b50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71b50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.494, 0.000, 8.437), (1.894, 0.400, 8.837)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23800 for accel 0x556b9dc71b50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 285...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23a00 = 0x556b9db19a00 allocated to accel structure 0x556b9dc71bf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71bf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (0.841, 0.000, 8.867), (1.241, 0.400, 9.267)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23a00 for accel 0x556b9dc71bf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 286...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23c00 = 0x556b9db19c00 allocated to accel structure 0x556b9dc71c90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71c90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.383, 0.000, 10.475), (1.783, 0.400, 10.875)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23c00 for accel 0x556b9dc71c90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 287...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x23e00 = 0x556b9db19e00 allocated to accel structure 0x556b9dc71d30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db19e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71d30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.091, 0.000, -10.461), (2.491, 0.400, -10.061)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db19e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x23e00 for accel 0x556b9dc71d30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db19e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db19e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 288...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24000 = 0x556b9db1a000 allocated to accel structure 0x556b9dc71dd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1a000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71dd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.943, 0.000, -9.799), (2.343, 0.400, -9.399)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1a000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24000 for accel 0x556b9dc71dd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1a000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1a040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 289...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24200 = 0x556b9db1a200 allocated to accel structure 0x556b9dc71e70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1a200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71e70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.947, 0.000, -8.431), (2.347, 0.400, -8.031)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1a200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24200 for accel 0x556b9dc71e70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1a200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1a240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 290...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24400 = 0x556b9db1a400 allocated to accel structure 0x556b9dc71f10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1a400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71f10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.496, 0.000, -8.126), (2.896, 0.400, -7.726)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1a400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24400 for accel 0x556b9dc71f10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1a400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1a440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 291...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24600 = 0x556b9db1a600 allocated to accel structure 0x556b9dc71fb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1a600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc71fb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.656, 0.000, -6.419), (3.056, 0.400, -6.019)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1a600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24600 for accel 0x556b9dc71fb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1a600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1a640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 292...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24800 = 0x556b9db1a800 allocated to accel structure 0x556b9dc72050
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1a800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.572, 0.000, -5.822), (2.972, 0.400, -5.422)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1a800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24800 for accel 0x556b9dc72050
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1a800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1a840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 293...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24a00 = 0x556b9db1aa00 allocated to accel structure 0x556b9dc720f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1aa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc720f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.686, 0.000, -4.802), (3.086, 0.400, -4.402)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1aa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24a00 for accel 0x556b9dc720f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1aa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1aa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 294...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24c00 = 0x556b9db1ac00 allocated to accel structure 0x556b9dc72190
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ac00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.980, 0.000, -4.008), (2.380, 0.400, -3.608)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ac00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24c00 for accel 0x556b9dc72190
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ac00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ac40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 295...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x24e00 = 0x556b9db1ae00 allocated to accel structure 0x556b9dc72230
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ae00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.226, 0.000, -2.776), (2.626, 0.400, -2.376)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ae00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x24e00 for accel 0x556b9dc72230
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ae00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ae40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 296...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25000 = 0x556b9db1b000 allocated to accel structure 0x556b9dc722d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1b000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc722d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.882, 0.000, -1.418), (2.282, 0.400, -1.018)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1b000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25000 for accel 0x556b9dc722d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1b000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1b040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 297...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25200 = 0x556b9db1b200 allocated to accel structure 0x556b9dc72370
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1b200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.364, 0.000, -1.184), (2.764, 0.400, -0.784)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1b200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25200 for accel 0x556b9dc72370
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1b200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1b240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 298...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25400 = 0x556b9db1b400 allocated to accel structure 0x556b9dc72410
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1b400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72410
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.967, 0.000, 0.355), (2.367, 0.400, 0.755)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1b400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25400 for accel 0x556b9dc72410
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1b400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1b440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 299...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25600 = 0x556b9db1b600 allocated to accel structure 0x556b9dc724b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1b600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc724b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.233, 0.000, 1.216), (2.633, 0.400, 1.616)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1b600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25600 for accel 0x556b9dc724b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1b600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1b640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 300...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25800 = 0x556b9db1b800 allocated to accel structure 0x556b9dc72550
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1b800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.303, 0.000, 2.187), (2.703, 0.400, 2.587)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1b800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25800 for accel 0x556b9dc72550
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1b800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1b840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 301...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25a00 = 0x556b9db1ba00 allocated to accel structure 0x556b9dc725f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ba00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc725f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.042, 0.000, 3.093), (2.442, 0.400, 3.493)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ba00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25a00 for accel 0x556b9dc725f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ba00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ba40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 302...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25c00 = 0x556b9db1bc00 allocated to accel structure 0x556b9dc72690
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1bc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.218, 0.000, 3.810), (2.618, 0.400, 4.210)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1bc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25c00 for accel 0x556b9dc72690
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1bc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1bc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 303...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x25e00 = 0x556b9db1be00 allocated to accel structure 0x556b9dc72730
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1be00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72730
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.062, 0.000, 5.450), (2.462, 0.400, 5.850)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1be00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x25e00 for accel 0x556b9dc72730
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1be00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1be40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 304...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26000 = 0x556b9db1c000 allocated to accel structure 0x556b9dc727d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1c000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc727d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.452, 0.000, 5.836), (2.852, 0.400, 6.236)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1c000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26000 for accel 0x556b9dc727d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1c000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1c040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 305...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26200 = 0x556b9db1c200 allocated to accel structure 0x556b9dc72870
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1c200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72870
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.688, 0.000, 6.893), (3.088, 0.400, 7.293)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1c200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26200 for accel 0x556b9dc72870
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1c200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1c240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 306...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26400 = 0x556b9db1c400 allocated to accel structure 0x556b9dc72910
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1c400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.111, 0.000, 8.432), (2.511, 0.400, 8.832)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1c400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26400 for accel 0x556b9dc72910
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1c400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1c440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 307...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26600 = 0x556b9db1c600 allocated to accel structure 0x556b9dc729b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1c600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc729b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (1.879, 0.000, 9.281), (2.279, 0.400, 9.681)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1c600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26600 for accel 0x556b9dc729b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1c600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1c640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 308...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26800 = 0x556b9db1c800 allocated to accel structure 0x556b9dc72a50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1c800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72a50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.090, 0.000, 10.157), (2.490, 0.400, 10.557)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1c800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26800 for accel 0x556b9dc72a50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1c800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1c840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 309...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26a00 = 0x556b9db1ca00 allocated to accel structure 0x556b9dc72af0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ca00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72af0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.980, 0.000, -10.461), (3.380, 0.400, -10.061)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ca00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26a00 for accel 0x556b9dc72af0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ca00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ca40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 310...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26c00 = 0x556b9db1cc00 allocated to accel structure 0x556b9dc72c00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1cc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72c00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.912, 0.000, -9.627), (3.312, 0.400, -9.227)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1cc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26c00 for accel 0x556b9dc72c00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1cc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1cc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 311...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x26e00 = 0x556b9db1ce00 allocated to accel structure 0x556b9dc72c60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ce00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72c60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.828, 0.000, -8.393), (3.228, 0.400, -7.993)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ce00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x26e00 for accel 0x556b9dc72c60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ce00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ce40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 312...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27000 = 0x556b9db1d000 allocated to accel structure 0x556b9dc72d00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1d000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72d00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.642, 0.000, -7.562), (4.042, 0.400, -7.162)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1d000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27000 for accel 0x556b9dc72d00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1d000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1d040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 313...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27200 = 0x556b9db1d200 allocated to accel structure 0x556b9dc5fbd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1d200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc5fbd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.533, 0.000, -6.649), (3.933, 0.400, -6.249)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1d200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27200 for accel 0x556b9dc5fbd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1d200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1d240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 314...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27400 = 0x556b9db1d400 allocated to accel structure 0x556b9dc72e10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1d400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72e10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.505, 0.000, -5.464), (3.905, 0.400, -5.064)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1d400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27400 for accel 0x556b9dc72e10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1d400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1d440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 315...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27600 = 0x556b9db1d600 allocated to accel structure 0x556b9dc72eb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1d600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72eb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.873, 0.000, -4.805), (3.273, 0.400, -4.405)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1d600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27600 for accel 0x556b9dc72eb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1d600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1d640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 316...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27800 = 0x556b9db1d800 allocated to accel structure 0x556b9dc72f50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1d800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72f50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.354, 0.000, -3.415), (3.754, 0.400, -3.015)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1d800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27800 for accel 0x556b9dc72f50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1d800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1d840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 317...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27a00 = 0x556b9db1da00 allocated to accel structure 0x556b9dc72ff0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1da00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc72ff0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.511, 0.000, -2.415), (3.911, 0.400, -2.015)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1da00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27a00 for accel 0x556b9dc72ff0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1da00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1da40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 318...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27c00 = 0x556b9db1dc00 allocated to accel structure 0x556b9dc73090
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1dc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.388, 0.000, -1.553), (3.788, 0.400, -1.153)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1dc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27c00 for accel 0x556b9dc73090
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1dc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1dc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 319...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x27e00 = 0x556b9db1de00 allocated to accel structure 0x556b9dc73130
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1de00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.980, 0.000, -1.127), (3.380, 0.400, -0.727)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1de00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x27e00 for accel 0x556b9dc73130
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1de00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1de40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 320...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28000 = 0x556b9db1e000 allocated to accel structure 0x556b9dc731d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1e000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc731d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.581, 0.000, 0.957), (3.981, 0.400, 1.357)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1e000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28000 for accel 0x556b9dc731d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1e000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1e040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 321...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28200 = 0x556b9db1e200 allocated to accel structure 0x556b9dc73270
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1e200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.462, 0.000, 2.111), (3.862, 0.400, 2.511)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1e200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28200 for accel 0x556b9dc73270
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1e200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1e240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 322...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28400 = 0x556b9db1e400 allocated to accel structure 0x556b9dc73310
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1e400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73310
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.321, 0.000, 3.263), (3.721, 0.400, 3.663)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1e400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28400 for accel 0x556b9dc73310
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1e400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1e440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 323...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28600 = 0x556b9db1e600 allocated to accel structure 0x556b9dc733b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1e600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc733b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.346, 0.000, 4.238), (3.746, 0.400, 4.638)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1e600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28600 for accel 0x556b9dc733b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1e600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1e640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 324...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28800 = 0x556b9db1e800 allocated to accel structure 0x556b9dc73450
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1e800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.333, 0.000, 5.693), (3.733, 0.400, 6.093)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1e800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28800 for accel 0x556b9dc73450
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1e800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1e840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 325...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28a00 = 0x556b9db1ea00 allocated to accel structure 0x556b9dc734f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ea00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc734f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.552, 0.000, 6.368), (3.952, 0.400, 6.768)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ea00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28a00 for accel 0x556b9dc734f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ea00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ea40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 326...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28c00 = 0x556b9db1ec00 allocated to accel structure 0x556b9dc73590
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ec00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.962, 0.000, 7.342), (3.362, 0.400, 7.742)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ec00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28c00 for accel 0x556b9dc73590
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ec00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ec40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 327...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x28e00 = 0x556b9db1ee00 allocated to accel structure 0x556b9dc73630
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1ee00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73630
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.172, 0.000, 7.963), (3.572, 0.400, 8.363)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1ee00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x28e00 for accel 0x556b9dc73630
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1ee00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1ee40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 328...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29000 = 0x556b9db1f000 allocated to accel structure 0x556b9dc736d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1f000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc736d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.201, 0.000, 9.165), (3.601, 0.400, 9.565)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1f000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29000 for accel 0x556b9dc736d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1f000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1f040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 329...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29200 = 0x556b9db1f200 allocated to accel structure 0x556b9dc73770
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1f200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73770
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (2.886, 0.000, 10.334), (3.286, 0.400, 10.734)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1f200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29200 for accel 0x556b9dc73770
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1f200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1f240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 330...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29400 = 0x556b9db1f400 allocated to accel structure 0x556b9dc73810
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1f400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73810
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.391, 0.000, -10.428), (4.791, 0.400, -10.028)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1f400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29400 for accel 0x556b9dc73810
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1f400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1f440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 331...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29600 = 0x556b9db1f600 allocated to accel structure 0x556b9dc738b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1f600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc738b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.013, 0.000, -9.327), (4.413, 0.400, -8.927)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1f600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29600 for accel 0x556b9dc738b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1f600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1f640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 332...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29800 = 0x556b9db1f800 allocated to accel structure 0x556b9dc73950
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1f800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.268, 0.000, -8.902), (4.668, 0.400, -8.502)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1f800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29800 for accel 0x556b9dc73950
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1f800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1f840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 333...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29a00 = 0x556b9db1fa00 allocated to accel structure 0x556b9dc739f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1fa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc739f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.329, 0.000, -7.976), (4.729, 0.400, -7.576)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1fa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29a00 for accel 0x556b9dc739f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1fa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1fa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 334...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29c00 = 0x556b9db1fc00 allocated to accel structure 0x556b9dc73a90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1fc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73a90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.833, 0.000, -6.859), (4.233, 0.400, -6.459)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1fc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29c00 for accel 0x556b9dc73a90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1fc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1fc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 335...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x29e00 = 0x556b9db1fe00 allocated to accel structure 0x556b9dc73b30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db1fe00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73b30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.435, 0.000, -5.440), (4.835, 0.400, -5.040)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db1fe00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x29e00 for accel 0x556b9dc73b30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db1fe00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db1fe40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 336...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2a000 = 0x556b9db20000 allocated to accel structure 0x556b9dc73bd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73bd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.901, 0.000, -4.714), (4.301, 0.400, -4.314)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2a000 for accel 0x556b9dc73bd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 337...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2a200 = 0x556b9db20200 allocated to accel structure 0x556b9dc73c70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73c70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.847, 0.000, -3.357), (4.247, 0.400, -2.957)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2a200 for accel 0x556b9dc73c70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 338...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2a400 = 0x556b9db20400 allocated to accel structure 0x556b9dc73d10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73d10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.085, 0.000, -3.120), (4.485, 0.400, -2.720)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2a400 for accel 0x556b9dc73d10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 339...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2a600 = 0x556b9db20600 allocated to accel structure 0x556b9dc73db0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73db0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.158, 0.000, -2.066), (4.558, 0.400, -1.666)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2a600 for accel 0x556b9dc73db0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 340...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2a800 = 0x556b9db20800 allocated to accel structure 0x556b9dc73e50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73e50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.375, 0.000, -0.909), (4.775, 0.400, -0.509)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2a800 for accel 0x556b9dc73e50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 341...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2aa00 = 0x556b9db20a00 allocated to accel structure 0x556b9dc73ef0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73ef0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.322, 0.000, 0.581), (4.722, 0.400, 0.981)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2aa00 for accel 0x556b9dc73ef0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 342...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ac00 = 0x556b9db20c00 allocated to accel structure 0x556b9dc73f90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc73f90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.264, 0.000, 1.029), (4.664, 0.400, 1.429)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ac00 for accel 0x556b9dc73f90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 343...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ae00 = 0x556b9db20e00 allocated to accel structure 0x556b9dc74030
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db20e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74030
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.919, 0.000, 1.827), (4.319, 0.400, 2.227)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db20e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ae00 for accel 0x556b9dc74030
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db20e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db20e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 344...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2b000 = 0x556b9db21000 allocated to accel structure 0x556b9dc740d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc740d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.673, 0.000, 2.946), (5.073, 0.400, 3.346)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2b000 for accel 0x556b9dc740d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 345...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2b200 = 0x556b9db21200 allocated to accel structure 0x556b9dc74170
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74170
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.667, 0.000, 4.581), (5.067, 0.400, 4.981)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2b200 for accel 0x556b9dc74170
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 346...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2b400 = 0x556b9db21400 allocated to accel structure 0x556b9dc74210
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.415, 0.000, 5.137), (4.815, 0.400, 5.537)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2b400 for accel 0x556b9dc74210
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 347...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2b600 = 0x556b9db21600 allocated to accel structure 0x556b9dc742b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc742b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.578, 0.000, 6.582), (4.978, 0.400, 6.982)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2b600 for accel 0x556b9dc742b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 348...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2b800 = 0x556b9db21800 allocated to accel structure 0x556b9dc74350
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74350
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.421, 0.000, 7.516), (4.821, 0.400, 7.916)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2b800 for accel 0x556b9dc74350
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 349...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ba00 = 0x556b9db21a00 allocated to accel structure 0x556b9dc743f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc743f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.544, 0.000, 8.393), (4.944, 0.400, 8.793)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ba00 for accel 0x556b9dc743f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 350...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2bc00 = 0x556b9db21c00 allocated to accel structure 0x556b9dc74490
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74490
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.392, 0.000, 9.114), (4.792, 0.400, 9.514)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2bc00 for accel 0x556b9dc74490
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 351...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2be00 = 0x556b9db21e00 allocated to accel structure 0x556b9dc74530
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db21e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74530
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.694, 0.000, 10.166), (5.094, 0.400, 10.566)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db21e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2be00 for accel 0x556b9dc74530
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db21e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db21e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 352...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2c000 = 0x556b9db22000 allocated to accel structure 0x556b9dc745d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc745d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.465, 0.000, -10.940), (5.865, 0.400, -10.540)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2c000 for accel 0x556b9dc745d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 353...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2c200 = 0x556b9db22200 allocated to accel structure 0x556b9dc74670
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74670
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.194, 0.000, -9.599), (5.594, 0.400, -9.199)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2c200 for accel 0x556b9dc74670
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 354...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2c400 = 0x556b9db22400 allocated to accel structure 0x556b9dc74710
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74710
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.192, 0.000, -8.915), (5.592, 0.400, -8.515)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2c400 for accel 0x556b9dc74710
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 355...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2c600 = 0x556b9db22600 allocated to accel structure 0x556b9dc747b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc747b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.096, 0.000, -8.195), (5.496, 0.400, -7.795)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2c600 for accel 0x556b9dc747b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 356...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2c800 = 0x556b9db22800 allocated to accel structure 0x556b9dc74850
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74850
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.150, 0.000, -6.858), (5.550, 0.400, -6.458)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2c800 for accel 0x556b9dc74850
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 357...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ca00 = 0x556b9db22a00 allocated to accel structure 0x556b9dc748f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc748f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.813, 0.000, -5.995), (5.213, 0.400, -5.595)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ca00 for accel 0x556b9dc748f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 358...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2cc00 = 0x556b9db22c00 allocated to accel structure 0x556b9dc74990
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74990
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.217, 0.000, -4.517), (5.617, 0.400, -4.117)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2cc00 for accel 0x556b9dc74990
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 359...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ce00 = 0x556b9db22e00 allocated to accel structure 0x556b9dc74a30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db22e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74a30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.623, 0.000, -3.769), (6.023, 0.400, -3.369)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db22e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ce00 for accel 0x556b9dc74a30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db22e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db22e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 360...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2d000 = 0x556b9db23000 allocated to accel structure 0x556b9dc74ad0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74ad0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.159, 0.000, -3.066), (5.559, 0.400, -2.666)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2d000 for accel 0x556b9dc74ad0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 361...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2d200 = 0x556b9db23200 allocated to accel structure 0x556b9dc74b70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74b70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.294, 0.000, -1.512), (5.694, 0.400, -1.112)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2d200 for accel 0x556b9dc74b70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 362...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2d400 = 0x556b9db23400 allocated to accel structure 0x556b9dc74c10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74c10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.976, 0.000, -0.460), (5.376, 0.400, -0.060)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2d400 for accel 0x556b9dc74c10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 363...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2d600 = 0x556b9db23600 allocated to accel structure 0x556b9dc74cb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74cb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.389, 0.000, 0.019), (5.789, 0.400, 0.419)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2d600 for accel 0x556b9dc74cb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 364...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2d800 = 0x556b9db23800 allocated to accel structure 0x556b9dc78d50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc78d50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.854, 0.000, 1.142), (5.254, 0.400, 1.542)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2d800 for accel 0x556b9dc78d50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 365...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2da00 = 0x556b9db23a00 allocated to accel structure 0x556b9dc78df0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc78df0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.950, 0.000, 1.891), (5.350, 0.400, 2.291)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2da00 for accel 0x556b9dc78df0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 366...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2dc00 = 0x556b9db23c00 allocated to accel structure 0x556b9dc78e90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc78e90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.523, 0.000, 3.637), (5.923, 0.400, 4.037)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2dc00 for accel 0x556b9dc78e90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 367...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2de00 = 0x556b9db23e00 allocated to accel structure 0x556b9dc78f30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db23e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc78f30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.160, 0.000, 4.445), (5.560, 0.400, 4.845)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db23e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2de00 for accel 0x556b9dc78f30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db23e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db23e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 368...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2e000 = 0x556b9db24000 allocated to accel structure 0x556b9dc78fd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc78fd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.413, 0.000, 4.911), (5.813, 0.400, 5.311)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2e000 for accel 0x556b9dc78fd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 369...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2e200 = 0x556b9db24200 allocated to accel structure 0x556b9dc79070
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79070
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.514, 0.000, 5.896), (5.914, 0.400, 6.296)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2e200 for accel 0x556b9dc79070
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 370...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2e400 = 0x556b9db24400 allocated to accel structure 0x556b9dc79110
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79110
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.525, 0.000, 6.878), (5.925, 0.400, 7.278)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2e400 for accel 0x556b9dc79110
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 371...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2e600 = 0x556b9db24600 allocated to accel structure 0x556b9dc791b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc791b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.802, 0.000, 8.656), (5.202, 0.400, 9.056)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2e600 for accel 0x556b9dc791b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 372...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2e800 = 0x556b9db24800 allocated to accel structure 0x556b9dc79250
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79250
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (4.991, 0.000, 9.514), (5.391, 0.400, 9.914)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2e800 for accel 0x556b9dc79250
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 373...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ea00 = 0x556b9db24a00 allocated to accel structure 0x556b9dc792f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc792f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.493, 0.000, 10.610), (5.893, 0.400, 11.010)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ea00 for accel 0x556b9dc792f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 374...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ec00 = 0x556b9db24c00 allocated to accel structure 0x556b9dc79390
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79390
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.047, 0.000, -10.928), (6.447, 0.400, -10.528)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ec00 for accel 0x556b9dc79390
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 375...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2ee00 = 0x556b9db24e00 allocated to accel structure 0x556b9dc79430
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db24e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79430
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.490, 0.000, -10.114), (6.890, 0.400, -9.714)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db24e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2ee00 for accel 0x556b9dc79430
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db24e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db24e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 376...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2f000 = 0x556b9db25000 allocated to accel structure 0x556b9dc794d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc794d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.951, 0.000, -9.062), (6.351, 0.400, -8.662)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2f000 for accel 0x556b9dc794d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 377...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2f200 = 0x556b9db25200 allocated to accel structure 0x556b9dc79570
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79570
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.961, 0.000, -8.114), (6.361, 0.400, -7.714)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2f200 for accel 0x556b9dc79570
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 378...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2f400 = 0x556b9db25400 allocated to accel structure 0x556b9dc79610
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79610
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.009, 0.000, -6.626), (6.409, 0.400, -6.226)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2f400 for accel 0x556b9dc79610
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 379...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2f600 = 0x556b9db25600 allocated to accel structure 0x556b9dc796b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc796b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.047, 0.000, -5.311), (6.447, 0.400, -4.911)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2f600 for accel 0x556b9dc796b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 380...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2f800 = 0x556b9db25800 allocated to accel structure 0x556b9dc79750
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79750
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.446, 0.000, -4.799), (6.846, 0.400, -4.399)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2f800 for accel 0x556b9dc79750
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 381...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2fa00 = 0x556b9db25a00 allocated to accel structure 0x556b9dc797f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc797f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.343, 0.000, -4.106), (6.743, 0.400, -3.706)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2fa00 for accel 0x556b9dc797f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 382...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2fc00 = 0x556b9db25c00 allocated to accel structure 0x556b9dc79890
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79890
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.871, 0.000, -2.505), (6.271, 0.400, -2.105)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2fc00 for accel 0x556b9dc79890
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 383...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x2fe00 = 0x556b9db25e00 allocated to accel structure 0x556b9dc79930
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db25e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79930
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.130, 0.000, -1.909), (6.530, 0.400, -1.509)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db25e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x2fe00 for accel 0x556b9dc79930
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db25e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db25e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 384...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30000 = 0x556b9db26000 allocated to accel structure 0x556b9dc799d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc799d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.861, 0.000, -0.451), (6.261, 0.400, -0.051)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30000 for accel 0x556b9dc799d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 385...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30200 = 0x556b9db26200 allocated to accel structure 0x556b9dc79a70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79a70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.334, 0.000, 0.592), (6.734, 0.400, 0.992)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30200 for accel 0x556b9dc79a70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 386...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30400 = 0x556b9db26400 allocated to accel structure 0x556b9dc79b10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79b10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.403, 0.000, 0.971), (6.803, 0.400, 1.371)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30400 for accel 0x556b9dc79b10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 387...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30600 = 0x556b9db26600 allocated to accel structure 0x556b9dc79bb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79bb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.202, 0.000, 2.458), (6.602, 0.400, 2.858)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30600 for accel 0x556b9dc79bb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 388...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30800 = 0x556b9db26800 allocated to accel structure 0x556b9dc79c50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79c50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.854, 0.000, 3.100), (6.254, 0.400, 3.500)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30800 for accel 0x556b9dc79c50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 389...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30a00 = 0x556b9db26a00 allocated to accel structure 0x556b9dc79cf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79cf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.479, 0.000, 4.421), (6.879, 0.400, 4.821)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30a00 for accel 0x556b9dc79cf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 390...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30c00 = 0x556b9db26c00 allocated to accel structure 0x556b9dc79d90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79d90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.481, 0.000, 5.540), (6.881, 0.400, 5.940)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30c00 for accel 0x556b9dc79d90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 391...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x30e00 = 0x556b9db26e00 allocated to accel structure 0x556b9dc79e30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db26e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79e30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.144, 0.000, 6.634), (6.544, 0.400, 7.034)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db26e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x30e00 for accel 0x556b9dc79e30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db26e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db26e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 392...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31000 = 0x556b9db27000 allocated to accel structure 0x556b9dc79ed0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79ed0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.634, 0.000, 7.463), (7.034, 0.400, 7.863)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31000 for accel 0x556b9dc79ed0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 393...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31200 = 0x556b9db27200 allocated to accel structure 0x556b9dc79f70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc79f70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.019, 0.000, 8.286), (6.419, 0.400, 8.686)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31200 for accel 0x556b9dc79f70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 394...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31400 = 0x556b9db27400 allocated to accel structure 0x556b9dc7a010
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a010
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.480, 0.000, 9.509), (6.880, 0.400, 9.909)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31400 for accel 0x556b9dc7a010
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 395...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31600 = 0x556b9db27600 allocated to accel structure 0x556b9dc7a0b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a0b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (5.857, 0.000, 10.438), (6.257, 0.400, 10.838)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31600 for accel 0x556b9dc7a0b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 396...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31800 = 0x556b9db27800 allocated to accel structure 0x556b9dc7a150
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.879, 0.000, -10.857), (7.279, 0.400, -10.457)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31800 for accel 0x556b9dc7a150
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 397...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31a00 = 0x556b9db27a00 allocated to accel structure 0x556b9dc7a1f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a1f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.052, 0.000, -9.843), (7.452, 0.400, -9.443)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31a00 for accel 0x556b9dc7a1f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 398...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31c00 = 0x556b9db27c00 allocated to accel structure 0x556b9dc7a290
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a290
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.627, 0.000, -9.054), (8.027, 0.400, -8.654)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31c00 for accel 0x556b9dc7a290
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 399...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x31e00 = 0x556b9db27e00 allocated to accel structure 0x556b9dc7a330
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db27e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a330
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.251, 0.000, -8.012), (7.651, 0.400, -7.612)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db27e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x31e00 for accel 0x556b9dc7a330
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db27e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db27e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 400...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32000 = 0x556b9db28000 allocated to accel structure 0x556b9dc7a3d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a3d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.590, 0.000, -6.593), (7.990, 0.400, -6.193)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32000 for accel 0x556b9dc7a3d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 401...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32200 = 0x556b9db28200 allocated to accel structure 0x556b9dc7a470
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a470
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.537, 0.000, -5.926), (7.937, 0.400, -5.526)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32200 for accel 0x556b9dc7a470
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 402...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32400 = 0x556b9db28400 allocated to accel structure 0x556b9dc7a510
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a510
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.111, 0.000, -4.999), (7.511, 0.400, -4.599)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32400 for accel 0x556b9dc7a510
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 403...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32600 = 0x556b9db28600 allocated to accel structure 0x556b9dc7a5b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a5b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.231, 0.000, -4.081), (7.631, 0.400, -3.681)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32600 for accel 0x556b9dc7a5b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 404...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32800 = 0x556b9db28800 allocated to accel structure 0x556b9dc7a650
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a650
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.488, 0.000, -2.392), (7.888, 0.400, -1.992)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32800 for accel 0x556b9dc7a650
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 405...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32a00 = 0x556b9db28a00 allocated to accel structure 0x556b9dc7a6f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a6f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.400, 0.000, -2.068), (7.800, 0.400, -1.668)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32a00 for accel 0x556b9dc7a6f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 406...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32c00 = 0x556b9db28c00 allocated to accel structure 0x556b9dc7a790
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a790
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.922, 0.000, -0.745), (7.322, 0.400, -0.345)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32c00 for accel 0x556b9dc7a790
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 407...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x32e00 = 0x556b9db28e00 allocated to accel structure 0x556b9dc7a830
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db28e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.335, 0.000, 0.189), (7.735, 0.400, 0.589)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db28e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x32e00 for accel 0x556b9dc7a830
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db28e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db28e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 408...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33000 = 0x556b9db29000 allocated to accel structure 0x556b9dc7a8d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a8d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.377, 0.000, 1.566), (7.777, 0.400, 1.966)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33000 for accel 0x556b9dc7a8d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 409...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33200 = 0x556b9db29200 allocated to accel structure 0x556b9dc7a970
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7a970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.148, 0.000, 1.937), (7.548, 0.400, 2.337)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33200 for accel 0x556b9dc7a970
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 410...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33400 = 0x556b9db29400 allocated to accel structure 0x556b9dc7aa10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7aa10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.695, 0.000, 3.236), (8.095, 0.400, 3.636)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33400 for accel 0x556b9dc7aa10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 411...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33600 = 0x556b9db29600 allocated to accel structure 0x556b9dc62c20
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc62c20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (6.954, 0.000, 4.015), (7.354, 0.400, 4.415)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33600 for accel 0x556b9dc62c20
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 412...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33800 = 0x556b9db29800 allocated to accel structure 0x556b9dc7ab50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc7ab50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.423, 0.000, 4.960), (7.823, 0.400, 5.360)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33800 for accel 0x556b9dc7ab50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 413...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33a00 = 0x556b9db29a00 allocated to accel structure 0x556b9dc74d50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74d50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.009, 0.000, 6.533), (7.409, 0.400, 6.933)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33a00 for accel 0x556b9dc74d50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 414...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33c00 = 0x556b9db29c00 allocated to accel structure 0x556b9dc74df0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74df0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.183, 0.000, 7.563), (7.583, 0.400, 7.963)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33c00 for accel 0x556b9dc74df0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 415...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x33e00 = 0x556b9db29e00 allocated to accel structure 0x556b9dc74e90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db29e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74e90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.119, 0.000, 7.975), (7.519, 0.400, 8.375)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db29e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x33e00 for accel 0x556b9dc74e90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db29e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db29e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 416...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34000 = 0x556b9db2a000 allocated to accel structure 0x556b9dc74f30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2a000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74f30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.492, 0.000, 9.148), (7.892, 0.400, 9.548)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2a000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34000 for accel 0x556b9dc74f30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2a000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2a040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 417...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34200 = 0x556b9db2a200 allocated to accel structure 0x556b9dc74fd0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2a200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc74fd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.511, 0.000, 9.817), (7.911, 0.400, 10.217)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2a200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34200 for accel 0x556b9dc74fd0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2a200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2a240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 418...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34400 = 0x556b9db2a400 allocated to accel structure 0x556b9dc75070
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2a400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75070
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.994, 0.000, -10.643), (8.394, 0.400, -10.243)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2a400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34400 for accel 0x556b9dc75070
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2a400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2a440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 419...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34600 = 0x556b9db2a600 allocated to accel structure 0x556b9dc75110
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2a600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75110
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.858, 0.000, -9.479), (8.258, 0.400, -9.079)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2a600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34600 for accel 0x556b9dc75110
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2a600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2a640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 420...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34800 = 0x556b9db2a800 allocated to accel structure 0x556b9dc751b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2a800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc751b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.209, 0.000, -8.619), (8.609, 0.400, -8.219)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2a800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34800 for accel 0x556b9dc751b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2a800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2a840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 421...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34a00 = 0x556b9db2aa00 allocated to accel structure 0x556b9dc75250
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2aa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75250
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.578, 0.000, -8.065), (8.978, 0.400, -7.665)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2aa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34a00 for accel 0x556b9dc75250
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2aa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2aa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 422...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34c00 = 0x556b9db2ac00 allocated to accel structure 0x556b9dc752f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ac00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc752f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.155, 0.000, -6.647), (8.555, 0.400, -6.247)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ac00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34c00 for accel 0x556b9dc752f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ac00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ac40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 423...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x34e00 = 0x556b9db2ae00 allocated to accel structure 0x556b9dc75390
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ae00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75390
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.892, 0.000, -5.340), (8.292, 0.400, -4.940)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ae00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x34e00 for accel 0x556b9dc75390
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ae00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ae40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 424...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35000 = 0x556b9db2b000 allocated to accel structure 0x556b9dc75430
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2b000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75430
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.029, 0.000, -5.131), (8.429, 0.400, -4.731)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2b000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35000 for accel 0x556b9dc75430
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2b000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2b040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 425...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35200 = 0x556b9db2b200 allocated to accel structure 0x556b9dc754d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2b200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc754d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.543, 0.000, -3.785), (8.943, 0.400, -3.385)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2b200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35200 for accel 0x556b9dc754d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2b200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2b240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 426...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35400 = 0x556b9db2b400 allocated to accel structure 0x556b9dc75570
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2b400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75570
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.353, 0.000, -2.996), (8.753, 0.400, -2.596)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2b400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35400 for accel 0x556b9dc75570
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2b400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2b440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 427...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35600 = 0x556b9db2b600 allocated to accel structure 0x556b9dc75610
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2b600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75610
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.689, 0.000, -1.536), (9.089, 0.400, -1.136)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2b600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35600 for accel 0x556b9dc75610
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2b600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2b640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 428...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35800 = 0x556b9db2b800 allocated to accel structure 0x556b9dc756b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2b800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc756b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.445, 0.000, -0.528), (8.845, 0.400, -0.128)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2b800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35800 for accel 0x556b9dc756b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2b800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2b840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 429...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35a00 = 0x556b9db2ba00 allocated to accel structure 0x556b9dc75750
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ba00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75750
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.258, 0.000, 0.661), (8.658, 0.400, 1.061)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ba00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35a00 for accel 0x556b9dc75750
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ba00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ba40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 430...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35c00 = 0x556b9db2bc00 allocated to accel structure 0x556b9dc757f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2bc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc757f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.497, 0.000, 1.674), (8.897, 0.400, 2.074)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2bc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35c00 for accel 0x556b9dc757f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2bc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2bc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 431...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x35e00 = 0x556b9db2be00 allocated to accel structure 0x556b9dc75890
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2be00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75890
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.295, 0.000, 1.889), (8.695, 0.400, 2.289)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2be00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x35e00 for accel 0x556b9dc75890
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2be00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2be40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 432...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36000 = 0x556b9db2c000 allocated to accel structure 0x556b9dc75930
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2c000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75930
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (7.874, 0.000, 2.874), (8.274, 0.400, 3.274)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2c000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36000 for accel 0x556b9dc75930
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2c000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2c040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 433...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36200 = 0x556b9db2c200 allocated to accel structure 0x556b9dc759d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2c200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc759d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.678, 0.000, 4.362), (9.078, 0.400, 4.762)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2c200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36200 for accel 0x556b9dc759d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2c200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2c240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 434...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36400 = 0x556b9db2c400 allocated to accel structure 0x556b9dc75a70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2c400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75a70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.497, 0.000, 5.035), (8.897, 0.400, 5.435)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2c400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36400 for accel 0x556b9dc75a70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2c400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2c440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 435...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36600 = 0x556b9db2c600 allocated to accel structure 0x556b9dc75b10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2c600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75b10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.090, 0.000, 6.672), (8.490, 0.400, 7.072)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2c600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36600 for accel 0x556b9dc75b10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2c600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2c640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 436...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36800 = 0x556b9db2c800 allocated to accel structure 0x556b9dc75bb0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2c800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75bb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.342, 0.000, 6.903), (8.742, 0.400, 7.303)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2c800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36800 for accel 0x556b9dc75bb0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2c800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2c840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 437...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36a00 = 0x556b9db2ca00 allocated to accel structure 0x556b9dc75c50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ca00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75c50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.628, 0.000, 8.324), (9.028, 0.400, 8.724)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ca00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36a00 for accel 0x556b9dc75c50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ca00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ca40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 438...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36c00 = 0x556b9db2cc00 allocated to accel structure 0x556b9dc75cf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2cc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75cf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.104, 0.000, 8.839), (8.504, 0.400, 9.239)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2cc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36c00 for accel 0x556b9dc75cf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2cc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2cc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 439...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x36e00 = 0x556b9db2ce00 allocated to accel structure 0x556b9dc75d90
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ce00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75d90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.295, 0.000, 10.189), (8.695, 0.400, 10.589)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ce00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x36e00 for accel 0x556b9dc75d90
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ce00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ce40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 440...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37000 = 0x556b9db2d000 allocated to accel structure 0x556b9dc75e30
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2d000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75e30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.909, 0.000, -10.365), (9.309, 0.400, -9.965)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2d000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37000 for accel 0x556b9dc75e30
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2d000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2d040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 441...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37200 = 0x556b9db2d200 allocated to accel structure 0x556b9dc75ed0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2d200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75ed0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.404, 0.000, -9.943), (9.804, 0.400, -9.543)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2d200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37200 for accel 0x556b9dc75ed0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2d200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2d240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 442...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37400 = 0x556b9db2d400 allocated to accel structure 0x556b9dc75f70
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2d400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc75f70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.575, 0.000, -8.915), (9.975, 0.400, -8.515)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2d400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37400 for accel 0x556b9dc75f70
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2d400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2d440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 443...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37600 = 0x556b9db2d600 allocated to accel structure 0x556b9dc76010
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2d600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76010
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.372, 0.000, -7.973), (9.772, 0.400, -7.573)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2d600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37600 for accel 0x556b9dc76010
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2d600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2d640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 444...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37800 = 0x556b9db2d800 allocated to accel structure 0x556b9dc760b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2d800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc760b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.499, 0.000, -6.698), (9.899, 0.400, -6.298)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2d800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37800 for accel 0x556b9dc760b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2d800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2d840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 445...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37a00 = 0x556b9db2da00 allocated to accel structure 0x556b9dc76150
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2da00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.042, 0.000, -5.314), (9.442, 0.400, -4.914)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2da00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37a00 for accel 0x556b9dc76150
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2da00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2da40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 446...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37c00 = 0x556b9db2dc00 allocated to accel structure 0x556b9dc761f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2dc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc761f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.453, 0.000, -4.583), (9.853, 0.400, -4.183)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2dc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37c00 for accel 0x556b9dc761f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2dc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2dc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 447...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x37e00 = 0x556b9db2de00 allocated to accel structure 0x556b9dc76290
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2de00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76290
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.108, 0.000, -3.443), (9.508, 0.400, -3.043)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2de00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x37e00 for accel 0x556b9dc76290
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2de00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2de40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 448...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38000 = 0x556b9db2e000 allocated to accel structure 0x556b9dc76330
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2e000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76330
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.068, 0.000, -2.649), (9.468, 0.400, -2.249)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2e000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38000 for accel 0x556b9dc76330
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2e000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2e040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 449...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38200 = 0x556b9db2e200 allocated to accel structure 0x556b9dc763d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2e200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc763d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.589, 0.000, -1.627), (9.989, 0.400, -1.227)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2e200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38200 for accel 0x556b9dc763d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2e200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2e240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 450...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38400 = 0x556b9db2e400 allocated to accel structure 0x556b9dc76470
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2e400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76470
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.022, 0.000, -0.469), (9.422, 0.400, -0.069)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2e400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38400 for accel 0x556b9dc76470
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2e400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2e440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 451...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38600 = 0x556b9db2e600 allocated to accel structure 0x556b9dc76510
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2e600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76510
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.592, 0.000, 0.161), (9.992, 0.400, 0.561)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2e600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38600 for accel 0x556b9dc76510
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2e600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2e640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 452...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38800 = 0x556b9db2e800 allocated to accel structure 0x556b9dc765b0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2e800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc765b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.354, 0.000, 1.534), (9.754, 0.400, 1.934)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2e800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38800 for accel 0x556b9dc765b0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2e800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2e840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 453...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38a00 = 0x556b9db2ea00 allocated to accel structure 0x556b9dc76650
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ea00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76650
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.272, 0.000, 2.299), (9.672, 0.400, 2.699)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ea00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38a00 for accel 0x556b9dc76650
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ea00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ea40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 454...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38c00 = 0x556b9db2ec00 allocated to accel structure 0x556b9dc766f0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ec00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc766f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.982, 0.000, 2.810), (9.382, 0.400, 3.210)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ec00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38c00 for accel 0x556b9dc766f0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ec00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ec40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 455...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x38e00 = 0x556b9db2ee00 allocated to accel structure 0x556b9dc76790
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2ee00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76790
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.558, 0.000, 3.934), (9.958, 0.400, 4.334)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2ee00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x38e00 for accel 0x556b9dc76790
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2ee00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2ee40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 456...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39000 = 0x556b9db2f000 allocated to accel structure 0x556b9dc76830
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2f000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.204, 0.000, 5.147), (9.604, 0.400, 5.547)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2f000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39000 for accel 0x556b9dc76830
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2f000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2f040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 457...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39200 = 0x556b9db2f200 allocated to accel structure 0x556b9dc768d0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2f200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc768d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.397, 0.000, 6.152), (9.797, 0.400, 6.552)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2f200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39200 for accel 0x556b9dc768d0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2f200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2f240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 458...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39400 = 0x556b9db2f400 allocated to accel structure 0x556b9dc76970
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2f400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.120, 0.000, 6.950), (9.520, 0.400, 7.350)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2f400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39400 for accel 0x556b9dc76970
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2f400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2f440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 459...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39600 = 0x556b9db2f600 allocated to accel structure 0x556b9dc76a10
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2f600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76a10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.259, 0.000, 8.233), (9.659, 0.400, 8.633)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2f600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39600 for accel 0x556b9dc76a10
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2f600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2f640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 460...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39800 = 0x556b9db2f800 allocated to accel structure 0x556b9dc76ab0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2f800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76ab0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.305, 0.000, 9.003), (9.705, 0.400, 9.403)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2f800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39800 for accel 0x556b9dc76ab0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2f800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2f840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 461...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39a00 = 0x556b9db2fa00 allocated to accel structure 0x556b9dc76b50
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2fa00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76b50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.342, 0.000, 10.524), (9.742, 0.400, 10.924)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2fa00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39a00 for accel 0x556b9dc76b50
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2fa00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2fa40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 462...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39c00 = 0x556b9db2fc00 allocated to accel structure 0x556b9dc76bf0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2fc00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76bf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.853, 0.000, -11.066), (10.253, 0.400, -10.666)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2fc00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39c00 for accel 0x556b9dc76bf0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2fc00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2fc40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 463...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x39e00 = 0x556b9db2fe00 allocated to accel structure 0x556b9dc76d00
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db2fe00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76d00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.543, 0.000, -9.490), (10.943, 0.400, -9.090)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db2fe00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x39e00 for accel 0x556b9dc76d00
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db2fe00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db2fe40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 464...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3a000 = 0x556b9db30000 allocated to accel structure 0x556b9dc76da0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76da0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.191, 0.000, -8.538), (10.591, 0.400, -8.138)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3a000 for accel 0x556b9dc76da0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 465...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3a200 = 0x556b9db30200 allocated to accel structure 0x556b9dc76e40
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76e40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.490, 0.000, -7.538), (10.890, 0.400, -7.138)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3a200 for accel 0x556b9dc76e40
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 466...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3a400 = 0x556b9db30400 allocated to accel structure 0x556b9dc76ee0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76ee0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.179, 0.000, -7.044), (10.579, 0.400, -6.644)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3a400 for accel 0x556b9dc76ee0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 467...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3a600 = 0x556b9db30600 allocated to accel structure 0x556b9dc76f80
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc76f80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.692, 0.000, -5.831), (11.092, 0.400, -5.431)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3a600 for accel 0x556b9dc76f80
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 468...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3a800 = 0x556b9db30800 allocated to accel structure 0x556b9dc77020
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77020
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.966, 0.000, -5.017), (10.366, 0.400, -4.617)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3a800 for accel 0x556b9dc77020
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 469...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3aa00 = 0x556b9db30a00 allocated to accel structure 0x556b9dc770c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc770c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.327, 0.000, -4.178), (10.727, 0.400, -3.778)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3aa00 for accel 0x556b9dc770c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 470...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3ac00 = 0x556b9db30c00 allocated to accel structure 0x556b9dc77160
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77160
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.647, 0.000, -2.496), (11.047, 0.400, -2.096)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3ac00 for accel 0x556b9dc77160
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 471...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3ae00 = 0x556b9db30e00 allocated to accel structure 0x556b9dc77200
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db30e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77200
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.216, 0.000, -1.442), (10.616, 0.400, -1.042)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db30e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3ae00 for accel 0x556b9dc77200
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db30e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db30e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 472...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3b000 = 0x556b9db31000 allocated to accel structure 0x556b9dc772a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc772a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.920, 0.000, -0.565), (10.320, 0.400, -0.165)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3b000 for accel 0x556b9dc772a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 473...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3b200 = 0x556b9db31200 allocated to accel structure 0x556b9dc77340
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77340
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.502, 0.000, 0.193), (10.902, 0.400, 0.593)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3b200 for accel 0x556b9dc77340
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 474...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3b400 = 0x556b9db31400 allocated to accel structure 0x556b9dc773e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc773e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.349, 0.000, 1.003), (10.749, 0.400, 1.403)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3b400 for accel 0x556b9dc773e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 475...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3b600 = 0x556b9db31600 allocated to accel structure 0x556b9dc77480
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77480
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.812, 0.000, 2.661), (10.212, 0.400, 3.061)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3b600 for accel 0x556b9dc77480
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 476...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3b800 = 0x556b9db31800 allocated to accel structure 0x556b9dc77520
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77520
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.022, 0.000, 3.048), (10.422, 0.400, 3.448)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3b800 for accel 0x556b9dc77520
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 477...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3ba00 = 0x556b9db31a00 allocated to accel structure 0x556b9dc775c0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc775c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.186, 0.000, 4.483), (10.586, 0.400, 4.883)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3ba00 for accel 0x556b9dc775c0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 478...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3bc00 = 0x556b9db31c00 allocated to accel structure 0x556b9dc77660
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77660
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (9.830, 0.000, 5.568), (10.230, 0.400, 5.968)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3bc00 for accel 0x556b9dc77660
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 479...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3be00 = 0x556b9db31e00 allocated to accel structure 0x556b9dc77700
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db31e00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77700
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.084, 0.000, 6.279), (10.484, 0.400, 6.679)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db31e00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3be00 for accel 0x556b9dc77700
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db31e00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db31e40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 480...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3c000 = 0x556b9db32000 allocated to accel structure 0x556b9dc777a0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32000 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc777a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.397, 0.000, 7.459), (10.797, 0.400, 7.859)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32000 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3c000 for accel 0x556b9dc777a0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32000
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32040
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 481...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3c200 = 0x556b9db32200 allocated to accel structure 0x556b9dc77840
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32200 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77840
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.545, 0.000, 7.847), (10.945, 0.400, 8.247)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32200 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3c200 for accel 0x556b9dc77840
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32200
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32240
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 482...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3c400 = 0x556b9db32400 allocated to accel structure 0x556b9dc778e0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32400 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc778e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.031, 0.000, 9.682), (10.431, 0.400, 10.082)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32400 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3c400 for accel 0x556b9dc778e0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32400
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32440
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 483...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3c600 = 0x556b9db32600 allocated to accel structure 0x556b9dc77980
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32600 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (10.453, 0.000, 10.389), (10.853, 0.400, 10.789)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32600 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3c600 for accel 0x556b9dc77980
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32600
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32640
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 484...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3c800 = 0x556b9db32800 allocated to accel structure 0x556b9dc77a20
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32800 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77a20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1.000, 0.000, -1.000), (1.000, 2.000, 1.000)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32800 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3c800 for accel 0x556b9dc77a20
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32800
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32840
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 485...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3ca00 = 0x556b9db32a00 allocated to accel structure 0x556b9dc77ac0
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32a00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77ac0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-5.000, 0.000, -1.000), (-3.000, 2.000, 1.000)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32a00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3ca00 for accel 0x556b9dc77ac0
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32a00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32a40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Creating bottom level acceleration structure 486...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0x3ce00). 
LVP: Buffer 0x556b9daf6000 + 0x3cc00 = 0x556b9db32c00 allocated to accel structure 0x556b9dc77b60
gpgpusim: set BLAS address for 0x3ce00 at 0x556b9db32c00 to 0xc1e53200
RTV: Building BLAS into 0x556b9dc77b60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (3.000, 0.000, -1.000), (5.000, 2.000, 1.000)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Set dst_map 0x556b9db32c00 = accel->address.bo 0x556b9daf6000 + accel->address.offset 0x3cc00 for accel 0x556b9dc77b60
EMBREE: Pack bvh 0x7ffe348a4590 to dst_map 0x556b9db32c00
EMBREE: Pack root 0x7ffe348a4630 to root_map 0x556b9db32c40
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
RTV: Adding 487 BLAS instances
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b959108b0 address 0x556b9daf6000
RTV: Getting address of BLAS 0x556b959108b0 -> 0x556b9daf6000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b94e52590 address 0x556b9daf6200
RTV: Getting address of BLAS 0x556b94e52590 -> 0x556b9daf6200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b94e52150 address 0x556b9daf6400
RTV: Getting address of BLAS 0x556b94e52150 -> 0x556b9daf6400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b94e52210 address 0x556b9daf6600
RTV: Getting address of BLAS 0x556b94e52210 -> 0x556b9daf6600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b958e80c0 address 0x556b9daf6800
RTV: Getting address of BLAS 0x556b958e80c0 -> 0x556b9daf6800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5cbf0 address 0x556b9daf6a00
RTV: Getting address of BLAS 0x556b9dc5cbf0 -> 0x556b9daf6a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5cc90 address 0x556b9daf6c00
RTV: Getting address of BLAS 0x556b9dc5cc90 -> 0x556b9daf6c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5cd30 address 0x556b9daf6e00
RTV: Getting address of BLAS 0x556b9dc5cd30 -> 0x556b9daf6e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5cdd0 address 0x556b9daf7000
RTV: Getting address of BLAS 0x556b9dc5cdd0 -> 0x556b9daf7000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ce70 address 0x556b9daf7200
RTV: Getting address of BLAS 0x556b9dc5ce70 -> 0x556b9daf7200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5cf10 address 0x556b9daf7400
RTV: Getting address of BLAS 0x556b9dc5cf10 -> 0x556b9daf7400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5cfb0 address 0x556b9daf7600
RTV: Getting address of BLAS 0x556b9dc5cfb0 -> 0x556b9daf7600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d050 address 0x556b9daf7800
RTV: Getting address of BLAS 0x556b9dc5d050 -> 0x556b9daf7800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d0f0 address 0x556b9daf7a00
RTV: Getting address of BLAS 0x556b9dc5d0f0 -> 0x556b9daf7a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d190 address 0x556b9daf7c00
RTV: Getting address of BLAS 0x556b9dc5d190 -> 0x556b9daf7c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d230 address 0x556b9daf7e00
RTV: Getting address of BLAS 0x556b9dc5d230 -> 0x556b9daf7e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d2d0 address 0x556b9daf8000
RTV: Getting address of BLAS 0x556b9dc5d2d0 -> 0x556b9daf8000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d3a0 address 0x556b9daf8200
RTV: Getting address of BLAS 0x556b9dc5d3a0 -> 0x556b9daf8200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d440 address 0x556b9daf8400
RTV: Getting address of BLAS 0x556b9dc5d440 -> 0x556b9daf8400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d4e0 address 0x556b9daf8600
RTV: Getting address of BLAS 0x556b9dc5d4e0 -> 0x556b9daf8600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d580 address 0x556b9daf8800
RTV: Getting address of BLAS 0x556b9dc5d580 -> 0x556b9daf8800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d620 address 0x556b9daf8a00
RTV: Getting address of BLAS 0x556b9dc5d620 -> 0x556b9daf8a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d6c0 address 0x556b9daf8c00
RTV: Getting address of BLAS 0x556b9dc5d6c0 -> 0x556b9daf8c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d760 address 0x556b9daf8e00
RTV: Getting address of BLAS 0x556b9dc5d760 -> 0x556b9daf8e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d830 address 0x556b9daf9000
RTV: Getting address of BLAS 0x556b9dc5d830 -> 0x556b9daf9000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d8d0 address 0x556b9daf9200
RTV: Getting address of BLAS 0x556b9dc5d8d0 -> 0x556b9daf9200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5d970 address 0x556b9daf9400
RTV: Getting address of BLAS 0x556b9dc5d970 -> 0x556b9daf9400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5da10 address 0x556b9daf9600
RTV: Getting address of BLAS 0x556b9dc5da10 -> 0x556b9daf9600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5dab0 address 0x556b9daf9800
RTV: Getting address of BLAS 0x556b9dc5dab0 -> 0x556b9daf9800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5db50 address 0x556b9daf9a00
RTV: Getting address of BLAS 0x556b9dc5db50 -> 0x556b9daf9a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5dbf0 address 0x556b9daf9c00
RTV: Getting address of BLAS 0x556b9dc5dbf0 -> 0x556b9daf9c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5dc90 address 0x556b9daf9e00
RTV: Getting address of BLAS 0x556b9dc5dc90 -> 0x556b9daf9e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5dd30 address 0x556b9dafa000
RTV: Getting address of BLAS 0x556b9dc5dd30 -> 0x556b9dafa000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ddd0 address 0x556b9dafa200
RTV: Getting address of BLAS 0x556b9dc5ddd0 -> 0x556b9dafa200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5de70 address 0x556b9dafa400
RTV: Getting address of BLAS 0x556b9dc5de70 -> 0x556b9dafa400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5df10 address 0x556b9dafa600
RTV: Getting address of BLAS 0x556b9dc5df10 -> 0x556b9dafa600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5dfb0 address 0x556b9dafa800
RTV: Getting address of BLAS 0x556b9dc5dfb0 -> 0x556b9dafa800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e050 address 0x556b9dafaa00
RTV: Getting address of BLAS 0x556b9dc5e050 -> 0x556b9dafaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e0f0 address 0x556b9dafac00
RTV: Getting address of BLAS 0x556b9dc5e0f0 -> 0x556b9dafac00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e190 address 0x556b9dafae00
RTV: Getting address of BLAS 0x556b9dc5e190 -> 0x556b9dafae00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e230 address 0x556b9dafb000
RTV: Getting address of BLAS 0x556b9dc5e230 -> 0x556b9dafb000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e2d0 address 0x556b9dafb200
RTV: Getting address of BLAS 0x556b9dc5e2d0 -> 0x556b9dafb200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e370 address 0x556b9dafb400
RTV: Getting address of BLAS 0x556b9dc5e370 -> 0x556b9dafb400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e410 address 0x556b9dafb600
RTV: Getting address of BLAS 0x556b9dc5e410 -> 0x556b9dafb600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e4b0 address 0x556b9dafb800
RTV: Getting address of BLAS 0x556b9dc5e4b0 -> 0x556b9dafb800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e550 address 0x556b9dafba00
RTV: Getting address of BLAS 0x556b9dc5e550 -> 0x556b9dafba00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e5f0 address 0x556b9dafbc00
RTV: Getting address of BLAS 0x556b9dc5e5f0 -> 0x556b9dafbc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e690 address 0x556b9dafbe00
RTV: Getting address of BLAS 0x556b9dc5e690 -> 0x556b9dafbe00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e730 address 0x556b9dafc000
RTV: Getting address of BLAS 0x556b9dc5e730 -> 0x556b9dafc000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e7d0 address 0x556b9dafc200
RTV: Getting address of BLAS 0x556b9dc5e7d0 -> 0x556b9dafc200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e870 address 0x556b9dafc400
RTV: Getting address of BLAS 0x556b9dc5e870 -> 0x556b9dafc400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e910 address 0x556b9dafc600
RTV: Getting address of BLAS 0x556b9dc5e910 -> 0x556b9dafc600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5e9b0 address 0x556b9dafc800
RTV: Getting address of BLAS 0x556b9dc5e9b0 -> 0x556b9dafc800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ea50 address 0x556b9dafca00
RTV: Getting address of BLAS 0x556b9dc5ea50 -> 0x556b9dafca00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5eaf0 address 0x556b9dafcc00
RTV: Getting address of BLAS 0x556b9dc5eaf0 -> 0x556b9dafcc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5eb90 address 0x556b9dafce00
RTV: Getting address of BLAS 0x556b9dc5eb90 -> 0x556b9dafce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ec30 address 0x556b9dafd000
RTV: Getting address of BLAS 0x556b9dc5ec30 -> 0x556b9dafd000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ecd0 address 0x556b9dafd200
RTV: Getting address of BLAS 0x556b9dc5ecd0 -> 0x556b9dafd200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ed70 address 0x556b9dafd400
RTV: Getting address of BLAS 0x556b9dc5ed70 -> 0x556b9dafd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ee10 address 0x556b9dafd600
RTV: Getting address of BLAS 0x556b9dc5ee10 -> 0x556b9dafd600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5eeb0 address 0x556b9dafd800
RTV: Getting address of BLAS 0x556b9dc5eeb0 -> 0x556b9dafd800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ef50 address 0x556b9dafda00
RTV: Getting address of BLAS 0x556b9dc5ef50 -> 0x556b9dafda00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5eff0 address 0x556b9dafdc00
RTV: Getting address of BLAS 0x556b9dc5eff0 -> 0x556b9dafdc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f090 address 0x556b9dafde00
RTV: Getting address of BLAS 0x556b9dc5f090 -> 0x556b9dafde00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f130 address 0x556b9dafe000
RTV: Getting address of BLAS 0x556b9dc5f130 -> 0x556b9dafe000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f1d0 address 0x556b9dafe200
RTV: Getting address of BLAS 0x556b9dc5f1d0 -> 0x556b9dafe200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f270 address 0x556b9dafe400
RTV: Getting address of BLAS 0x556b9dc5f270 -> 0x556b9dafe400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f310 address 0x556b9dafe600
RTV: Getting address of BLAS 0x556b9dc5f310 -> 0x556b9dafe600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f3b0 address 0x556b9dafe800
RTV: Getting address of BLAS 0x556b9dc5f3b0 -> 0x556b9dafe800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f450 address 0x556b9dafea00
RTV: Getting address of BLAS 0x556b9dc5f450 -> 0x556b9dafea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f4f0 address 0x556b9dafec00
RTV: Getting address of BLAS 0x556b9dc5f4f0 -> 0x556b9dafec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f590 address 0x556b9dafee00
RTV: Getting address of BLAS 0x556b9dc5f590 -> 0x556b9dafee00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f630 address 0x556b9daff000
RTV: Getting address of BLAS 0x556b9dc5f630 -> 0x556b9daff000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f6d0 address 0x556b9daff200
RTV: Getting address of BLAS 0x556b9dc5f6d0 -> 0x556b9daff200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f770 address 0x556b9daff400
RTV: Getting address of BLAS 0x556b9dc5f770 -> 0x556b9daff400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f810 address 0x556b9daff600
RTV: Getting address of BLAS 0x556b9dc5f810 -> 0x556b9daff600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f8b0 address 0x556b9daff800
RTV: Getting address of BLAS 0x556b9dc5f8b0 -> 0x556b9daff800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f950 address 0x556b9daffa00
RTV: Getting address of BLAS 0x556b9dc5f950 -> 0x556b9daffa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5f9f0 address 0x556b9daffc00
RTV: Getting address of BLAS 0x556b9dc5f9f0 -> 0x556b9daffc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fa90 address 0x556b9daffe00
RTV: Getting address of BLAS 0x556b9dc5fa90 -> 0x556b9daffe00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fb30 address 0x556b9db00000
RTV: Getting address of BLAS 0x556b9dc5fb30 -> 0x556b9db00000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5c640 address 0x556b9db00200
RTV: Getting address of BLAS 0x556b9dc5c640 -> 0x556b9db00200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fc70 address 0x556b9db00400
RTV: Getting address of BLAS 0x556b9dc5fc70 -> 0x556b9db00400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fd10 address 0x556b9db00600
RTV: Getting address of BLAS 0x556b9dc5fd10 -> 0x556b9db00600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fdb0 address 0x556b9db00800
RTV: Getting address of BLAS 0x556b9dc5fdb0 -> 0x556b9db00800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fe50 address 0x556b9db00a00
RTV: Getting address of BLAS 0x556b9dc5fe50 -> 0x556b9db00a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fef0 address 0x556b9db00c00
RTV: Getting address of BLAS 0x556b9dc5fef0 -> 0x556b9db00c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5ff90 address 0x556b9db00e00
RTV: Getting address of BLAS 0x556b9dc5ff90 -> 0x556b9db00e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60030 address 0x556b9db01000
RTV: Getting address of BLAS 0x556b9dc60030 -> 0x556b9db01000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc600d0 address 0x556b9db01200
RTV: Getting address of BLAS 0x556b9dc600d0 -> 0x556b9db01200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60170 address 0x556b9db01400
RTV: Getting address of BLAS 0x556b9dc60170 -> 0x556b9db01400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60210 address 0x556b9db01600
RTV: Getting address of BLAS 0x556b9dc60210 -> 0x556b9db01600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc602b0 address 0x556b9db01800
RTV: Getting address of BLAS 0x556b9dc602b0 -> 0x556b9db01800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60350 address 0x556b9db01a00
RTV: Getting address of BLAS 0x556b9dc60350 -> 0x556b9db01a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc603f0 address 0x556b9db01c00
RTV: Getting address of BLAS 0x556b9dc603f0 -> 0x556b9db01c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60490 address 0x556b9db01e00
RTV: Getting address of BLAS 0x556b9dc60490 -> 0x556b9db01e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60530 address 0x556b9db02000
RTV: Getting address of BLAS 0x556b9dc60530 -> 0x556b9db02000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc605d0 address 0x556b9db02200
RTV: Getting address of BLAS 0x556b9dc605d0 -> 0x556b9db02200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60670 address 0x556b9db02400
RTV: Getting address of BLAS 0x556b9dc60670 -> 0x556b9db02400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60710 address 0x556b9db02600
RTV: Getting address of BLAS 0x556b9dc60710 -> 0x556b9db02600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc607b0 address 0x556b9db02800
RTV: Getting address of BLAS 0x556b9dc607b0 -> 0x556b9db02800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60850 address 0x556b9db02a00
RTV: Getting address of BLAS 0x556b9dc60850 -> 0x556b9db02a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc608f0 address 0x556b9db02c00
RTV: Getting address of BLAS 0x556b9dc608f0 -> 0x556b9db02c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60990 address 0x556b9db02e00
RTV: Getting address of BLAS 0x556b9dc60990 -> 0x556b9db02e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60a30 address 0x556b9db03000
RTV: Getting address of BLAS 0x556b9dc60a30 -> 0x556b9db03000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60b40 address 0x556b9db03200
RTV: Getting address of BLAS 0x556b9dc60b40 -> 0x556b9db03200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60ba0 address 0x556b9db03400
RTV: Getting address of BLAS 0x556b9dc60ba0 -> 0x556b9db03400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64c40 address 0x556b9db03600
RTV: Getting address of BLAS 0x556b9dc64c40 -> 0x556b9db03600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64ce0 address 0x556b9db03800
RTV: Getting address of BLAS 0x556b9dc64ce0 -> 0x556b9db03800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5c7c0 address 0x556b9db03a00
RTV: Getting address of BLAS 0x556b9dc5c7c0 -> 0x556b9db03a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64df0 address 0x556b9db03c00
RTV: Getting address of BLAS 0x556b9dc64df0 -> 0x556b9db03c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64e90 address 0x556b9db03e00
RTV: Getting address of BLAS 0x556b9dc64e90 -> 0x556b9db03e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64f30 address 0x556b9db04000
RTV: Getting address of BLAS 0x556b9dc64f30 -> 0x556b9db04000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64fd0 address 0x556b9db04200
RTV: Getting address of BLAS 0x556b9dc64fd0 -> 0x556b9db04200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65070 address 0x556b9db04400
RTV: Getting address of BLAS 0x556b9dc65070 -> 0x556b9db04400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65110 address 0x556b9db04600
RTV: Getting address of BLAS 0x556b9dc65110 -> 0x556b9db04600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc651b0 address 0x556b9db04800
RTV: Getting address of BLAS 0x556b9dc651b0 -> 0x556b9db04800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65250 address 0x556b9db04a00
RTV: Getting address of BLAS 0x556b9dc65250 -> 0x556b9db04a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc652f0 address 0x556b9db04c00
RTV: Getting address of BLAS 0x556b9dc652f0 -> 0x556b9db04c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65390 address 0x556b9db04e00
RTV: Getting address of BLAS 0x556b9dc65390 -> 0x556b9db04e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65430 address 0x556b9db05000
RTV: Getting address of BLAS 0x556b9dc65430 -> 0x556b9db05000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc654d0 address 0x556b9db05200
RTV: Getting address of BLAS 0x556b9dc654d0 -> 0x556b9db05200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65570 address 0x556b9db05400
RTV: Getting address of BLAS 0x556b9dc65570 -> 0x556b9db05400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65610 address 0x556b9db05600
RTV: Getting address of BLAS 0x556b9dc65610 -> 0x556b9db05600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc656b0 address 0x556b9db05800
RTV: Getting address of BLAS 0x556b9dc656b0 -> 0x556b9db05800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65750 address 0x556b9db05a00
RTV: Getting address of BLAS 0x556b9dc65750 -> 0x556b9db05a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc657f0 address 0x556b9db05c00
RTV: Getting address of BLAS 0x556b9dc657f0 -> 0x556b9db05c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65890 address 0x556b9db05e00
RTV: Getting address of BLAS 0x556b9dc65890 -> 0x556b9db05e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65930 address 0x556b9db06000
RTV: Getting address of BLAS 0x556b9dc65930 -> 0x556b9db06000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc659d0 address 0x556b9db06200
RTV: Getting address of BLAS 0x556b9dc659d0 -> 0x556b9db06200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65a70 address 0x556b9db06400
RTV: Getting address of BLAS 0x556b9dc65a70 -> 0x556b9db06400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65b10 address 0x556b9db06600
RTV: Getting address of BLAS 0x556b9dc65b10 -> 0x556b9db06600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65bb0 address 0x556b9db06800
RTV: Getting address of BLAS 0x556b9dc65bb0 -> 0x556b9db06800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65c50 address 0x556b9db06a00
RTV: Getting address of BLAS 0x556b9dc65c50 -> 0x556b9db06a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65cf0 address 0x556b9db06c00
RTV: Getting address of BLAS 0x556b9dc65cf0 -> 0x556b9db06c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65d90 address 0x556b9db06e00
RTV: Getting address of BLAS 0x556b9dc65d90 -> 0x556b9db06e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65e30 address 0x556b9db07000
RTV: Getting address of BLAS 0x556b9dc65e30 -> 0x556b9db07000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65ed0 address 0x556b9db07200
RTV: Getting address of BLAS 0x556b9dc65ed0 -> 0x556b9db07200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc65f70 address 0x556b9db07400
RTV: Getting address of BLAS 0x556b9dc65f70 -> 0x556b9db07400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66010 address 0x556b9db07600
RTV: Getting address of BLAS 0x556b9dc66010 -> 0x556b9db07600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc660b0 address 0x556b9db07800
RTV: Getting address of BLAS 0x556b9dc660b0 -> 0x556b9db07800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66150 address 0x556b9db07a00
RTV: Getting address of BLAS 0x556b9dc66150 -> 0x556b9db07a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc661f0 address 0x556b9db07c00
RTV: Getting address of BLAS 0x556b9dc661f0 -> 0x556b9db07c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66290 address 0x556b9db07e00
RTV: Getting address of BLAS 0x556b9dc66290 -> 0x556b9db07e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66330 address 0x556b9db08000
RTV: Getting address of BLAS 0x556b9dc66330 -> 0x556b9db08000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc663d0 address 0x556b9db08200
RTV: Getting address of BLAS 0x556b9dc663d0 -> 0x556b9db08200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66470 address 0x556b9db08400
RTV: Getting address of BLAS 0x556b9dc66470 -> 0x556b9db08400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66510 address 0x556b9db08600
RTV: Getting address of BLAS 0x556b9dc66510 -> 0x556b9db08600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc665b0 address 0x556b9db08800
RTV: Getting address of BLAS 0x556b9dc665b0 -> 0x556b9db08800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66650 address 0x556b9db08a00
RTV: Getting address of BLAS 0x556b9dc66650 -> 0x556b9db08a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc666f0 address 0x556b9db08c00
RTV: Getting address of BLAS 0x556b9dc666f0 -> 0x556b9db08c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66790 address 0x556b9db08e00
RTV: Getting address of BLAS 0x556b9dc66790 -> 0x556b9db08e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66830 address 0x556b9db09000
RTV: Getting address of BLAS 0x556b9dc66830 -> 0x556b9db09000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc668d0 address 0x556b9db09200
RTV: Getting address of BLAS 0x556b9dc668d0 -> 0x556b9db09200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66970 address 0x556b9db09400
RTV: Getting address of BLAS 0x556b9dc66970 -> 0x556b9db09400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc66a10 address 0x556b9db09600
RTV: Getting address of BLAS 0x556b9dc66a10 -> 0x556b9db09600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60c00 address 0x556b9db09800
RTV: Getting address of BLAS 0x556b9dc60c00 -> 0x556b9db09800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60ca0 address 0x556b9db09a00
RTV: Getting address of BLAS 0x556b9dc60ca0 -> 0x556b9db09a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60d40 address 0x556b9db09c00
RTV: Getting address of BLAS 0x556b9dc60d40 -> 0x556b9db09c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60de0 address 0x556b9db09e00
RTV: Getting address of BLAS 0x556b9dc60de0 -> 0x556b9db09e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60e80 address 0x556b9db0a000
RTV: Getting address of BLAS 0x556b9dc60e80 -> 0x556b9db0a000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60f20 address 0x556b9db0a200
RTV: Getting address of BLAS 0x556b9dc60f20 -> 0x556b9db0a200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc60fc0 address 0x556b9db0a400
RTV: Getting address of BLAS 0x556b9dc60fc0 -> 0x556b9db0a400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61060 address 0x556b9db0a600
RTV: Getting address of BLAS 0x556b9dc61060 -> 0x556b9db0a600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61100 address 0x556b9db0a800
RTV: Getting address of BLAS 0x556b9dc61100 -> 0x556b9db0a800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc611a0 address 0x556b9db0aa00
RTV: Getting address of BLAS 0x556b9dc611a0 -> 0x556b9db0aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61240 address 0x556b9db0ac00
RTV: Getting address of BLAS 0x556b9dc61240 -> 0x556b9db0ac00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc612e0 address 0x556b9db0ae00
RTV: Getting address of BLAS 0x556b9dc612e0 -> 0x556b9db0ae00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61380 address 0x556b9db0b000
RTV: Getting address of BLAS 0x556b9dc61380 -> 0x556b9db0b000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61420 address 0x556b9db0b200
RTV: Getting address of BLAS 0x556b9dc61420 -> 0x556b9db0b200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc614c0 address 0x556b9db0b400
RTV: Getting address of BLAS 0x556b9dc614c0 -> 0x556b9db0b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61560 address 0x556b9db0b600
RTV: Getting address of BLAS 0x556b9dc61560 -> 0x556b9db0b600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5c5b0 address 0x556b9db0b800
RTV: Getting address of BLAS 0x556b9dc5c5b0 -> 0x556b9db0b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc616a0 address 0x556b9db0ba00
RTV: Getting address of BLAS 0x556b9dc616a0 -> 0x556b9db0ba00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61740 address 0x556b9db0bc00
RTV: Getting address of BLAS 0x556b9dc61740 -> 0x556b9db0bc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc617e0 address 0x556b9db0be00
RTV: Getting address of BLAS 0x556b9dc617e0 -> 0x556b9db0be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61880 address 0x556b9db0c000
RTV: Getting address of BLAS 0x556b9dc61880 -> 0x556b9db0c000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61920 address 0x556b9db0c200
RTV: Getting address of BLAS 0x556b9dc61920 -> 0x556b9db0c200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc619c0 address 0x556b9db0c400
RTV: Getting address of BLAS 0x556b9dc619c0 -> 0x556b9db0c400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61a60 address 0x556b9db0c600
RTV: Getting address of BLAS 0x556b9dc61a60 -> 0x556b9db0c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61b00 address 0x556b9db0c800
RTV: Getting address of BLAS 0x556b9dc61b00 -> 0x556b9db0c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61ba0 address 0x556b9db0ca00
RTV: Getting address of BLAS 0x556b9dc61ba0 -> 0x556b9db0ca00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61c40 address 0x556b9db0cc00
RTV: Getting address of BLAS 0x556b9dc61c40 -> 0x556b9db0cc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61ce0 address 0x556b9db0ce00
RTV: Getting address of BLAS 0x556b9dc61ce0 -> 0x556b9db0ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61d80 address 0x556b9db0d000
RTV: Getting address of BLAS 0x556b9dc61d80 -> 0x556b9db0d000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61e20 address 0x556b9db0d200
RTV: Getting address of BLAS 0x556b9dc61e20 -> 0x556b9db0d200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61ec0 address 0x556b9db0d400
RTV: Getting address of BLAS 0x556b9dc61ec0 -> 0x556b9db0d400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc61f60 address 0x556b9db0d600
RTV: Getting address of BLAS 0x556b9dc61f60 -> 0x556b9db0d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62000 address 0x556b9db0d800
RTV: Getting address of BLAS 0x556b9dc62000 -> 0x556b9db0d800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc620a0 address 0x556b9db0da00
RTV: Getting address of BLAS 0x556b9dc620a0 -> 0x556b9db0da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62140 address 0x556b9db0dc00
RTV: Getting address of BLAS 0x556b9dc62140 -> 0x556b9db0dc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc621e0 address 0x556b9db0de00
RTV: Getting address of BLAS 0x556b9dc621e0 -> 0x556b9db0de00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62280 address 0x556b9db0e000
RTV: Getting address of BLAS 0x556b9dc62280 -> 0x556b9db0e000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62320 address 0x556b9db0e200
RTV: Getting address of BLAS 0x556b9dc62320 -> 0x556b9db0e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc623c0 address 0x556b9db0e400
RTV: Getting address of BLAS 0x556b9dc623c0 -> 0x556b9db0e400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62460 address 0x556b9db0e600
RTV: Getting address of BLAS 0x556b9dc62460 -> 0x556b9db0e600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62500 address 0x556b9db0e800
RTV: Getting address of BLAS 0x556b9dc62500 -> 0x556b9db0e800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc625a0 address 0x556b9db0ea00
RTV: Getting address of BLAS 0x556b9dc625a0 -> 0x556b9db0ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62640 address 0x556b9db0ec00
RTV: Getting address of BLAS 0x556b9dc62640 -> 0x556b9db0ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc626e0 address 0x556b9db0ee00
RTV: Getting address of BLAS 0x556b9dc626e0 -> 0x556b9db0ee00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62780 address 0x556b9db0f000
RTV: Getting address of BLAS 0x556b9dc62780 -> 0x556b9db0f000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62820 address 0x556b9db0f200
RTV: Getting address of BLAS 0x556b9dc62820 -> 0x556b9db0f200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc628c0 address 0x556b9db0f400
RTV: Getting address of BLAS 0x556b9dc628c0 -> 0x556b9db0f400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62960 address 0x556b9db0f600
RTV: Getting address of BLAS 0x556b9dc62960 -> 0x556b9db0f600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62a00 address 0x556b9db0f800
RTV: Getting address of BLAS 0x556b9dc62a00 -> 0x556b9db0f800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62aa0 address 0x556b9db0fa00
RTV: Getting address of BLAS 0x556b9dc62aa0 -> 0x556b9db0fa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5c940 address 0x556b9db0fc00
RTV: Getting address of BLAS 0x556b9dc5c940 -> 0x556b9db0fc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5c8b0 address 0x556b9db0fe00
RTV: Getting address of BLAS 0x556b9dc5c8b0 -> 0x556b9db0fe00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62cc0 address 0x556b9db10000
RTV: Getting address of BLAS 0x556b9dc62cc0 -> 0x556b9db10000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62d60 address 0x556b9db10200
RTV: Getting address of BLAS 0x556b9dc62d60 -> 0x556b9db10200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62e00 address 0x556b9db10400
RTV: Getting address of BLAS 0x556b9dc62e00 -> 0x556b9db10400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62ea0 address 0x556b9db10600
RTV: Getting address of BLAS 0x556b9dc62ea0 -> 0x556b9db10600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62f40 address 0x556b9db10800
RTV: Getting address of BLAS 0x556b9dc62f40 -> 0x556b9db10800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62fe0 address 0x556b9db10a00
RTV: Getting address of BLAS 0x556b9dc62fe0 -> 0x556b9db10a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63080 address 0x556b9db10c00
RTV: Getting address of BLAS 0x556b9dc63080 -> 0x556b9db10c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63120 address 0x556b9db10e00
RTV: Getting address of BLAS 0x556b9dc63120 -> 0x556b9db10e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc631c0 address 0x556b9db11000
RTV: Getting address of BLAS 0x556b9dc631c0 -> 0x556b9db11000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63260 address 0x556b9db11200
RTV: Getting address of BLAS 0x556b9dc63260 -> 0x556b9db11200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63300 address 0x556b9db11400
RTV: Getting address of BLAS 0x556b9dc63300 -> 0x556b9db11400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc633a0 address 0x556b9db11600
RTV: Getting address of BLAS 0x556b9dc633a0 -> 0x556b9db11600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63440 address 0x556b9db11800
RTV: Getting address of BLAS 0x556b9dc63440 -> 0x556b9db11800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc634e0 address 0x556b9db11a00
RTV: Getting address of BLAS 0x556b9dc634e0 -> 0x556b9db11a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63580 address 0x556b9db11c00
RTV: Getting address of BLAS 0x556b9dc63580 -> 0x556b9db11c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63620 address 0x556b9db11e00
RTV: Getting address of BLAS 0x556b9dc63620 -> 0x556b9db11e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc636c0 address 0x556b9db12000
RTV: Getting address of BLAS 0x556b9dc636c0 -> 0x556b9db12000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63760 address 0x556b9db12200
RTV: Getting address of BLAS 0x556b9dc63760 -> 0x556b9db12200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63800 address 0x556b9db12400
RTV: Getting address of BLAS 0x556b9dc63800 -> 0x556b9db12400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc638a0 address 0x556b9db12600
RTV: Getting address of BLAS 0x556b9dc638a0 -> 0x556b9db12600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63940 address 0x556b9db12800
RTV: Getting address of BLAS 0x556b9dc63940 -> 0x556b9db12800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc639e0 address 0x556b9db12a00
RTV: Getting address of BLAS 0x556b9dc639e0 -> 0x556b9db12a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63a80 address 0x556b9db12c00
RTV: Getting address of BLAS 0x556b9dc63a80 -> 0x556b9db12c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63b20 address 0x556b9db12e00
RTV: Getting address of BLAS 0x556b9dc63b20 -> 0x556b9db12e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63bc0 address 0x556b9db13000
RTV: Getting address of BLAS 0x556b9dc63bc0 -> 0x556b9db13000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63c60 address 0x556b9db13200
RTV: Getting address of BLAS 0x556b9dc63c60 -> 0x556b9db13200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63d00 address 0x556b9db13400
RTV: Getting address of BLAS 0x556b9dc63d00 -> 0x556b9db13400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63da0 address 0x556b9db13600
RTV: Getting address of BLAS 0x556b9dc63da0 -> 0x556b9db13600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63e40 address 0x556b9db13800
RTV: Getting address of BLAS 0x556b9dc63e40 -> 0x556b9db13800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63ee0 address 0x556b9db13a00
RTV: Getting address of BLAS 0x556b9dc63ee0 -> 0x556b9db13a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc63f80 address 0x556b9db13c00
RTV: Getting address of BLAS 0x556b9dc63f80 -> 0x556b9db13c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64020 address 0x556b9db13e00
RTV: Getting address of BLAS 0x556b9dc64020 -> 0x556b9db13e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc640c0 address 0x556b9db14000
RTV: Getting address of BLAS 0x556b9dc640c0 -> 0x556b9db14000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64160 address 0x556b9db14200
RTV: Getting address of BLAS 0x556b9dc64160 -> 0x556b9db14200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64200 address 0x556b9db14400
RTV: Getting address of BLAS 0x556b9dc64200 -> 0x556b9db14400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc642a0 address 0x556b9db14600
RTV: Getting address of BLAS 0x556b9dc642a0 -> 0x556b9db14600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64340 address 0x556b9db14800
RTV: Getting address of BLAS 0x556b9dc64340 -> 0x556b9db14800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc643e0 address 0x556b9db14a00
RTV: Getting address of BLAS 0x556b9dc643e0 -> 0x556b9db14a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64480 address 0x556b9db14c00
RTV: Getting address of BLAS 0x556b9dc64480 -> 0x556b9db14c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64520 address 0x556b9db14e00
RTV: Getting address of BLAS 0x556b9dc64520 -> 0x556b9db14e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc645c0 address 0x556b9db15000
RTV: Getting address of BLAS 0x556b9dc645c0 -> 0x556b9db15000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64660 address 0x556b9db15200
RTV: Getting address of BLAS 0x556b9dc64660 -> 0x556b9db15200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64700 address 0x556b9db15400
RTV: Getting address of BLAS 0x556b9dc64700 -> 0x556b9db15400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc647a0 address 0x556b9db15600
RTV: Getting address of BLAS 0x556b9dc647a0 -> 0x556b9db15600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64840 address 0x556b9db15800
RTV: Getting address of BLAS 0x556b9dc64840 -> 0x556b9db15800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc648e0 address 0x556b9db15a00
RTV: Getting address of BLAS 0x556b9dc648e0 -> 0x556b9db15a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64980 address 0x556b9db15c00
RTV: Getting address of BLAS 0x556b9dc64980 -> 0x556b9db15c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64a20 address 0x556b9db15e00
RTV: Getting address of BLAS 0x556b9dc64a20 -> 0x556b9db15e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64ac0 address 0x556b9db16000
RTV: Getting address of BLAS 0x556b9dc64ac0 -> 0x556b9db16000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc64b60 address 0x556b9db16200
RTV: Getting address of BLAS 0x556b9dc64b60 -> 0x556b9db16200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70b50 address 0x556b9db16400
RTV: Getting address of BLAS 0x556b9dc70b50 -> 0x556b9db16400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70bb0 address 0x556b9db16600
RTV: Getting address of BLAS 0x556b9dc70bb0 -> 0x556b9db16600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70c50 address 0x556b9db16800
RTV: Getting address of BLAS 0x556b9dc70c50 -> 0x556b9db16800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70cf0 address 0x556b9db16a00
RTV: Getting address of BLAS 0x556b9dc70cf0 -> 0x556b9db16a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70d90 address 0x556b9db16c00
RTV: Getting address of BLAS 0x556b9dc70d90 -> 0x556b9db16c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70e30 address 0x556b9db16e00
RTV: Getting address of BLAS 0x556b9dc70e30 -> 0x556b9db16e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70ed0 address 0x556b9db17000
RTV: Getting address of BLAS 0x556b9dc70ed0 -> 0x556b9db17000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc70f70 address 0x556b9db17200
RTV: Getting address of BLAS 0x556b9dc70f70 -> 0x556b9db17200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71010 address 0x556b9db17400
RTV: Getting address of BLAS 0x556b9dc71010 -> 0x556b9db17400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc710b0 address 0x556b9db17600
RTV: Getting address of BLAS 0x556b9dc710b0 -> 0x556b9db17600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71150 address 0x556b9db17800
RTV: Getting address of BLAS 0x556b9dc71150 -> 0x556b9db17800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc711f0 address 0x556b9db17a00
RTV: Getting address of BLAS 0x556b9dc711f0 -> 0x556b9db17a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71290 address 0x556b9db17c00
RTV: Getting address of BLAS 0x556b9dc71290 -> 0x556b9db17c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71330 address 0x556b9db17e00
RTV: Getting address of BLAS 0x556b9dc71330 -> 0x556b9db17e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc713d0 address 0x556b9db18000
RTV: Getting address of BLAS 0x556b9dc713d0 -> 0x556b9db18000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71470 address 0x556b9db18200
RTV: Getting address of BLAS 0x556b9dc71470 -> 0x556b9db18200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71510 address 0x556b9db18400
RTV: Getting address of BLAS 0x556b9dc71510 -> 0x556b9db18400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc715b0 address 0x556b9db18600
RTV: Getting address of BLAS 0x556b9dc715b0 -> 0x556b9db18600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71650 address 0x556b9db18800
RTV: Getting address of BLAS 0x556b9dc71650 -> 0x556b9db18800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc716f0 address 0x556b9db18a00
RTV: Getting address of BLAS 0x556b9dc716f0 -> 0x556b9db18a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71790 address 0x556b9db18c00
RTV: Getting address of BLAS 0x556b9dc71790 -> 0x556b9db18c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71830 address 0x556b9db18e00
RTV: Getting address of BLAS 0x556b9dc71830 -> 0x556b9db18e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc718d0 address 0x556b9db19000
RTV: Getting address of BLAS 0x556b9dc718d0 -> 0x556b9db19000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71970 address 0x556b9db19200
RTV: Getting address of BLAS 0x556b9dc71970 -> 0x556b9db19200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71a10 address 0x556b9db19400
RTV: Getting address of BLAS 0x556b9dc71a10 -> 0x556b9db19400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71ab0 address 0x556b9db19600
RTV: Getting address of BLAS 0x556b9dc71ab0 -> 0x556b9db19600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71b50 address 0x556b9db19800
RTV: Getting address of BLAS 0x556b9dc71b50 -> 0x556b9db19800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71bf0 address 0x556b9db19a00
RTV: Getting address of BLAS 0x556b9dc71bf0 -> 0x556b9db19a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71c90 address 0x556b9db19c00
RTV: Getting address of BLAS 0x556b9dc71c90 -> 0x556b9db19c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71d30 address 0x556b9db19e00
RTV: Getting address of BLAS 0x556b9dc71d30 -> 0x556b9db19e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71dd0 address 0x556b9db1a000
RTV: Getting address of BLAS 0x556b9dc71dd0 -> 0x556b9db1a000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71e70 address 0x556b9db1a200
RTV: Getting address of BLAS 0x556b9dc71e70 -> 0x556b9db1a200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71f10 address 0x556b9db1a400
RTV: Getting address of BLAS 0x556b9dc71f10 -> 0x556b9db1a400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc71fb0 address 0x556b9db1a600
RTV: Getting address of BLAS 0x556b9dc71fb0 -> 0x556b9db1a600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72050 address 0x556b9db1a800
RTV: Getting address of BLAS 0x556b9dc72050 -> 0x556b9db1a800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc720f0 address 0x556b9db1aa00
RTV: Getting address of BLAS 0x556b9dc720f0 -> 0x556b9db1aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72190 address 0x556b9db1ac00
RTV: Getting address of BLAS 0x556b9dc72190 -> 0x556b9db1ac00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72230 address 0x556b9db1ae00
RTV: Getting address of BLAS 0x556b9dc72230 -> 0x556b9db1ae00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc722d0 address 0x556b9db1b000
RTV: Getting address of BLAS 0x556b9dc722d0 -> 0x556b9db1b000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72370 address 0x556b9db1b200
RTV: Getting address of BLAS 0x556b9dc72370 -> 0x556b9db1b200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72410 address 0x556b9db1b400
RTV: Getting address of BLAS 0x556b9dc72410 -> 0x556b9db1b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc724b0 address 0x556b9db1b600
RTV: Getting address of BLAS 0x556b9dc724b0 -> 0x556b9db1b600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72550 address 0x556b9db1b800
RTV: Getting address of BLAS 0x556b9dc72550 -> 0x556b9db1b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc725f0 address 0x556b9db1ba00
RTV: Getting address of BLAS 0x556b9dc725f0 -> 0x556b9db1ba00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72690 address 0x556b9db1bc00
RTV: Getting address of BLAS 0x556b9dc72690 -> 0x556b9db1bc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72730 address 0x556b9db1be00
RTV: Getting address of BLAS 0x556b9dc72730 -> 0x556b9db1be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc727d0 address 0x556b9db1c000
RTV: Getting address of BLAS 0x556b9dc727d0 -> 0x556b9db1c000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72870 address 0x556b9db1c200
RTV: Getting address of BLAS 0x556b9dc72870 -> 0x556b9db1c200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72910 address 0x556b9db1c400
RTV: Getting address of BLAS 0x556b9dc72910 -> 0x556b9db1c400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc729b0 address 0x556b9db1c600
RTV: Getting address of BLAS 0x556b9dc729b0 -> 0x556b9db1c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72a50 address 0x556b9db1c800
RTV: Getting address of BLAS 0x556b9dc72a50 -> 0x556b9db1c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72af0 address 0x556b9db1ca00
RTV: Getting address of BLAS 0x556b9dc72af0 -> 0x556b9db1ca00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72c00 address 0x556b9db1cc00
RTV: Getting address of BLAS 0x556b9dc72c00 -> 0x556b9db1cc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72c60 address 0x556b9db1ce00
RTV: Getting address of BLAS 0x556b9dc72c60 -> 0x556b9db1ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72d00 address 0x556b9db1d000
RTV: Getting address of BLAS 0x556b9dc72d00 -> 0x556b9db1d000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc5fbd0 address 0x556b9db1d200
RTV: Getting address of BLAS 0x556b9dc5fbd0 -> 0x556b9db1d200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72e10 address 0x556b9db1d400
RTV: Getting address of BLAS 0x556b9dc72e10 -> 0x556b9db1d400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72eb0 address 0x556b9db1d600
RTV: Getting address of BLAS 0x556b9dc72eb0 -> 0x556b9db1d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72f50 address 0x556b9db1d800
RTV: Getting address of BLAS 0x556b9dc72f50 -> 0x556b9db1d800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc72ff0 address 0x556b9db1da00
RTV: Getting address of BLAS 0x556b9dc72ff0 -> 0x556b9db1da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73090 address 0x556b9db1dc00
RTV: Getting address of BLAS 0x556b9dc73090 -> 0x556b9db1dc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73130 address 0x556b9db1de00
RTV: Getting address of BLAS 0x556b9dc73130 -> 0x556b9db1de00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc731d0 address 0x556b9db1e000
RTV: Getting address of BLAS 0x556b9dc731d0 -> 0x556b9db1e000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73270 address 0x556b9db1e200
RTV: Getting address of BLAS 0x556b9dc73270 -> 0x556b9db1e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73310 address 0x556b9db1e400
RTV: Getting address of BLAS 0x556b9dc73310 -> 0x556b9db1e400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc733b0 address 0x556b9db1e600
RTV: Getting address of BLAS 0x556b9dc733b0 -> 0x556b9db1e600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73450 address 0x556b9db1e800
RTV: Getting address of BLAS 0x556b9dc73450 -> 0x556b9db1e800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc734f0 address 0x556b9db1ea00
RTV: Getting address of BLAS 0x556b9dc734f0 -> 0x556b9db1ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73590 address 0x556b9db1ec00
RTV: Getting address of BLAS 0x556b9dc73590 -> 0x556b9db1ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73630 address 0x556b9db1ee00
RTV: Getting address of BLAS 0x556b9dc73630 -> 0x556b9db1ee00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc736d0 address 0x556b9db1f000
RTV: Getting address of BLAS 0x556b9dc736d0 -> 0x556b9db1f000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73770 address 0x556b9db1f200
RTV: Getting address of BLAS 0x556b9dc73770 -> 0x556b9db1f200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73810 address 0x556b9db1f400
RTV: Getting address of BLAS 0x556b9dc73810 -> 0x556b9db1f400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc738b0 address 0x556b9db1f600
RTV: Getting address of BLAS 0x556b9dc738b0 -> 0x556b9db1f600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73950 address 0x556b9db1f800
RTV: Getting address of BLAS 0x556b9dc73950 -> 0x556b9db1f800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc739f0 address 0x556b9db1fa00
RTV: Getting address of BLAS 0x556b9dc739f0 -> 0x556b9db1fa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73a90 address 0x556b9db1fc00
RTV: Getting address of BLAS 0x556b9dc73a90 -> 0x556b9db1fc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73b30 address 0x556b9db1fe00
RTV: Getting address of BLAS 0x556b9dc73b30 -> 0x556b9db1fe00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73bd0 address 0x556b9db20000
RTV: Getting address of BLAS 0x556b9dc73bd0 -> 0x556b9db20000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73c70 address 0x556b9db20200
RTV: Getting address of BLAS 0x556b9dc73c70 -> 0x556b9db20200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73d10 address 0x556b9db20400
RTV: Getting address of BLAS 0x556b9dc73d10 -> 0x556b9db20400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73db0 address 0x556b9db20600
RTV: Getting address of BLAS 0x556b9dc73db0 -> 0x556b9db20600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73e50 address 0x556b9db20800
RTV: Getting address of BLAS 0x556b9dc73e50 -> 0x556b9db20800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73ef0 address 0x556b9db20a00
RTV: Getting address of BLAS 0x556b9dc73ef0 -> 0x556b9db20a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc73f90 address 0x556b9db20c00
RTV: Getting address of BLAS 0x556b9dc73f90 -> 0x556b9db20c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74030 address 0x556b9db20e00
RTV: Getting address of BLAS 0x556b9dc74030 -> 0x556b9db20e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc740d0 address 0x556b9db21000
RTV: Getting address of BLAS 0x556b9dc740d0 -> 0x556b9db21000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74170 address 0x556b9db21200
RTV: Getting address of BLAS 0x556b9dc74170 -> 0x556b9db21200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74210 address 0x556b9db21400
RTV: Getting address of BLAS 0x556b9dc74210 -> 0x556b9db21400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc742b0 address 0x556b9db21600
RTV: Getting address of BLAS 0x556b9dc742b0 -> 0x556b9db21600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74350 address 0x556b9db21800
RTV: Getting address of BLAS 0x556b9dc74350 -> 0x556b9db21800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc743f0 address 0x556b9db21a00
RTV: Getting address of BLAS 0x556b9dc743f0 -> 0x556b9db21a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74490 address 0x556b9db21c00
RTV: Getting address of BLAS 0x556b9dc74490 -> 0x556b9db21c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74530 address 0x556b9db21e00
RTV: Getting address of BLAS 0x556b9dc74530 -> 0x556b9db21e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc745d0 address 0x556b9db22000
RTV: Getting address of BLAS 0x556b9dc745d0 -> 0x556b9db22000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74670 address 0x556b9db22200
RTV: Getting address of BLAS 0x556b9dc74670 -> 0x556b9db22200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74710 address 0x556b9db22400
RTV: Getting address of BLAS 0x556b9dc74710 -> 0x556b9db22400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc747b0 address 0x556b9db22600
RTV: Getting address of BLAS 0x556b9dc747b0 -> 0x556b9db22600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74850 address 0x556b9db22800
RTV: Getting address of BLAS 0x556b9dc74850 -> 0x556b9db22800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc748f0 address 0x556b9db22a00
RTV: Getting address of BLAS 0x556b9dc748f0 -> 0x556b9db22a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74990 address 0x556b9db22c00
RTV: Getting address of BLAS 0x556b9dc74990 -> 0x556b9db22c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74a30 address 0x556b9db22e00
RTV: Getting address of BLAS 0x556b9dc74a30 -> 0x556b9db22e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74ad0 address 0x556b9db23000
RTV: Getting address of BLAS 0x556b9dc74ad0 -> 0x556b9db23000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74b70 address 0x556b9db23200
RTV: Getting address of BLAS 0x556b9dc74b70 -> 0x556b9db23200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74c10 address 0x556b9db23400
RTV: Getting address of BLAS 0x556b9dc74c10 -> 0x556b9db23400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74cb0 address 0x556b9db23600
RTV: Getting address of BLAS 0x556b9dc74cb0 -> 0x556b9db23600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc78d50 address 0x556b9db23800
RTV: Getting address of BLAS 0x556b9dc78d50 -> 0x556b9db23800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc78df0 address 0x556b9db23a00
RTV: Getting address of BLAS 0x556b9dc78df0 -> 0x556b9db23a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc78e90 address 0x556b9db23c00
RTV: Getting address of BLAS 0x556b9dc78e90 -> 0x556b9db23c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc78f30 address 0x556b9db23e00
RTV: Getting address of BLAS 0x556b9dc78f30 -> 0x556b9db23e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc78fd0 address 0x556b9db24000
RTV: Getting address of BLAS 0x556b9dc78fd0 -> 0x556b9db24000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79070 address 0x556b9db24200
RTV: Getting address of BLAS 0x556b9dc79070 -> 0x556b9db24200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79110 address 0x556b9db24400
RTV: Getting address of BLAS 0x556b9dc79110 -> 0x556b9db24400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc791b0 address 0x556b9db24600
RTV: Getting address of BLAS 0x556b9dc791b0 -> 0x556b9db24600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79250 address 0x556b9db24800
RTV: Getting address of BLAS 0x556b9dc79250 -> 0x556b9db24800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc792f0 address 0x556b9db24a00
RTV: Getting address of BLAS 0x556b9dc792f0 -> 0x556b9db24a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79390 address 0x556b9db24c00
RTV: Getting address of BLAS 0x556b9dc79390 -> 0x556b9db24c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79430 address 0x556b9db24e00
RTV: Getting address of BLAS 0x556b9dc79430 -> 0x556b9db24e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc794d0 address 0x556b9db25000
RTV: Getting address of BLAS 0x556b9dc794d0 -> 0x556b9db25000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79570 address 0x556b9db25200
RTV: Getting address of BLAS 0x556b9dc79570 -> 0x556b9db25200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79610 address 0x556b9db25400
RTV: Getting address of BLAS 0x556b9dc79610 -> 0x556b9db25400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc796b0 address 0x556b9db25600
RTV: Getting address of BLAS 0x556b9dc796b0 -> 0x556b9db25600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79750 address 0x556b9db25800
RTV: Getting address of BLAS 0x556b9dc79750 -> 0x556b9db25800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc797f0 address 0x556b9db25a00
RTV: Getting address of BLAS 0x556b9dc797f0 -> 0x556b9db25a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79890 address 0x556b9db25c00
RTV: Getting address of BLAS 0x556b9dc79890 -> 0x556b9db25c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79930 address 0x556b9db25e00
RTV: Getting address of BLAS 0x556b9dc79930 -> 0x556b9db25e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc799d0 address 0x556b9db26000
RTV: Getting address of BLAS 0x556b9dc799d0 -> 0x556b9db26000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79a70 address 0x556b9db26200
RTV: Getting address of BLAS 0x556b9dc79a70 -> 0x556b9db26200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79b10 address 0x556b9db26400
RTV: Getting address of BLAS 0x556b9dc79b10 -> 0x556b9db26400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79bb0 address 0x556b9db26600
RTV: Getting address of BLAS 0x556b9dc79bb0 -> 0x556b9db26600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79c50 address 0x556b9db26800
RTV: Getting address of BLAS 0x556b9dc79c50 -> 0x556b9db26800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79cf0 address 0x556b9db26a00
RTV: Getting address of BLAS 0x556b9dc79cf0 -> 0x556b9db26a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79d90 address 0x556b9db26c00
RTV: Getting address of BLAS 0x556b9dc79d90 -> 0x556b9db26c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79e30 address 0x556b9db26e00
RTV: Getting address of BLAS 0x556b9dc79e30 -> 0x556b9db26e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79ed0 address 0x556b9db27000
RTV: Getting address of BLAS 0x556b9dc79ed0 -> 0x556b9db27000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc79f70 address 0x556b9db27200
RTV: Getting address of BLAS 0x556b9dc79f70 -> 0x556b9db27200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a010 address 0x556b9db27400
RTV: Getting address of BLAS 0x556b9dc7a010 -> 0x556b9db27400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a0b0 address 0x556b9db27600
RTV: Getting address of BLAS 0x556b9dc7a0b0 -> 0x556b9db27600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a150 address 0x556b9db27800
RTV: Getting address of BLAS 0x556b9dc7a150 -> 0x556b9db27800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a1f0 address 0x556b9db27a00
RTV: Getting address of BLAS 0x556b9dc7a1f0 -> 0x556b9db27a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a290 address 0x556b9db27c00
RTV: Getting address of BLAS 0x556b9dc7a290 -> 0x556b9db27c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a330 address 0x556b9db27e00
RTV: Getting address of BLAS 0x556b9dc7a330 -> 0x556b9db27e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a3d0 address 0x556b9db28000
RTV: Getting address of BLAS 0x556b9dc7a3d0 -> 0x556b9db28000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a470 address 0x556b9db28200
RTV: Getting address of BLAS 0x556b9dc7a470 -> 0x556b9db28200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a510 address 0x556b9db28400
RTV: Getting address of BLAS 0x556b9dc7a510 -> 0x556b9db28400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a5b0 address 0x556b9db28600
RTV: Getting address of BLAS 0x556b9dc7a5b0 -> 0x556b9db28600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a650 address 0x556b9db28800
RTV: Getting address of BLAS 0x556b9dc7a650 -> 0x556b9db28800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a6f0 address 0x556b9db28a00
RTV: Getting address of BLAS 0x556b9dc7a6f0 -> 0x556b9db28a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a790 address 0x556b9db28c00
RTV: Getting address of BLAS 0x556b9dc7a790 -> 0x556b9db28c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a830 address 0x556b9db28e00
RTV: Getting address of BLAS 0x556b9dc7a830 -> 0x556b9db28e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a8d0 address 0x556b9db29000
RTV: Getting address of BLAS 0x556b9dc7a8d0 -> 0x556b9db29000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7a970 address 0x556b9db29200
RTV: Getting address of BLAS 0x556b9dc7a970 -> 0x556b9db29200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7aa10 address 0x556b9db29400
RTV: Getting address of BLAS 0x556b9dc7aa10 -> 0x556b9db29400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc62c20 address 0x556b9db29600
RTV: Getting address of BLAS 0x556b9dc62c20 -> 0x556b9db29600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc7ab50 address 0x556b9db29800
RTV: Getting address of BLAS 0x556b9dc7ab50 -> 0x556b9db29800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74d50 address 0x556b9db29a00
RTV: Getting address of BLAS 0x556b9dc74d50 -> 0x556b9db29a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74df0 address 0x556b9db29c00
RTV: Getting address of BLAS 0x556b9dc74df0 -> 0x556b9db29c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74e90 address 0x556b9db29e00
RTV: Getting address of BLAS 0x556b9dc74e90 -> 0x556b9db29e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74f30 address 0x556b9db2a000
RTV: Getting address of BLAS 0x556b9dc74f30 -> 0x556b9db2a000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc74fd0 address 0x556b9db2a200
RTV: Getting address of BLAS 0x556b9dc74fd0 -> 0x556b9db2a200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75070 address 0x556b9db2a400
RTV: Getting address of BLAS 0x556b9dc75070 -> 0x556b9db2a400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75110 address 0x556b9db2a600
RTV: Getting address of BLAS 0x556b9dc75110 -> 0x556b9db2a600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc751b0 address 0x556b9db2a800
RTV: Getting address of BLAS 0x556b9dc751b0 -> 0x556b9db2a800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75250 address 0x556b9db2aa00
RTV: Getting address of BLAS 0x556b9dc75250 -> 0x556b9db2aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc752f0 address 0x556b9db2ac00
RTV: Getting address of BLAS 0x556b9dc752f0 -> 0x556b9db2ac00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75390 address 0x556b9db2ae00
RTV: Getting address of BLAS 0x556b9dc75390 -> 0x556b9db2ae00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75430 address 0x556b9db2b000
RTV: Getting address of BLAS 0x556b9dc75430 -> 0x556b9db2b000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc754d0 address 0x556b9db2b200
RTV: Getting address of BLAS 0x556b9dc754d0 -> 0x556b9db2b200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75570 address 0x556b9db2b400
RTV: Getting address of BLAS 0x556b9dc75570 -> 0x556b9db2b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75610 address 0x556b9db2b600
RTV: Getting address of BLAS 0x556b9dc75610 -> 0x556b9db2b600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc756b0 address 0x556b9db2b800
RTV: Getting address of BLAS 0x556b9dc756b0 -> 0x556b9db2b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75750 address 0x556b9db2ba00
RTV: Getting address of BLAS 0x556b9dc75750 -> 0x556b9db2ba00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc757f0 address 0x556b9db2bc00
RTV: Getting address of BLAS 0x556b9dc757f0 -> 0x556b9db2bc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75890 address 0x556b9db2be00
RTV: Getting address of BLAS 0x556b9dc75890 -> 0x556b9db2be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75930 address 0x556b9db2c000
RTV: Getting address of BLAS 0x556b9dc75930 -> 0x556b9db2c000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc759d0 address 0x556b9db2c200
RTV: Getting address of BLAS 0x556b9dc759d0 -> 0x556b9db2c200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75a70 address 0x556b9db2c400
RTV: Getting address of BLAS 0x556b9dc75a70 -> 0x556b9db2c400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75b10 address 0x556b9db2c600
RTV: Getting address of BLAS 0x556b9dc75b10 -> 0x556b9db2c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75bb0 address 0x556b9db2c800
RTV: Getting address of BLAS 0x556b9dc75bb0 -> 0x556b9db2c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75c50 address 0x556b9db2ca00
RTV: Getting address of BLAS 0x556b9dc75c50 -> 0x556b9db2ca00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75cf0 address 0x556b9db2cc00
RTV: Getting address of BLAS 0x556b9dc75cf0 -> 0x556b9db2cc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75d90 address 0x556b9db2ce00
RTV: Getting address of BLAS 0x556b9dc75d90 -> 0x556b9db2ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75e30 address 0x556b9db2d000
RTV: Getting address of BLAS 0x556b9dc75e30 -> 0x556b9db2d000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75ed0 address 0x556b9db2d200
RTV: Getting address of BLAS 0x556b9dc75ed0 -> 0x556b9db2d200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc75f70 address 0x556b9db2d400
RTV: Getting address of BLAS 0x556b9dc75f70 -> 0x556b9db2d400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76010 address 0x556b9db2d600
RTV: Getting address of BLAS 0x556b9dc76010 -> 0x556b9db2d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc760b0 address 0x556b9db2d800
RTV: Getting address of BLAS 0x556b9dc760b0 -> 0x556b9db2d800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76150 address 0x556b9db2da00
RTV: Getting address of BLAS 0x556b9dc76150 -> 0x556b9db2da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc761f0 address 0x556b9db2dc00
RTV: Getting address of BLAS 0x556b9dc761f0 -> 0x556b9db2dc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76290 address 0x556b9db2de00
RTV: Getting address of BLAS 0x556b9dc76290 -> 0x556b9db2de00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76330 address 0x556b9db2e000
RTV: Getting address of BLAS 0x556b9dc76330 -> 0x556b9db2e000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc763d0 address 0x556b9db2e200
RTV: Getting address of BLAS 0x556b9dc763d0 -> 0x556b9db2e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76470 address 0x556b9db2e400
RTV: Getting address of BLAS 0x556b9dc76470 -> 0x556b9db2e400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76510 address 0x556b9db2e600
RTV: Getting address of BLAS 0x556b9dc76510 -> 0x556b9db2e600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc765b0 address 0x556b9db2e800
RTV: Getting address of BLAS 0x556b9dc765b0 -> 0x556b9db2e800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76650 address 0x556b9db2ea00
RTV: Getting address of BLAS 0x556b9dc76650 -> 0x556b9db2ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc766f0 address 0x556b9db2ec00
RTV: Getting address of BLAS 0x556b9dc766f0 -> 0x556b9db2ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76790 address 0x556b9db2ee00
RTV: Getting address of BLAS 0x556b9dc76790 -> 0x556b9db2ee00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76830 address 0x556b9db2f000
RTV: Getting address of BLAS 0x556b9dc76830 -> 0x556b9db2f000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc768d0 address 0x556b9db2f200
RTV: Getting address of BLAS 0x556b9dc768d0 -> 0x556b9db2f200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76970 address 0x556b9db2f400
RTV: Getting address of BLAS 0x556b9dc76970 -> 0x556b9db2f400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76a10 address 0x556b9db2f600
RTV: Getting address of BLAS 0x556b9dc76a10 -> 0x556b9db2f600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76ab0 address 0x556b9db2f800
RTV: Getting address of BLAS 0x556b9dc76ab0 -> 0x556b9db2f800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76b50 address 0x556b9db2fa00
RTV: Getting address of BLAS 0x556b9dc76b50 -> 0x556b9db2fa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76bf0 address 0x556b9db2fc00
RTV: Getting address of BLAS 0x556b9dc76bf0 -> 0x556b9db2fc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76d00 address 0x556b9db2fe00
RTV: Getting address of BLAS 0x556b9dc76d00 -> 0x556b9db2fe00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76da0 address 0x556b9db30000
RTV: Getting address of BLAS 0x556b9dc76da0 -> 0x556b9db30000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76e40 address 0x556b9db30200
RTV: Getting address of BLAS 0x556b9dc76e40 -> 0x556b9db30200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76ee0 address 0x556b9db30400
RTV: Getting address of BLAS 0x556b9dc76ee0 -> 0x556b9db30400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc76f80 address 0x556b9db30600
RTV: Getting address of BLAS 0x556b9dc76f80 -> 0x556b9db30600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77020 address 0x556b9db30800
RTV: Getting address of BLAS 0x556b9dc77020 -> 0x556b9db30800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc770c0 address 0x556b9db30a00
RTV: Getting address of BLAS 0x556b9dc770c0 -> 0x556b9db30a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77160 address 0x556b9db30c00
RTV: Getting address of BLAS 0x556b9dc77160 -> 0x556b9db30c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77200 address 0x556b9db30e00
RTV: Getting address of BLAS 0x556b9dc77200 -> 0x556b9db30e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc772a0 address 0x556b9db31000
RTV: Getting address of BLAS 0x556b9dc772a0 -> 0x556b9db31000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77340 address 0x556b9db31200
RTV: Getting address of BLAS 0x556b9dc77340 -> 0x556b9db31200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc773e0 address 0x556b9db31400
RTV: Getting address of BLAS 0x556b9dc773e0 -> 0x556b9db31400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77480 address 0x556b9db31600
RTV: Getting address of BLAS 0x556b9dc77480 -> 0x556b9db31600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77520 address 0x556b9db31800
RTV: Getting address of BLAS 0x556b9dc77520 -> 0x556b9db31800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc775c0 address 0x556b9db31a00
RTV: Getting address of BLAS 0x556b9dc775c0 -> 0x556b9db31a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77660 address 0x556b9db31c00
RTV: Getting address of BLAS 0x556b9dc77660 -> 0x556b9db31c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77700 address 0x556b9db31e00
RTV: Getting address of BLAS 0x556b9dc77700 -> 0x556b9db31e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc777a0 address 0x556b9db32000
RTV: Getting address of BLAS 0x556b9dc777a0 -> 0x556b9db32000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77840 address 0x556b9db32200
RTV: Getting address of BLAS 0x556b9dc77840 -> 0x556b9db32200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc778e0 address 0x556b9db32400
RTV: Getting address of BLAS 0x556b9dc778e0 -> 0x556b9db32400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77980 address 0x556b9db32600
RTV: Getting address of BLAS 0x556b9dc77980 -> 0x556b9db32600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77a20 address 0x556b9db32800
RTV: Getting address of BLAS 0x556b9dc77a20 -> 0x556b9db32800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77ac0 address 0x556b9db32a00
RTV: Getting address of BLAS 0x556b9dc77ac0 -> 0x556b9db32a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x556b9dc77b60 address 0x556b9db32c00
RTV: Getting address of BLAS 0x556b9dc77b60 -> 0x556b9db32c00
RTV: Creating device buffer TLAS Instances of size 31168
LVP: vkBuffer size 31168 created at 0x556b9dc5c478
RTV: New vkBuffer created at 0x556b9dc5c478
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dc77db0; llvmpipe_resource 0x556b9dc77db0; pipe_memory_allocation 0x556b9dc67000;
LVP: Binding lvp_buffer 0x556b9dc5c6d0: buffer->bo: 0x556b9dc77db0; buffer->pmem: 0x556b9dc67000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1e9f400 (size 31168) to vulkan buffer 0x556b9dc67000
LVP: gpgpusim buffer size 31168 allocated at 0xc1e9f400
RTV: Bind buffer memory for vkBuffer 0x556b9dc5c478
LVP: vkBuffer size 31168 created at 0x556b9dc5c9d8
RTV: New vkBuffer created at 0x556b9dc5c9d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dc9de80; llvmpipe_resource 0x556b9dc9de80; pipe_memory_allocation 0x556b9dc9f000;
LVP: Binding lvp_buffer 0x556b9dc9de00: buffer->bo: 0x556b9dc9de80; buffer->pmem: 0x556b9dc9f000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1ea6e00 (size 31168) to vulkan buffer 0x556b9dc9f000
LVP: gpgpusim buffer size 31168 allocated at 0xc1ea6e00
RTV: Bind buffer memory for vkBuffer 0x556b9dc5c9d8
LVP: Finding mapped memory for mem 0x556b9dc9e090: mem->pmem 0x556b9dc9f000 
LVP: Identified at 0x556b9dc9f000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x16e00
RTV: Rounding size of BVH structure up to 0x16e00
RTV: Total accel structure size = 0x16e00 + ... = 0x16e00
LVP: vkBuffer size 93696 created at 0x556b9dc5c598
RTV: New vkBuffer created at 0x556b9dc5c598
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dc9de80; llvmpipe_resource 0x556b9dc9de80; pipe_memory_allocation 0x556b9dcc6000;
LVP: Binding lvp_buffer 0x556b9dc9e090: buffer->bo: 0x556b9dc9de80; buffer->pmem: 0x556b9dcc6000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1eae800 (size 93696) to vulkan buffer 0x556b9dcc6000
LVP: gpgpusim buffer size 93696 allocated at 0xc1eae800
RTV: Bind buffer memory for vkBuffer 0x556b9dc5c598
LVP: vkBuffer size 33152 created at 0x556b9dcc5fe8
RTV: New vkBuffer created at 0x556b9dcc5fe8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dd30790; llvmpipe_resource 0x556b9dd30790; pipe_memory_allocation 0x556b9dd31000;
LVP: Binding lvp_buffer 0x556b9dcc5b60: buffer->bo: 0x556b9dd30790; buffer->pmem: 0x556b9dd31000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1ec5600 (size 33152) to vulkan buffer 0x556b9dd31000
LVP: gpgpusim buffer size 33152 allocated at 0xc1ec5600
RTV: Bind buffer memory for vkBuffer 0x556b9dcc5fe8
RTV: Creating top level acceleration structure...
RTV: Creating acceleration struction of size 0x16e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x16e00) created from lvp_buffer (size 0x16e00). 
LVP: Buffer 0x556b9dcc6000 + 0x0 = 0x556b9dcc6000 allocated to accel structure 0x556b9dc77c00
gpgpusim: set TLAS address 0x556b9dcc6000 to 0xc1eae800
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (-1000.000, -2000.000, -1000.000), (1000.000, 0.000, 1000.000)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 1, box (-10.344, 0.000, -10.483), (-9.944, 0.400, -10.083)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 2, box (-11.110, 0.000, -10.060), (-10.710, 0.400, -9.659)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 3, box (-11.181, 0.000, -8.614), (-10.781, 0.400, -8.214)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 4, box (-10.307, 0.000, -8.036), (-9.907, 0.400, -7.636)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 5, box (-10.938, 0.000, -7.179), (-10.538, 0.400, -6.779)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 6, box (-10.991, 0.000, -5.870), (-10.590, 0.400, -5.470)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 7, box (-10.493, 0.000, -5.118), (-10.093, 0.400, -4.718)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 8, box (-10.426, 0.000, -4.158), (-10.026, 0.400, -3.758)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 9, box (-10.331, 0.000, -2.352), (-9.931, 0.400, -1.952)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 10, box (-10.992, 0.000, -2.112), (-10.592, 0.400, -1.712)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 11, box (-11.169, 0.000, -0.450), (-10.769, 0.400, -0.050)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 12, box (-10.817, 0.000, 0.081), (-10.417, 0.400, 0.481)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 13, box (-10.502, 0.000, 1.558), (-10.102, 0.400, 1.958)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 14, box (-10.844, 0.000, 2.646), (-10.444, 0.400, 3.046)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 15, box (-11.024, 0.000, 3.313), (-10.623, 0.400, 3.714)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 16, box (-10.714, 0.000, 4.044), (-10.314, 0.400, 4.445)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 17, box (-11.073, 0.000, 5.048), (-10.673, 0.400, 5.449)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 18, box (-10.845, 0.000, 6.495), (-10.444, 0.400, 6.895)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 19, box (-10.544, 0.000, 7.440), (-10.144, 0.400, 7.841)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 20, box (-10.377, 0.000, 7.904), (-9.976, 0.400, 8.305)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 21, box (-10.920, 0.000, 9.134), (-10.520, 0.400, 9.534)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 22, box (-10.695, 0.000, 10.598), (-10.294, 0.400, 10.999)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 23, box (-9.695, 0.000, -10.550), (-9.294, 0.400, -10.150)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 24, box (-10.100, 0.000, -9.815), (-9.700, 0.400, -9.415)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 25, box (-9.917, 0.000, -8.772), (-9.517, 0.400, -8.372)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 26, box (-9.714, 0.000, -7.831), (-9.314, 0.400, -7.430)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 27, box (-10.055, 0.000, -6.575), (-9.655, 0.400, -6.174)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 28, box (-9.789, 0.000, -5.416), (-9.389, 0.400, -5.015)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 29, box (-9.473, 0.000, -4.908), (-9.073, 0.400, -4.508)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 30, box (-9.617, 0.000, -3.995), (-9.217, 0.400, -3.594)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 31, box (-9.740, 0.000, -3.052), (-9.340, 0.400, -2.651)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 32, box (-9.980, 0.000, -1.896), (-9.580, 0.400, -1.496)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 33, box (-9.873, 0.000, -0.837), (-9.472, 0.400, -0.436)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 34, box (-9.559, 0.000, 0.248), (-9.159, 0.400, 0.648)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 35, box (-9.748, 0.000, 1.679), (-9.347, 0.400, 2.079)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 36, box (-9.587, 0.000, 2.016), (-9.187, 0.400, 2.416)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 37, box (-9.595, 0.000, 3.333), (-9.195, 0.400, 3.734)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 38, box (-9.777, 0.000, 4.131), (-9.376, 0.400, 4.531)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 39, box (-10.119, 0.000, 5.535), (-9.718, 0.400, 5.935)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 40, box (-9.427, 0.000, 5.837), (-9.027, 0.400, 6.237)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 41, box (-9.996, 0.000, 7.529), (-9.596, 0.400, 7.929)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 42, box (-9.734, 0.000, 8.148), (-9.334, 0.400, 8.548)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 43, box (-9.368, 0.000, 8.988), (-8.967, 0.400, 9.389)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 44, box (-9.316, 0.000, 10.536), (-8.916, 0.400, 10.936)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 45, box (-8.393, 0.000, -10.331), (-7.992, 0.400, -9.931)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 46, box (-8.570, 0.000, -9.886), (-8.169, 0.400, -9.485)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 47, box (-8.622, 0.000, -8.401), (-8.222, 0.400, -8.001)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 48, box (-8.677, 0.000, -7.654), (-8.277, 0.400, -7.254)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 49, box (-9.055, 0.000, -6.944), (-8.655, 0.400, -6.544)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 50, box (-9.042, 0.000, -5.998), (-8.641, 0.400, -5.598)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 51, box (-8.986, 0.000, -5.184), (-8.586, 0.400, -4.783)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 52, box (-8.551, 0.000, -3.436), (-8.151, 0.400, -3.035)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 53, box (-8.961, 0.000, -2.627), (-8.561, 0.400, -2.227)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 54, box (-8.385, 0.000, -1.397), (-7.984, 0.400, -0.997)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 55, box (-8.757, 0.000, -0.598), (-8.356, 0.400, -0.198)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 56, box (-8.508, 0.000, -0.178), (-8.108, 0.400, 0.222)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 57, box (-8.377, 0.000, 1.052), (-7.976, 0.400, 1.452)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 58, box (-8.527, 0.000, 2.133), (-8.127, 0.400, 2.534)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 59, box (-8.330, 0.000, 3.297), (-7.930, 0.400, 3.698)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 60, box (-9.028, 0.000, 4.147), (-8.628, 0.400, 4.547)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 61, box (-8.357, 0.000, 5.155), (-7.957, 0.400, 5.556)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 62, box (-8.596, 0.000, 6.354), (-8.196, 0.400, 6.754)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 63, box (-8.533, 0.000, 7.090), (-8.133, 0.400, 7.491)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 64, box (-8.702, 0.000, 8.124), (-8.302, 0.400, 8.524)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 65, box (-8.378, 0.000, 9.350), (-7.978, 0.400, 9.751)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 66, box (-9.025, 0.000, 10.518), (-8.625, 0.400, 10.919)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 67, box (-7.896, 0.000, -10.402), (-7.495, 0.400, -10.002)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 68, box (-7.595, 0.000, -9.680), (-7.195, 0.400, -9.279)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 69, box (-7.668, 0.000, -8.445), (-7.268, 0.400, -8.045)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 70, box (-7.717, 0.000, -7.876), (-7.316, 0.400, -7.475)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 71, box (-7.639, 0.000, -6.331), (-7.239, 0.400, -5.931)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 72, box (-7.570, 0.000, -5.713), (-7.170, 0.400, -5.313)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 73, box (-7.909, 0.000, -4.557), (-7.509, 0.400, -4.156)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 74, box (-7.974, 0.000, -4.129), (-7.574, 0.400, -3.729)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 75, box (-7.832, 0.000, -2.580), (-7.432, 0.400, -2.180)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 76, box (-8.116, 0.000, -1.706), (-7.715, 0.400, -1.305)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 77, box (-7.536, 0.000, -0.735), (-7.136, 0.400, -0.335)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 78, box (-7.808, 0.000, 0.299), (-7.408, 0.400, 0.699)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 79, box (-7.518, 0.000, 0.943), (-7.118, 0.400, 1.343)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 80, box (-7.920, 0.000, 1.837), (-7.519, 0.400, 2.237)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 81, box (-7.758, 0.000, 3.487), (-7.357, 0.400, 3.887)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 82, box (-8.157, 0.000, 4.159), (-7.756, 0.400, 4.559)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 83, box (-7.637, 0.000, 4.814), (-7.236, 0.400, 5.214)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 84, box (-7.646, 0.000, 5.947), (-7.245, 0.400, 6.347)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 85, box (-7.354, 0.000, 7.373), (-6.953, 0.400, 7.773)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 86, box (-7.470, 0.000, 8.212), (-7.070, 0.400, 8.613)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 87, box (-7.385, 0.000, 9.386), (-6.985, 0.400, 9.787)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 88, box (-7.953, 0.000, 9.976), (-7.553, 0.400, 10.377)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 89, box (-6.585, 0.000, -10.644), (-6.185, 0.400, -10.243)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 90, box (-6.893, 0.000, -10.179), (-6.493, 0.400, -9.779)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 91, box (-6.634, 0.000, -8.886), (-6.234, 0.400, -8.486)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 92, box (-6.707, 0.000, -7.946), (-6.306, 0.400, -7.546)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 93, box (-6.524, 0.000, -6.819), (-6.124, 0.400, -6.418)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 94, box (-6.975, 0.000, -5.865), (-6.575, 0.400, -5.465)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 95, box (-6.814, 0.000, -4.985), (-6.414, 0.400, -4.585)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 96, box (-6.860, 0.000, -4.107), (-6.460, 0.400, -3.707)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 97, box (-6.394, 0.000, -2.932), (-5.994, 0.400, -2.532)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 98, box (-6.881, 0.000, -2.118), (-6.480, 0.400, -1.717)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 99, box (-6.684, 0.000, -0.766), (-6.284, 0.400, -0.365)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 100, box (-7.125, 0.000, 0.369), (-6.725, 0.400, 0.769)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 101, box (-6.523, 0.000, 0.991), (-6.122, 0.400, 1.392)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 102, box (-6.323, 0.000, 2.245), (-5.923, 0.400, 2.645)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 103, box (-6.401, 0.000, 3.463), (-6.001, 0.400, 3.864)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 104, box (-6.447, 0.000, 4.485), (-6.046, 0.400, 4.886)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 105, box (-7.135, 0.000, 5.000), (-6.734, 0.400, 5.401)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 106, box (-6.990, 0.000, 5.876), (-6.590, 0.400, 6.277)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 107, box (-6.347, 0.000, 7.013), (-5.947, 0.400, 7.413)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 108, box (-6.563, 0.000, 8.139), (-6.162, 0.400, 8.539)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 109, box (-6.384, 0.000, 9.024), (-5.984, 0.400, 9.424)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 110, box (-6.686, 0.000, 10.222), (-6.285, 0.400, 10.622)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 111, box (-5.529, 0.000, -10.530), (-5.128, 0.400, -10.130)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 112, box (-6.125, 0.000, -9.943), (-5.725, 0.400, -9.542)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 113, box (-5.327, 0.000, -8.320), (-4.927, 0.400, -7.919)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 114, box (-5.373, 0.000, -7.306), (-4.972, 0.400, -6.906)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 115, box (-5.729, 0.000, -7.132), (-5.329, 0.400, -6.732)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 116, box (-6.005, 0.000, -5.634), (-5.604, 0.400, -5.233)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 117, box (-5.389, 0.000, -4.854), (-4.989, 0.400, -4.454)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 118, box (-5.845, 0.000, -3.399), (-5.445, 0.400, -2.998)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 119, box (-5.783, 0.000, -2.618), (-5.382, 0.400, -2.217)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 120, box (-5.966, 0.000, -1.323), (-5.566, 0.400, -0.923)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 121, box (-5.468, 0.000, -0.830), (-5.067, 0.400, -0.430)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 122, box (-5.354, 0.000, 0.540), (-4.953, 0.400, 0.941)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 123, box (-5.361, 0.000, 0.874), (-4.960, 0.400, 1.275)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 124, box (-5.500, 0.000, 2.139), (-5.100, 0.400, 2.539)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 125, box (-5.857, 0.000, 3.475), (-5.457, 0.400, 3.875)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 126, box (-6.167, 0.000, 4.222), (-5.766, 0.400, 4.622)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 127, box (-5.468, 0.000, 5.423), (-5.068, 0.400, 5.823)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 128, box (-5.673, 0.000, 6.300), (-5.273, 0.400, 6.700)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 129, box (-5.977, 0.000, 7.140), (-5.577, 0.400, 7.540)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 130, box (-5.953, 0.000, 8.659), (-5.552, 0.400, 9.059)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 131, box (-5.878, 0.000, 8.842), (-5.477, 0.400, 9.243)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 132, box (-5.452, 0.000, 10.495), (-5.051, 0.400, 10.895)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 133, box (-4.411, 0.000, -11.120), (-4.011, 0.400, -10.720)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 134, box (-4.494, 0.000, -9.520), (-4.093, 0.400, -9.120)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 135, box (-5.187, 0.000, -8.644), (-4.787, 0.400, -8.244)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 136, box (-5.118, 0.000, -7.806), (-4.718, 0.400, -7.406)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 137, box (-4.843, 0.000, -6.381), (-4.443, 0.400, -5.980)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 138, box (-4.787, 0.000, -6.068), (-4.386, 0.400, -5.667)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 139, box (-4.318, 0.000, -5.159), (-3.918, 0.400, -4.758)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 140, box (-4.893, 0.000, -3.984), (-4.492, 0.400, -3.583)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 141, box (-5.075, 0.000, -2.840), (-4.675, 0.400, -2.439)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 142, box (-4.413, 0.000, -1.393), (-4.013, 0.400, -0.992)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 143, box (-5.163, 0.000, -0.999), (-4.763, 0.400, -0.598)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 144, box (-4.706, 0.000, -0.120), (-4.306, 0.400, 0.280)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 145, box (-4.747, 0.000, 0.916), (-4.347, 0.400, 1.316)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 146, box (-4.581, 0.000, 2.365), (-4.181, 0.400, 2.766)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 147, box (-4.951, 0.000, 2.802), (-4.550, 0.400, 3.203)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 148, box (-4.717, 0.000, 3.988), (-4.317, 0.400, 4.389)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 149, box (-4.764, 0.000, 5.632), (-4.364, 0.400, 6.032)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 150, box (-5.144, 0.000, 6.473), (-4.744, 0.400, 6.873)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 151, box (-4.739, 0.000, 7.560), (-4.339, 0.400, 7.960)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 152, box (-4.881, 0.000, 8.203), (-4.481, 0.400, 8.603)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 153, box (-4.860, 0.000, 9.464), (-4.460, 0.400, 9.864)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 154, box (-4.718, 0.000, 10.095), (-4.318, 0.400, 10.495)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 155, box (-3.490, 0.000, -10.880), (-3.089, 0.400, -10.480)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 156, box (-3.698, 0.000, -9.672), (-3.298, 0.400, -9.271)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 157, box (-3.873, 0.000, -8.896), (-3.473, 0.400, -8.496)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 158, box (-3.903, 0.000, -7.312), (-3.502, 0.400, -6.912)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 159, box (-3.979, 0.000, -6.871), (-3.578, 0.400, -6.471)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 160, box (-4.150, 0.000, -6.044), (-3.750, 0.400, -5.644)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 161, box (-3.831, 0.000, -5.184), (-3.430, 0.400, -4.783)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 162, box (-3.374, 0.000, -3.327), (-2.974, 0.400, -2.927)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 163, box (-3.598, 0.000, -2.549), (-3.198, 0.400, -2.149)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 164, box (-3.445, 0.000, -1.948), (-3.045, 0.400, -1.548)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 165, box (-3.743, 0.000, -1.020), (-3.343, 0.400, -0.620)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 166, box (-4.121, 0.000, 0.060), (-3.721, 0.400, 0.460)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 167, box (-4.153, 0.000, 1.334), (-3.753, 0.400, 1.735)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 168, box (-4.018, 0.000, 2.691), (-3.618, 0.400, 3.091)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 169, box (-3.516, 0.000, 2.802), (-3.115, 0.400, 3.203)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 170, box (-4.104, 0.000, 4.114), (-3.704, 0.400, 4.514)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 171, box (-3.542, 0.000, 5.640), (-3.142, 0.400, 6.040)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 172, box (-3.551, 0.000, 6.467), (-3.150, 0.400, 6.867)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 173, box (-3.484, 0.000, 7.545), (-3.084, 0.400, 7.946)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 174, box (-3.988, 0.000, 8.533), (-3.587, 0.400, 8.934)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 175, box (-3.847, 0.000, 9.329), (-3.446, 0.400, 9.730)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 176, box (-3.390, 0.000, 10.139), (-2.990, 0.400, 10.540)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 177, box (-2.991, 0.000, -10.680), (-2.591, 0.400, -10.280)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 178, box (-2.994, 0.000, -9.384), (-2.593, 0.400, -8.984)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 179, box (-2.899, 0.000, -8.543), (-2.498, 0.400, -8.142)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 180, box (-2.533, 0.000, -7.720), (-2.132, 0.400, -7.319)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 181, box (-2.976, 0.000, -6.564), (-2.576, 0.400, -6.163)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 182, box (-2.755, 0.000, -5.514), (-2.355, 0.400, -5.113)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 183, box (-2.438, 0.000, -4.859), (-2.038, 0.400, -4.459)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 184, box (-2.762, 0.000, -4.065), (-2.362, 0.400, -3.665)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 185, box (-2.575, 0.000, -2.661), (-2.175, 0.400, -2.261)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 186, box (-2.337, 0.000, -2.037), (-1.936, 0.400, -1.636)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 187, box (-2.784, 0.000, -0.819), (-2.384, 0.400, -0.418)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 188, box (-3.109, 0.000, 0.255), (-2.709, 0.400, 0.656)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 189, box (-2.691, 0.000, 0.892), (-2.291, 0.400, 1.292)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 190, box (-2.614, 0.000, 2.437), (-2.213, 0.400, 2.837)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 191, box (-2.537, 0.000, 2.870), (-2.137, 0.400, 3.270)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 192, box (-2.988, 0.000, 3.902), (-2.587, 0.400, 4.302)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 193, box (-2.417, 0.000, 5.099), (-2.017, 0.400, 5.499)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 194, box (-2.859, 0.000, 6.159), (-2.458, 0.400, 6.559)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 195, box (-2.900, 0.000, 7.343), (-2.499, 0.400, 7.744)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 196, box (-2.781, 0.000, 8.112), (-2.380, 0.400, 8.512)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 197, box (-2.998, 0.000, 9.328), (-2.597, 0.400, 9.729)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 198, box (-3.051, 0.000, 10.249), (-2.651, 0.400, 10.649)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 199, box (-1.631, 0.000, -10.950), (-1.231, 0.400, -10.550)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 200, box (-1.787, 0.000, -9.335), (-1.387, 0.400, -8.935)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 201, box (-1.827, 0.000, -8.698), (-1.426, 0.400, -8.298)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 202, box (-1.921, 0.000, -7.664), (-1.521, 0.400, -7.264)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 203, box (-2.015, 0.000, -6.886), (-1.615, 0.400, -6.485)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 204, box (-1.447, 0.000, -5.775), (-1.047, 0.400, -5.375)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 205, box (-1.728, 0.000, -4.725), (-1.328, 0.400, -4.325)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 206, box (-2.107, 0.000, -4.060), (-1.707, 0.400, -3.660)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 207, box (-1.956, 0.000, -2.955), (-1.556, 0.400, -2.555)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 208, box (-1.444, 0.000, -2.059), (-1.044, 0.400, -1.659)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 209, box (-1.607, 0.000, -0.420), (-1.207, 0.400, -0.019)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 210, box (-1.745, 0.000, 0.405), (-1.345, 0.400, 0.805)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 211, box (-1.613, 0.000, 1.599), (-1.212, 0.400, 1.999)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 212, box (-1.657, 0.000, 2.450), (-1.257, 0.400, 2.850)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 213, box (-1.453, 0.000, 3.526), (-1.052, 0.400, 3.927)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 214, box (-1.834, 0.000, 3.984), (-1.434, 0.400, 4.385)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 215, box (-2.013, 0.000, 5.462), (-1.613, 0.400, 5.863)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 216, box (-1.566, 0.000, 6.179), (-1.166, 0.400, 6.580)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 217, box (-1.858, 0.000, 7.543), (-1.458, 0.400, 7.943)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 218, box (-1.504, 0.000, 8.168), (-1.103, 0.400, 8.569)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 219, box (-1.513, 0.000, 9.677), (-1.112, 0.400, 10.077)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 220, box (-1.313, 0.000, 10.239), (-0.913, 0.400, 10.639)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 221, box (-0.958, 0.000, -10.739), (-0.558, 0.400, -10.338)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 222, box (-0.619, 0.000, -10.075), (-0.219, 0.400, -9.674)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 223, box (-0.955, 0.000, -8.578), (-0.555, 0.400, -8.178)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 224, box (-0.752, 0.000, -7.681), (-0.351, 0.400, -7.281)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 225, box (-0.453, 0.000, -6.752), (-0.053, 0.400, -6.352)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 226, box (-0.960, 0.000, -5.390), (-0.560, 0.400, -4.990)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 227, box (-1.042, 0.000, -4.755), (-0.642, 0.400, -4.355)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 228, box (-0.820, 0.000, -3.733), (-0.420, 0.400, -3.333)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 229, box (-0.657, 0.000, -3.119), (-0.257, 0.400, -2.718)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 230, box (-0.376, 0.000, -1.880), (0.024, 0.400, -1.480)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 231, box (-0.603, 0.000, -0.843), (-0.202, 0.400, -0.443)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 232, box (-0.714, 0.000, -0.172), (-0.314, 0.400, 0.228)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 233, box (-0.663, 0.000, 1.660), (-0.262, 0.400, 2.060)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 234, box (-0.884, 0.000, 1.868), (-0.483, 0.400, 2.268)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 235, box (-0.978, 0.000, 3.214), (-0.578, 0.400, 3.614)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 236, box (-1.195, 0.000, 4.045), (-0.795, 0.400, 4.445)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 237, box (-0.875, 0.000, 4.893), (-0.475, 0.400, 5.293)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 238, box (-0.578, 0.000, 6.655), (-0.178, 0.400, 7.056)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 239, box (-0.541, 0.000, 7.483), (-0.141, 0.400, 7.883)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 240, box (-0.626, 0.000, 8.423), (-0.226, 0.400, 8.823)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 241, box (-0.311, 0.000, 9.424), (0.089, 0.400, 9.824)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 242, box (-0.301, 0.000, 10.633), (0.100, 0.400, 11.033)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 243, box (0.428, 0.000, -11.092), (0.828, 0.400, -10.691)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 244, box (0.516, 0.000, -9.350), (0.916, 0.400, -8.950)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 245, box (0.546, 0.000, -8.730), (0.946, 0.400, -8.329)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 246, box (0.233, 0.000, -8.091), (0.633, 0.400, -7.691)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 247, box (-0.141, 0.000, -6.836), (0.259, 0.400, -6.436)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 248, box (0.464, 0.000, -5.913), (0.864, 0.400, -5.513)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 249, box (-0.178, 0.000, -4.824), (0.222, 0.400, -4.424)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 250, box (0.146, 0.000, -3.724), (0.546, 0.400, -3.324)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 251, box (0.490, 0.000, -3.153), (0.891, 0.400, -2.752)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 252, box (0.045, 0.000, -1.414), (0.445, 0.400, -1.013)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 253, box (0.464, 0.000, -0.730), (0.864, 0.400, -0.329)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 254, box (0.568, 0.000, 0.059), (0.968, 0.400, 0.459)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 255, box (0.689, 0.000, 1.619), (1.089, 0.400, 2.020)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 256, box (0.661, 0.000, 1.996), (1.061, 0.400, 2.397)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 257, box (0.591, 0.000, 3.684), (0.992, 0.400, 4.084)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 258, box (0.469, 0.000, 3.950), (0.869, 0.400, 4.351)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 259, box (0.009, 0.000, 4.858), (0.409, 0.400, 5.259)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 260, box (0.554, 0.000, 6.648), (0.954, 0.400, 7.049)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 261, box (-0.041, 0.000, 6.842), (0.359, 0.400, 7.243)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 262, box (0.521, 0.000, 8.115), (0.921, 0.400, 8.516)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 263, box (0.635, 0.000, 9.266), (1.035, 0.400, 9.667)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 264, box (0.264, 0.000, 10.157), (0.664, 0.400, 10.557)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 265, box (1.002, 0.000, -10.783), (1.402, 0.400, -10.383)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 266, box (1.605, 0.000, -9.666), (2.006, 0.400, -9.266)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 267, box (0.917, 0.000, -8.954), (1.317, 0.400, -8.554)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 268, box (1.096, 0.000, -7.471), (1.497, 0.400, -7.071)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 269, box (1.135, 0.000, -6.973), (1.536, 0.400, -6.572)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 270, box (1.666, 0.000, -6.127), (2.066, 0.400, -5.727)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 271, box (1.246, 0.000, -5.145), (1.646, 0.400, -4.744)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 272, box (1.314, 0.000, -3.458), (1.715, 0.400, -3.057)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 273, box (1.040, 0.000, -2.422), (1.441, 0.400, -2.022)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 274, box (0.942, 0.000, -1.434), (1.342, 0.400, -1.034)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 275, box (1.412, 0.000, -0.363), (1.813, 0.400, 0.037)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 276, box (1.665, 0.000, 0.593), (2.066, 0.400, 0.993)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 277, box (0.916, 0.000, 0.805), (1.316, 0.400, 1.205)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 278, box (0.801, 0.000, 1.945), (1.201, 0.400, 2.345)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 279, box (0.806, 0.000, 3.033), (1.206, 0.400, 3.433)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 280, box (0.904, 0.000, 4.369), (1.305, 0.400, 4.769)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 281, box (0.896, 0.000, 4.916), (1.297, 0.400, 5.316)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 282, box (1.153, 0.000, 6.108), (1.553, 0.400, 6.508)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 283, box (1.644, 0.000, 7.510), (2.044, 0.400, 7.910)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 284, box (1.494, 0.000, 8.437), (1.894, 0.400, 8.838)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 285, box (0.841, 0.000, 8.867), (1.242, 0.400, 9.268)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 286, box (1.383, 0.000, 10.475), (1.783, 0.400, 10.875)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 287, box (2.091, 0.000, -10.461), (2.492, 0.400, -10.060)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 288, box (1.943, 0.000, -9.799), (2.343, 0.400, -9.398)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 289, box (1.947, 0.000, -8.431), (2.348, 0.400, -8.031)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 290, box (2.496, 0.000, -8.126), (2.896, 0.400, -7.725)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 291, box (2.656, 0.000, -6.419), (3.056, 0.400, -6.018)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 292, box (2.572, 0.000, -5.822), (2.972, 0.400, -5.422)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 293, box (2.686, 0.000, -4.802), (3.086, 0.400, -4.402)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 294, box (1.980, 0.000, -4.008), (2.381, 0.400, -3.608)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 295, box (2.226, 0.000, -2.776), (2.626, 0.400, -2.375)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 296, box (1.882, 0.000, -1.418), (2.282, 0.400, -1.018)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 297, box (2.364, 0.000, -1.184), (2.764, 0.400, -0.784)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 298, box (1.967, 0.000, 0.355), (2.367, 0.400, 0.755)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 299, box (2.233, 0.000, 1.216), (2.634, 0.400, 1.616)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 300, box (2.303, 0.000, 2.187), (2.703, 0.400, 2.588)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 301, box (2.042, 0.000, 3.093), (2.442, 0.400, 3.494)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 302, box (2.218, 0.000, 3.810), (2.619, 0.400, 4.211)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 303, box (2.062, 0.000, 5.450), (2.463, 0.400, 5.850)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 304, box (2.452, 0.000, 5.836), (2.852, 0.400, 6.236)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 305, box (2.688, 0.000, 6.893), (3.088, 0.400, 7.293)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 306, box (2.111, 0.000, 8.432), (2.512, 0.400, 8.833)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 307, box (1.879, 0.000, 9.281), (2.279, 0.400, 9.681)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 308, box (2.090, 0.000, 10.157), (2.490, 0.400, 10.558)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 309, box (2.980, 0.000, -10.461), (3.381, 0.400, -10.060)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 310, box (2.912, 0.000, -9.627), (3.312, 0.400, -9.227)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 311, box (2.828, 0.000, -8.393), (3.229, 0.400, -7.993)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 312, box (3.642, 0.000, -7.562), (4.042, 0.400, -7.161)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 313, box (3.533, 0.000, -6.649), (3.934, 0.400, -6.249)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 314, box (3.505, 0.000, -5.464), (3.906, 0.400, -5.064)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 315, box (2.873, 0.000, -4.805), (3.274, 0.400, -4.405)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 316, box (3.354, 0.000, -3.415), (3.755, 0.400, -3.015)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 317, box (3.511, 0.000, -2.415), (3.911, 0.400, -2.015)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 318, box (3.388, 0.000, -1.553), (3.788, 0.400, -1.152)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 319, box (2.980, 0.000, -1.127), (3.380, 0.400, -0.726)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 320, box (3.581, 0.000, 0.957), (3.982, 0.400, 1.357)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 321, box (3.462, 0.000, 2.111), (3.862, 0.400, 2.512)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 322, box (3.321, 0.000, 3.263), (3.721, 0.400, 3.663)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 323, box (3.346, 0.000, 4.238), (3.746, 0.400, 4.638)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 324, box (3.333, 0.000, 5.693), (3.734, 0.400, 6.093)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 325, box (3.552, 0.000, 6.368), (3.953, 0.400, 6.769)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 326, box (2.962, 0.000, 7.342), (3.362, 0.400, 7.742)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 327, box (3.172, 0.000, 7.963), (3.572, 0.400, 8.363)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 328, box (3.201, 0.000, 9.165), (3.601, 0.400, 9.565)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 329, box (2.886, 0.000, 10.334), (3.286, 0.400, 10.734)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 330, box (4.391, 0.000, -10.428), (4.791, 0.400, -10.027)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 331, box (4.013, 0.000, -9.327), (4.414, 0.400, -8.927)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 332, box (4.268, 0.000, -8.902), (4.668, 0.400, -8.502)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 333, box (4.329, 0.000, -7.976), (4.729, 0.400, -7.576)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 334, box (3.833, 0.000, -6.859), (4.233, 0.400, -6.458)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 335, box (4.435, 0.000, -5.440), (4.835, 0.400, -5.040)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 336, box (3.901, 0.000, -4.714), (4.301, 0.400, -4.314)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 337, box (3.847, 0.000, -3.357), (4.247, 0.400, -2.957)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 338, box (4.085, 0.000, -3.120), (4.485, 0.400, -2.720)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 339, box (4.158, 0.000, -2.066), (4.558, 0.400, -1.666)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 340, box (4.375, 0.000, -0.909), (4.776, 0.400, -0.509)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 341, box (4.322, 0.000, 0.581), (4.722, 0.400, 0.982)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 342, box (4.264, 0.000, 1.029), (4.664, 0.400, 1.429)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 343, box (3.919, 0.000, 1.827), (4.320, 0.400, 2.227)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 344, box (4.673, 0.000, 2.946), (5.073, 0.400, 3.347)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 345, box (4.667, 0.000, 4.581), (5.067, 0.400, 4.982)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 346, box (4.415, 0.000, 5.137), (4.815, 0.400, 5.537)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 347, box (4.578, 0.000, 6.582), (4.979, 0.400, 6.982)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 348, box (4.421, 0.000, 7.516), (4.821, 0.400, 7.916)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 349, box (4.544, 0.000, 8.393), (4.945, 0.400, 8.793)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 350, box (4.392, 0.000, 9.114), (4.792, 0.400, 9.514)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 351, box (4.694, 0.000, 10.166), (5.094, 0.400, 10.567)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 352, box (5.465, 0.000, -10.940), (5.865, 0.400, -10.540)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 353, box (5.194, 0.000, -9.599), (5.595, 0.400, -9.199)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 354, box (5.192, 0.000, -8.915), (5.592, 0.400, -8.514)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 355, box (5.096, 0.000, -8.195), (5.496, 0.400, -7.794)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 356, box (5.150, 0.000, -6.858), (5.550, 0.400, -6.457)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 357, box (4.813, 0.000, -5.995), (5.214, 0.400, -5.595)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 358, box (5.217, 0.000, -4.517), (5.618, 0.400, -4.116)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 359, box (5.623, 0.000, -3.769), (6.023, 0.400, -3.368)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 360, box (5.159, 0.000, -3.066), (5.559, 0.400, -2.666)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 361, box (5.294, 0.000, -1.512), (5.695, 0.400, -1.111)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 362, box (4.976, 0.000, -0.460), (5.377, 0.400, -0.059)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 363, box (5.389, 0.000, 0.019), (5.790, 0.400, 0.420)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 364, box (4.854, 0.000, 1.142), (5.255, 0.400, 1.542)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 365, box (4.950, 0.000, 1.891), (5.350, 0.400, 2.292)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 366, box (5.523, 0.000, 3.637), (5.923, 0.400, 4.037)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 367, box (5.160, 0.000, 4.445), (5.560, 0.400, 4.845)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 368, box (5.413, 0.000, 4.911), (5.813, 0.400, 5.311)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 369, box (5.514, 0.000, 5.896), (5.914, 0.400, 6.297)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 370, box (5.525, 0.000, 6.878), (5.926, 0.400, 7.279)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 371, box (4.802, 0.000, 8.656), (5.203, 0.400, 9.057)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 372, box (4.991, 0.000, 9.514), (5.391, 0.400, 9.915)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 373, box (5.493, 0.000, 10.610), (5.893, 0.400, 11.010)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 374, box (6.047, 0.000, -10.928), (6.448, 0.400, -10.528)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 375, box (6.490, 0.000, -10.114), (6.890, 0.400, -9.714)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 376, box (5.951, 0.000, -9.062), (6.352, 0.400, -8.662)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 377, box (5.961, 0.000, -8.114), (6.361, 0.400, -7.713)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 378, box (6.009, 0.000, -6.626), (6.409, 0.400, -6.225)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 379, box (6.047, 0.000, -5.311), (6.447, 0.400, -4.911)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 380, box (6.446, 0.000, -4.799), (6.846, 0.400, -4.398)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 381, box (6.343, 0.000, -4.106), (6.743, 0.400, -3.706)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 382, box (5.871, 0.000, -2.505), (6.272, 0.400, -2.104)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 383, box (6.130, 0.000, -1.909), (6.531, 0.400, -1.509)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 384, box (5.861, 0.000, -0.451), (6.261, 0.400, -0.051)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 385, box (6.334, 0.000, 0.592), (6.734, 0.400, 0.992)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 386, box (6.403, 0.000, 0.971), (6.803, 0.400, 1.372)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 387, box (6.202, 0.000, 2.458), (6.602, 0.400, 2.858)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 388, box (5.854, 0.000, 3.100), (6.255, 0.400, 3.501)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 389, box (6.479, 0.000, 4.421), (6.880, 0.400, 4.821)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 390, box (6.481, 0.000, 5.540), (6.881, 0.400, 5.940)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 391, box (6.144, 0.000, 6.634), (6.545, 0.400, 7.035)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 392, box (6.634, 0.000, 7.463), (7.035, 0.400, 7.864)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 393, box (6.019, 0.000, 8.286), (6.420, 0.400, 8.686)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 394, box (6.480, 0.000, 9.509), (6.880, 0.400, 9.910)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 395, box (5.857, 0.000, 10.438), (6.257, 0.400, 10.838)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 396, box (6.879, 0.000, -10.857), (7.279, 0.400, -10.457)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 397, box (7.052, 0.000, -9.843), (7.452, 0.400, -9.442)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 398, box (7.627, 0.000, -9.054), (8.028, 0.400, -8.654)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 399, box (7.251, 0.000, -8.012), (7.651, 0.400, -7.612)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 400, box (7.590, 0.000, -6.593), (7.991, 0.400, -6.193)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 401, box (7.537, 0.000, -5.926), (7.937, 0.400, -5.525)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 402, box (7.111, 0.000, -4.999), (7.512, 0.400, -4.598)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 403, box (7.231, 0.000, -4.081), (7.632, 0.400, -3.680)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 404, box (7.488, 0.000, -2.392), (7.889, 0.400, -1.991)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 405, box (7.400, 0.000, -2.068), (7.800, 0.400, -1.668)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 406, box (6.922, 0.000, -0.745), (7.322, 0.400, -0.344)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 407, box (7.335, 0.000, 0.189), (7.735, 0.400, 0.590)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 408, box (7.377, 0.000, 1.566), (7.777, 0.400, 1.967)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 409, box (7.148, 0.000, 1.937), (7.548, 0.400, 2.337)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 410, box (7.695, 0.000, 3.236), (8.096, 0.400, 3.637)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 411, box (6.954, 0.000, 4.015), (7.354, 0.400, 4.416)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 412, box (7.423, 0.000, 4.960), (7.823, 0.400, 5.360)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 413, box (7.009, 0.000, 6.533), (7.410, 0.400, 6.933)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 414, box (7.183, 0.000, 7.563), (7.584, 0.400, 7.964)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 415, box (7.119, 0.000, 7.975), (7.519, 0.400, 8.376)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 416, box (7.492, 0.000, 9.148), (7.893, 0.400, 9.549)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 417, box (7.511, 0.000, 9.817), (7.912, 0.400, 10.218)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 418, box (7.994, 0.000, -10.643), (8.394, 0.400, -10.243)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 419, box (7.858, 0.000, -9.479), (8.259, 0.400, -9.078)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 420, box (8.209, 0.000, -8.619), (8.609, 0.400, -8.218)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 421, box (8.578, 0.000, -8.065), (8.979, 0.400, -7.665)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 422, box (8.155, 0.000, -6.647), (8.555, 0.400, -6.247)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 423, box (7.892, 0.000, -5.340), (8.292, 0.400, -4.940)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 424, box (8.029, 0.000, -5.131), (8.430, 0.400, -4.731)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 425, box (8.543, 0.000, -3.785), (8.943, 0.400, -3.384)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 426, box (8.353, 0.000, -2.996), (8.753, 0.400, -2.595)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 427, box (8.689, 0.000, -1.536), (9.090, 0.400, -1.136)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 428, box (8.445, 0.000, -0.528), (8.845, 0.400, -0.128)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 429, box (8.258, 0.000, 0.661), (8.658, 0.400, 1.061)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 430, box (8.497, 0.000, 1.674), (8.898, 0.400, 2.074)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 431, box (8.295, 0.000, 1.889), (8.695, 0.400, 2.289)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 432, box (7.874, 0.000, 2.874), (8.274, 0.400, 3.275)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 433, box (8.678, 0.000, 4.362), (9.079, 0.400, 4.763)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 434, box (8.497, 0.000, 5.035), (8.898, 0.400, 5.435)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 435, box (8.090, 0.000, 6.672), (8.490, 0.400, 7.072)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 436, box (8.342, 0.000, 6.903), (8.742, 0.400, 7.303)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 437, box (8.628, 0.000, 8.324), (9.029, 0.400, 8.725)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 438, box (8.104, 0.000, 8.839), (8.505, 0.400, 9.240)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 439, box (8.295, 0.000, 10.189), (8.695, 0.400, 10.589)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 440, box (8.909, 0.000, -10.365), (9.310, 0.400, -9.964)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 441, box (9.404, 0.000, -9.943), (9.805, 0.400, -9.542)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 442, box (9.575, 0.000, -8.915), (9.976, 0.400, -8.514)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 443, box (9.372, 0.000, -7.973), (9.773, 0.400, -7.573)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 444, box (9.499, 0.000, -6.698), (9.899, 0.400, -6.298)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 445, box (9.042, 0.000, -5.314), (9.443, 0.400, -4.913)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 446, box (9.453, 0.000, -4.583), (9.854, 0.400, -4.183)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 447, box (9.108, 0.000, -3.443), (9.509, 0.400, -3.043)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 448, box (9.068, 0.000, -2.649), (9.468, 0.400, -2.249)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 449, box (9.589, 0.000, -1.627), (9.990, 0.400, -1.227)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 450, box (9.022, 0.000, -0.469), (9.422, 0.400, -0.069)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 451, box (9.592, 0.000, 0.161), (9.992, 0.400, 0.562)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 452, box (9.354, 0.000, 1.534), (9.755, 0.400, 1.934)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 453, box (9.272, 0.000, 2.299), (9.672, 0.400, 2.699)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 454, box (8.982, 0.000, 2.810), (9.383, 0.400, 3.210)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 455, box (9.558, 0.000, 3.934), (9.958, 0.400, 4.334)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 456, box (9.204, 0.000, 5.147), (9.604, 0.400, 5.547)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 457, box (9.397, 0.000, 6.152), (9.797, 0.400, 6.553)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 458, box (9.120, 0.000, 6.950), (9.520, 0.400, 7.351)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 459, box (9.259, 0.000, 8.233), (9.659, 0.400, 8.633)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 460, box (9.305, 0.000, 9.003), (9.706, 0.400, 9.403)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 461, box (9.342, 0.000, 10.524), (9.742, 0.400, 10.925)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 462, box (9.853, 0.000, -11.066), (10.253, 0.400, -10.666)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 463, box (10.543, 0.000, -9.490), (10.943, 0.400, -9.090)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 464, box (10.191, 0.000, -8.538), (10.591, 0.400, -8.138)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 465, box (10.490, 0.000, -7.538), (10.890, 0.400, -7.138)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 466, box (10.179, 0.000, -7.044), (10.580, 0.400, -6.643)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 467, box (10.692, 0.000, -5.831), (11.092, 0.400, -5.431)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 468, box (9.966, 0.000, -5.017), (10.366, 0.400, -4.617)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 469, box (10.327, 0.000, -4.178), (10.728, 0.400, -3.778)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 470, box (10.647, 0.000, -2.496), (11.047, 0.400, -2.095)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 471, box (10.216, 0.000, -1.442), (10.616, 0.400, -1.042)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 472, box (9.920, 0.000, -0.565), (10.321, 0.400, -0.164)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 473, box (10.502, 0.000, 0.193), (10.903, 0.400, 0.594)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 474, box (10.349, 0.000, 1.003), (10.750, 0.400, 1.403)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 475, box (9.812, 0.000, 2.661), (10.212, 0.400, 3.061)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 476, box (10.022, 0.000, 3.048), (10.423, 0.400, 3.449)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 477, box (10.186, 0.000, 4.483), (10.586, 0.400, 4.884)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 478, box (9.830, 0.000, 5.568), (10.231, 0.400, 5.968)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 479, box (10.084, 0.000, 6.279), (10.484, 0.400, 6.680)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 480, box (10.397, 0.000, 7.459), (10.798, 0.400, 7.860)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 481, box (10.545, 0.000, 7.847), (10.945, 0.400, 8.247)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 482, box (10.031, 0.000, 9.682), (10.431, 0.400, 10.082)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 483, box (10.453, 0.000, 10.389), (10.853, 0.400, 10.789)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 484, box (-1.000, 0.000, -1.000), (1.000, 2.000, 1.000)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 485, box (-5.000, 0.000, -1.000), (-3.000, 2.000, 1.000)
EMBREE: Get accel instance -> device 0x7ffe348a4270
EMBREE: Add AABB geometry: geomID: 0, primID 486, box (3.000, 0.000, -1.000), (5.000, 2.000, 1.000)
EMBREE: New rtcBVH structure created at 0x556b9dac4a70
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x556b9dd59ec0
Compressed Node: i	exp: (11, 11, 11)	origin: (-1000.000000, -2000.000000, -1000.000000)
Children:
	0x556b9dd59f28: (123, 250, 125), (127, 251, 127)
	0x556b9dd5c300: (123, 250, 123), (126, 251, 125)
	0x556b9dd5dc78: (125, 250, 123), (127, 251, 125)
	0x556b9dd5f560: (123, 250, 125), (127, 251, 126)
	0x556b9dd60868: (123, 250, 124), (127, 251, 126)
	0x556b9dd6135c: (0, 0, 0), (250, 250, 250)
EMBREE: Set dst_map 0x556b9dcc6000 = accel->address.bo 0x556b9dcc6000 + accel->address.offset 0x0 for accel 0x556b9dc77c00
EMBREE: Pack bvh 0x7ffe348a4560 to dst_map 0x556b9dcc6000
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a02b0
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a0e20
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a1990
EMBREE: Get accel instance -> device 0x7ffe348a2500
EMBREE: Get accel instance -> device 0x7ffe348a2500
EMBREE: Get accel instance -> device 0x7ffe348a3070
EMBREE: Pack root 0x556b9dd59ec0 to root_map 0x556b9dcc6040
gpgpusim: set AS
EMBREE: Release rtcBVH structure created at 0x556b9dac4a70
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
- built acceleration structures in 0.0375828s
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 28: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    28 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    28 bytes into the SPIR-V binary
LVP: Image created at 0x7ffe348a4748
RTV: Creating image at 0x556b94d4ee90
LVP: Creating image_view for image 0x556b94d4ee90
RTV: Creating image view at 0x556b9dd591f0
LVP: Image created at 0x556b9dd593c8
RTV: Creating image at 0x556b94d4ee90
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dc0fd50; llvmpipe_resource 0x556b9dc0fd50; pipe_memory_allocation 0x556b9dd78000;
gpgpusim: binding gpgpusim buffer 0xc1ecd800 (size 262144) to vulkan buffer 0x556b9dd78000
LVP: Image 0x556b94d4ee90 bound to pmem 0x556b9dd78000 using pointer 0xc1ecd800
LVP: Creating image_view for image 0x556b94d4ee90
RTV: Creating image view at 0x556b9de7b190
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
LVP: vkBuffer size 320 created at 0x556b9dd592f8
RTV: New vkBuffer created at 0x556b9dd592f8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9de7b5b0; llvmpipe_resource 0x556b9de7b5b0; pipe_memory_allocation 0x556b9de7c000;
LVP: Binding lvp_buffer 0x556b9dac49f0: buffer->bo: 0x556b9de7b5b0; buffer->pmem: 0x556b9de7c000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc1f0d800 (size 320) to vulkan buffer 0x556b9de7c000
LVP: gpgpusim buffer size 320 allocated at 0xc1f0d800
RTV: Bind buffer memory for vkBuffer 0x556b9dd592f8
RTV: Create descriptor pool...
LVP: Create descriptor pool...
RTV: Create descriptor set layout...
LVP: Create descriptor set layout...
LVP: Set Layout with 3 bindings...
DESCRIPTOR TYPE SET: 6
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER; stage flag 0x  1
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x 11
DESCRIPTOR TYPE SET: 1
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER; stage flag 0x 10
RTV: Allocate descriptor sets...
LVP: Allocate descriptor sets...
LVP: Creating descriptor sets with 3 bindings at 0x556b9de7bda0...
RTV: Update descriptor sets...
LVP: Update descriptor sets...
DESC AT: 0x556b9de7bdf8 with type 6
LVP: Setting lvp_buffer 0x556b9dac49f0 for descriptor 0 (0). info.ubo: buffer 0x556b9de7b5b0 + offset 0 = 0x556b9de7b5b0; stored at 0x556b9de7c000 using pointer 0xc1f0d800 with 320 bytes. 
LVP: gpgpusim buffer at 0xc1f0d800
DESC AT: 0x556b9de7be28 with type 7
LVP: Setting lvp_buffer 0x556b9da1b530 for descriptor 1 (0). info.ssbo: buffer 0x556b9da1c000 + offset 0 = 0x556b9da1c000; stored at 0x556b9da1d000 using pointer 0xc1e2c800 with 15584 bytes. 
LVP: gpgpusim buffer at 0xc1e2c800
DESC AT: 0x556b9de7be58 with type 1
LVP: Setting descriptor 2 VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
LVP: Create pipeline layout...
LVP: Image created at 0x556b9dd77568
RTV: Creating image at 0x556b9dfce720
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9dfd0250; llvmpipe_resource 0x556b9dfd0250; pipe_memory_allocation 0x556b9f747000;
gpgpusim: binding gpgpusim buffer 0xc1f0da00 (size 1048576) to vulkan buffer 0x556b9f747000
LVP: Image 0x556b9dfce720 bound to pmem 0x556b9f747000 using pointer 0xc1f0da00
LVP: Creating image_view for image 0x556b9dfce720
RTV: Creating image view at 0x556b9de8ce20
LVP: Image created at 0x556b9dc5d7d8
RTV: Creating image at 0x556b9dfcec00
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556b9fc43530; llvmpipe_resource 0x556b9fc43530; pipe_memory_allocation 0x556b9fc44000;
gpgpusim: binding gpgpusim buffer 0xc200da00 (size 1048576) to vulkan buffer 0x556b9fc44000
LVP: Image 0x556b9dfcec00 bound to pmem 0x556b9fc44000 using pointer 0xc200da00
LVP: Creating image_view for image 0x556b9dfcec00
RTV: Creating image view at 0x556b9de864e0
RTV: Create descriptor pool...
LVP: Create descriptor pool...
RTV: Create descriptor set layout...
LVP: Create descriptor set layout...
LVP: Set Layout with 12 bindings...
DESCRIPTOR TYPE SET: 1000150000
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR; stage flag 0x100
DESCRIPTOR TYPE SET: 3
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE; stage flag 0x100
DESCRIPTOR TYPE SET: 3
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE; stage flag 0x100
DESCRIPTOR TYPE SET: 6
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER; stage flag 0x900
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 1
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
RTV: Allocate descriptor sets...
LVP: Allocate descriptor sets...
LVP: Creating descriptor sets with 12 bindings at 0x556b9de8aad0...
RTV: Update descriptor sets...
LVP: Update descriptor sets...
DESC AT: 0x556b9de8ab28 with type 1000150000
LVP: Setting lvp_acceleration_structure 0x556b9dc77c00 for descriptor 0 (0). info.ubo: address 0x556b9dcc6000 + offset 0 = 0x556b9dcc6000 
DESC AT: 0x556b9de8ab58 with type 3
LVP: Setting lvp_image_view 0x556b9de8ce20 for descriptor 1 (0). Type: VK_FORMAT_R32G32B32A32_SFLOAT; Tiling: VK_IMAGE_TILING_OPTIMAL
LVP: Image 0x556b9dfce720 stored at 0x556b9f747000 using pointer 0xc1f0da00
DESC AT: 0x556b9de8ab88 with type 3
LVP: Setting lvp_image_view 0x556b9de864e0 for descriptor 2 (0). Type: VK_FORMAT_R32G32B32A32_SFLOAT; Tiling: VK_IMAGE_TILING_OPTIMAL
LVP: Image 0x556b9dfcec00 stored at 0x556b9fc44000 using pointer 0xc200da00
DESC AT: 0x556b9de8abb8 with type 6
LVP: Setting lvp_buffer 0x556b9dac49f0 for descriptor 3 (0). info.ubo: buffer 0x556b9de7b5b0 + offset 0 = 0x556b9de7b5b0; stored at 0x556b9de7c000 using pointer 0xc1f0d800 with 320 bytes. 
LVP: gpgpusim buffer at 0xc1f0d800
DESC AT: 0x556b9de8abe8 with type 7
LVP: Setting lvp_buffer 0x556b94b019e0 for descriptor 4 (0). info.ssbo: buffer 0x556b9576deb0 + offset 0 = 0x556b9576deb0; stored at 0x7f9f5d4be000 using pointer 0xc0000000 with 9835452 bytes. 
LVP: gpgpusim buffer at 0xc0000000
DESC AT: 0x556b9de8ac18 with type 7
LVP: Setting lvp_buffer 0x556b9980b600 for descriptor 5 (0). info.ssbo: buffer 0x556b9bd91f90 + offset 0 = 0x556b9bd91f90; stored at 0x556b9bd93000 using pointer 0xc12c2800 with 5984256 bytes. 
LVP: gpgpusim buffer at 0xc12c2800
DESC AT: 0x556b9de8ac48 with type 7
LVP: Setting lvp_buffer 0x556b9da1b530 for descriptor 6 (0). info.ssbo: buffer 0x556b9da1c000 + offset 0 = 0x556b9da1c000; stored at 0x556b9da1d000 using pointer 0xc1e2c800 with 15584 bytes. 
LVP: gpgpusim buffer at 0xc1e2c800
DESC AT: 0x556b9de8ac78 with type 7
LVP: Setting lvp_buffer 0x556b9da2f680 for descriptor 7 (0). info.ssbo: buffer 0x556b9da30000 + offset 0 = 0x556b9da30000; stored at 0x556b9da31000 using pointer 0xc1e34200 with 3896 bytes. 
LVP: gpgpusim buffer at 0xc1e34200
DESC AT: 0x556b9de8aca8 with type 1
LVP: Setting descriptor 8 VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
DESC AT: 0x556b9de8acd8 with type 7
LVP: Setting lvp_buffer 0x556b9da56900 for descriptor 9 (0). info.ssbo: buffer 0x556b9da57000 + offset 0 = 0x556b9da57000; stored at 0x556b9da66000 using pointer 0xc1e3be00 with 7792 bytes. 
LVP: gpgpusim buffer at 0xc1e3be00
DESC AT: 0x556b9de8ad08 with type 7
LVP: Setting lvp_buffer 0x556b9da82440 for descriptor 10 (0). info.ssbo: buffer 0x556b9da83000 + offset 0 = 0x556b9da83000; stored at 0x556b9da91000 using pointer 0xc1e45800 with 7792 bytes. 
LVP: gpgpusim buffer at 0xc1e45800
DESC AT: 0x556b9de8ad38 with type 7
LVP: Setting lvp_buffer 0x556b9daadbc0 for descriptor 11 (0). info.ssbo: buffer 0x556b9daad9b0 + offset 0 = 0x556b9daad9b0; stored at 0x556b9dabd000 using pointer 0xc1e4f200 with 7792 bytes. 
LVP: gpgpusim buffer at 0xc1e4f200
LVP: Create pipeline layout...
RTV: Using regular path tracing shaders.
RTV: Anyhit shader: -1
RTV: Creating raMESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 2148: SPIR-V WARNING:
    In file ../src/compiler/spirv/vtn_variables.c:1492
    Location must be on input, output, uniform, sampler or image variable
    2148 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/vtn_variables.c:1492
    Location must be on input, output, uniform, sampler or image variable
    2148 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 28: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 36: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 28: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 36: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 28: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 36: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 28: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4798
    Unsupported SPIR-V capability: SpvCapabilityShaderNonUniform (5301)
    28 bytes into the SPIR-V binary
MESA: warning: ../src/vulkan/runtime/vk_nir.c:57: SPIR-V offset 36: SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
SPIR-V WARNING:
    In file ../src/compiler/spirv/spirv_to_nir.c:4818
    Unsupported SPIR-V capability: SpvCapabilityRuntimeDescriptorArray (5302)
    36 bytes into the SPIR-V binary
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptx
Translating /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx
y tracing pipeline...
LVP: Creating ray tracing pipeline...
LVP: Compiling ray tracing pipeline...
LVP: Compiling shader stage 0
LVP: Translating shader 0 (type 8)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_RAYGEN to PTX
LVP: Compiling shader stage 1
LVP: Translating shader 1 (type 11)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_MISS to PTX
LVP: Compiling shader stage 2
LVP: Translating shader 2 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 3
LVP: Translating shader 3 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 4
LVP: Translating shader 4 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 5
LVP: Translating shader 5 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 6
LVP: Translating shader 6 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 7
LVP: Translating shader 7 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 8
LVP: Translating shader 8 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 9
LVP: Translating shader 9 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: run_rt_translation_passes
LVP: Registering shader stage 0 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_RAYGEN_func0_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_RAYGEN_func0_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_RAYGEN_func0_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 12 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_RAYGEN_func0_main' : regs=12, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 1 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_MISS_func1_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_MISS_func1_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_MISS_func1_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 7 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_MISS_func1_main' : regs=7, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 2 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func2_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func2_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func2_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 31 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func2_main' : regs=31, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 3 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func3_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func3_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func3_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 27 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func3_main' : regs=27, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 4 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func4_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func4_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func4_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 28 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func4_main' : regs=28, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 5 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func5_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func5_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func5_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 28 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func5_main' : regs=28, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 6 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func6_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func6_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func6_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 15 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func6_main' : regs=15, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 7 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func7_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func7_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func7_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 2 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func7_main' : regs=2, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 8 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func8_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func8_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func8_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 14 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func8_main' : regs=14, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 9 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func9_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptx
GPGPUSIM: Generating PTXINFO for/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func9_main' for 'sm_30'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func9_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 15 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func9_main' : regs=15, lmem=0, smem=0, cmem=320
LVP: Adding group handle for general group: 
	general_index 0
LVP: Adding group handle for general group: 
	general_index 1
LVP: Adding group handle for triangle hit group: 
	closest_hit_index 2
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 3
	intersection_index 6
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 4
	intersection_index 7
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 5
	intersection_index 8
gpgpusim: set pipeline
LVP: vkBuffer size 192 created at 0x556ba18079c8
RTV: New vkBuffer created at 0x556ba18079c8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x556b949076f0; pipe_resource 0x556ba181fbf0; llvmpipe_resource 0x556ba181fbf0; pipe_memory_allocation 0x556ba015e000;
LVP: Binding lvp_buffer 0x556ba18276e0: buffer->bo: 0x556ba181fbf0; buffer->pmem: 0x556ba015e000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc210da00 (size 192) to vulkan buffer 0x556ba015e000
LVP: gpgpusim buffer size 192 allocated at 0xc210da00
RTV: Bind buffer memory for vkBuffer 0x556ba18079c8
RTV: Get ray tracing shader group handles... group count: 6; handle size: 32
LVP: Get ray tracing shader group handles...
LVP: Copying handle 0 to 0x556b9de840d0
LVP: Copying handle 1 to 0x556b9de840f0
LVP: Copying handle 2 to 0x556b9de84110
LVP: Copying handle 3 to 0x556b9de84130
LVP: Copying handle 4 to 0x556b9de84150
LVP: Copying handle 5 to 0x556b9de84170
LVP: Finding mapped memory for mem 0x556ba18159a0: mem->pmem 0x556ba015e000 
LVP: Identified at 0x556ba015e000
RTV: CopyShaderData (size 32) from 0x556b9de840d0 to 0x556ba015e000 for raygen shader
RTV: CopyShaderData (size 32) from 0x556b9de840d0 to 0x556ba015e020 for miss shader
RTV: CopyShaderData (size 32) from 0x556b9de840d0 to 0x556ba015e040 for hit shader

Swap Chain: 
- image count: 1
- present mode: 3

RTV: Bind ray tracing pipeline...
RTV: Bind descriptor sets...
RTV: Trace ray...
RTV: (256 x 256 x 1) SBT raygen 0x7ffe348a46b0, miss 0x7ffe348a46d0, hit 0x7ffe348a46f0, callable 0x7ffe348a4710
RTV: Copy image...
LVP: Finding mapped memory for mem 0x556b9dd309c0: mem->pmem 0x556b9de7c000 
LVP: Identified at 0x556b9de7c000
RTV: Setting uniform buffer value at 0x556b9de7c000 using memcpy
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_BIND_PIPELINE
	VK_CMD_BIND_DESCRIPTOR_SETS
	VK_CMD_TRACE_RAYS_KHR
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_COPY_IMAGE2
	VK_CMD_PIPELINE_BARRIER2
LVP: Bind pipeline...
LVP: Bind ray tracing pipeline...
LVP: Bind descriptor sets...
LVP: Bind ray tracing descriptor sets...
LVP: Binding... 
Bind raygen... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind any hit... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind closest hit... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind miss... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind intersection... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...

LVP: Setting descriptor set pointer 0x9de8aad0...
gpgpusim: set descriptor set 0x9de8aad0
LVP: Handling trace ray...
LVP: SBT: raygen 0x556ba015e000, miss 0x556ba015e020, hit 0x556ba015e040, callable (nil) 
LVP: Launching vkCmdTraceRaysKHR on Vulkan-Sim; Mesa last updated April 12, 2023
gpgpusim: invoking gpgpusim
gpgpusim: launching cmd trace ray
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_RAYGEN_func0_main'...
Printing basic blocks for function 'MESA_SHADER_RAYGEN_func0_main':
bb_00	:  PC=0x000 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:13) filter_shader %shader_passes;
bb_00	:  PC=0x008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:16) setp.eq.u32 %does_pass, %shader_passes, 0;
bb_00	:  PC=0x010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:17) @%does_pass bra shader_exit;

bb_01	:  PC=0x018 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:22) load_ray_launch_id %launch_ID_0, %launch_ID_1, %launch_ID_2;
bb_01	:  PC=0x020 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:27) load_ray_launch_size %launch_Size_0, %launch_Size_1, %launch_Size_2;
bb_01	:  PC=0x028 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:31) setp.ge.u32 %bigger_0, %launch_ID_0, %launch_Size_0;
bb_01	:  PC=0x030 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:34) setp.ge.u32 %bigger_1, %launch_ID_1, %launch_Size_1;
bb_01	:  PC=0x038 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:37) setp.ge.u32 %bigger_2, %launch_ID_2, %launch_Size_2;
bb_01	:  PC=0x040 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:39) @%bigger_0 bra shader_exit;

bb_02	:  PC=0x048 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:40) @%bigger_1 bra shader_exit;

bb_03	:  PC=0x050 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:41) @%bigger_2 bra shader_exit;

bb_04	:  PC=0x058 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:94) load_vulkan_descriptor %AccumulationImage, 0, 1; // decl_var image INTERP_MODE_NONE restrict r32g32b32a32_float image2D AccumulationImage
bb_04	:  PC=0x060 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:96) load_vulkan_descriptor %OutputImage, 0, 2; // decl_var image INTERP_MODE_NONE restrict r8g8b8a8_unorm image2D OutputImage
bb_04	:  PC=0x068 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:98) rt_alloc_mem %Ray, 48, 8192; // decl_var function_temp INTERP_MODE_NONE RayPayload Ray
bb_04	:  PC=0x070 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:106) mov.f32 %const1_f32, 0F3f800000;
bb_04	:  PC=0x078 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:109) mov.f32 %const0_f32, 0F00000000;
bb_04	:  PC=0x080 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:112) mov.u32 %const0_u32, 0;
bb_04	:  PC=0x088 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:115) mov.u16 %const1_u16, 1;
bb_04	:  PC=0x090 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:120) mov.f32 %ssa_0, 0F000000ff; // vec1 32 ssa_0 = undefined
bb_04	:  PC=0x098 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:122) mov.b32 %ssa_0_bits, 0F000000ff;
bb_04	:  PC=0x0a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:125) mov.f32 %ssa_1, 0F000000ff; // vec1 32 ssa_1 = undefined
bb_04	:  PC=0x0a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:127) mov.b32 %ssa_1_bits, 0F000000ff;
bb_04	:  PC=0x0b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:130) mov.f32 %ssa_2, 0F00000000; // vec1 32 ssa_2 = load_const (0x00000000 /* 0.000000 */)
bb_04	:  PC=0x0b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:132) mov.b32 %ssa_2_bits, 0F00000000;
bb_04	:  PC=0x0c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:135) mov.f32 %ssa_3, 0F000000ff; // vec1 32 ssa_3 = undefined
bb_04	:  PC=0x0c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:137) mov.b32 %ssa_3_bits, 0F000000ff;
bb_04	:  PC=0x0d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:140) mov.f32 %ssa_4, 0F000000ff; // vec1 32 ssa_4 = undefined
bb_04	:  PC=0x0d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:142) mov.b32 %ssa_4_bits, 0F000000ff;
bb_04	:  PC=0x0e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:148) mov.f32 %ssa_5_0, 0F00000000;
bb_04	:  PC=0x0e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:149) mov.f32 %ssa_5_1, 0F00000000;
bb_04	:  PC=0x0f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:150) mov.f32 %ssa_5_2, 0F00000000;
bb_04	:  PC=0x0f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:151) mov.f32 %ssa_5_3, 0F00000000;
bb_04	:  PC=0x100 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:155) mov.f32 %ssa_6, 0F000000ff; // vec1 32 ssa_6 = undefined
bb_04	:  PC=0x108 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:157) mov.b32 %ssa_6_bits, 0F000000ff;
bb_04	:  PC=0x110 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:160) mov.f32 %ssa_7, 0F000000ff; // vec1 32 ssa_7 = undefined
bb_04	:  PC=0x118 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:162) mov.b32 %ssa_7_bits, 0F000000ff;
bb_04	:  PC=0x120 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:165) mov.f32 %ssa_8, 0F00000001; // vec1 32 ssa_8 = load_const (0x00000001 /* 0.000000 */)
bb_04	:  PC=0x128 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:167) mov.b32 %ssa_8_bits, 0F00000001;
bb_04	:  PC=0x130 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:170) mov.f32 %ssa_9, 0F461c4000; // vec1 32 ssa_9 = load_const (0x461c4000 /* 10000.000000 */)
bb_04	:  PC=0x138 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:172) mov.b32 %ssa_9_bits, 0F461c4000;
bb_04	:  PC=0x140 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:175) mov.f32 %ssa_10, 0F3a83126f; // vec1 32 ssa_10 = load_const (0x3a83126f /* 0.001000 */)
bb_04	:  PC=0x148 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:177) mov.b32 %ssa_10_bits, 0F3a83126f;
bb_04	:  PC=0x150 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:180) mov.f32 %ssa_11, 0F000000ff; // vec1 32 ssa_11 = load_const (0x000000ff /* 0.000000 */)
bb_04	:  PC=0x158 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:182) mov.b32 %ssa_11_bits, 0F000000ff;
bb_04	:  PC=0x160 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:188) mov.f32 %ssa_12_0, 0F00000000;
bb_04	:  PC=0x168 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:189) mov.f32 %ssa_12_1, 0F00000000;
bb_04	:  PC=0x170 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:190) mov.f32 %ssa_12_2, 0F00000000;
bb_04	:  PC=0x178 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:191) mov.f32 %ssa_12_3, 0F00000000;
bb_04	:  PC=0x180 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:198) mov.f32 %ssa_13_0, 0F3f800000;
bb_04	:  PC=0x188 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:199) mov.f32 %ssa_13_1, 0F3f800000;
bb_04	:  PC=0x190 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:200) mov.f32 %ssa_13_2, 0F3f800000;
bb_04	:  PC=0x198 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:201) mov.f32 %ssa_13_3, 0F00000000;
bb_04	:  PC=0x1a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:205) mov.f32 %ssa_14, 0F40000000; // vec1 32 ssa_14 = load_const (0x40000000 /* 2.000000 */)
bb_04	:  PC=0x1a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:207) mov.b32 %ssa_14_bits, 0F40000000;
bb_04	:  PC=0x1b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:210) load_vulkan_descriptor %ssa_15, 0, 3, 6; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_2) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
bb_04	:  PC=0x1b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:213) mov.b64 %ssa_16, %ssa_15; // vec2 32 ssa_16 = intrinsic load_vulkan_descriptor (%ssa_15) (6) /* desc_type=UBO */
bb_04	:  PC=0x1c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:216) mov.b64 %ssa_17, %ssa_16; // vec2 32 ssa_17 = deref_cast (UniformBufferObjectStruct *)ssa_16 (ubo UniformBufferObjectStruct)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_04	:  PC=0x1c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:219) add.u64 %ssa_18, %ssa_17, 0; // vec2 32 ssa_18 = deref_struct &ssa_17->Camera (ubo UniformBufferObject) /* &((UniformBufferObjectStruct *)ssa_16)->Camera */
bb_04	:  PC=0x1d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:222) add.u64 %ssa_19, %ssa_18, 300; // vec2 32 ssa_19 = deref_struct &ssa_18->RandomSeed (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.RandomSeed */
bb_04	:  PC=0x1d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:225) ld.global.u32 %ssa_20, [%ssa_19]; // vec1 32 ssa_20 = intrinsic load_deref (%ssa_19) (0) /* access=0 */
bb_04	:  PC=0x1e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:231) load_ray_launch_id %ssa_21_0, %ssa_21_1, %ssa_21_2; // vec3 32 ssa_21 = intrinsic load_ray_launch_id () ()
bb_04	:  PC=0x1e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:234) mov.f32 %ssa_22, 0F7e95761e; // vec1 32 ssa_22 = load_const (0x7e95761e /* 99334135436773842136473284483078946816.000000 */)
bb_04	:  PC=0x1f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:236) mov.b32 %ssa_22_bits, 0F7e95761e;
bb_04	:  PC=0x1f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:239) mov.f32 %ssa_23, 0F00000005; // vec1 32 ssa_23 = load_const (0x00000005 /* 0.000000 */)
bb_04	:  PC=0x200 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:241) mov.b32 %ssa_23_bits, 0F00000005;
bb_04	:  PC=0x208 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:244) mov.f32 %ssa_24, 0Fad90777d; // vec1 32 ssa_24 = load_const (0xad90777d /* -0.000000 */)
bb_04	:  PC=0x210 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:246) mov.b32 %ssa_24_bits, 0Fad90777d;
bb_04	:  PC=0x218 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:249) mov.f32 %ssa_25, 0F00000004; // vec1 32 ssa_25 = load_const (0x00000004 /* 0.000000 */)
bb_04	:  PC=0x220 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:251) mov.b32 %ssa_25_bits, 0F00000004;
bb_04	:  PC=0x228 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:254) mov.f32 %ssa_26, 0Fc8013ea4; // vec1 32 ssa_26 = load_const (0xc8013ea4 /* -132346.562500 */)
bb_04	:  PC=0x230 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:256) mov.b32 %ssa_26_bits, 0Fc8013ea4;
bb_04	:  PC=0x238 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:259) mov.f32 %ssa_27, 0Fa341316c; // vec1 32 ssa_27 = load_const (0xa341316c /* -0.000000 */)
bb_04	:  PC=0x240 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:261) mov.b32 %ssa_27_bits, 0Fa341316c;
bb_04	:  PC=0x248 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:264) mov.f32 %ssa_28, 0F9e3779b9; // vec1 32 ssa_28 = load_const (0x9e3779b9 /* -0.000000 */)
bb_04	:  PC=0x250 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:266) mov.b32 %ssa_28_bits, 0F9e3779b9;
bb_04	:  PC=0x258 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:269) shl.b32 %ssa_29, %ssa_21_1, %ssa_25_bits; // vec1 32 ssa_29 = ishl ssa_21.y, ssa_25
bb_04	:  PC=0x260 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:272) add.s32 %ssa_30, %ssa_29, %ssa_27_bits; // vec1 32 ssa_30 = iadd ssa_29, ssa_27
bb_04	:  PC=0x268 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:275) add.s32 %ssa_31, %ssa_21_1, %ssa_28_bits; // vec1 32 ssa_31 = iadd ssa_21.y, ssa_28
bb_04	:  PC=0x270 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:278) xor.b32 %ssa_32, %ssa_30, %ssa_31;// vec1 32 ssa_32 = ixor ssa_30, ssa_31
bb_04	:  PC=0x278 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:281) shr.u32 %ssa_33, %ssa_21_1, %ssa_23_bits; // vec1 32 ssa_33 = ushr ssa_21.y, ssa_23
bb_04	:  PC=0x280 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:284) add.s32 %ssa_34, %ssa_33, %ssa_26_bits; // vec1 32 ssa_34 = iadd ssa_33, ssa_26
bb_04	:  PC=0x288 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:287) xor.b32 %ssa_35, %ssa_32, %ssa_34;// vec1 32 ssa_35 = ixor ssa_32, ssa_34
bb_04	:  PC=0x290 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:290) add.s32 %ssa_36, %ssa_21_0, %ssa_35; // vec1 32 ssa_36 = iadd ssa_21.x, ssa_35
bb_04	:  PC=0x298 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:293) shl.b32 %ssa_37, %ssa_36, %ssa_25_bits; // vec1 32 ssa_37 = ishl ssa_36, ssa_25
bb_04	:  PC=0x2a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:296) add.s32 %ssa_38, %ssa_37, %ssa_24_bits; // vec1 32 ssa_38 = iadd ssa_37, ssa_24
bb_04	:  PC=0x2a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:299) add.s32 %ssa_39, %ssa_36, %ssa_28_bits; // vec1 32 ssa_39 = iadd ssa_36, ssa_28
bb_04	:  PC=0x2b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:302) xor.b32 %ssa_40, %ssa_38, %ssa_39;// vec1 32 ssa_40 = ixor ssa_38, ssa_39
bb_04	:  PC=0x2b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:305) shr.u32 %ssa_41, %ssa_36, %ssa_23_bits; // vec1 32 ssa_41 = ushr ssa_36, ssa_23
bb_04	:  PC=0x2c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:308) add.s32 %ssa_42, %ssa_41, %ssa_22_bits; // vec1 32 ssa_42 = iadd ssa_41, ssa_22
bb_04	:  PC=0x2c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:311) xor.b32 %ssa_43, %ssa_40, %ssa_42;// vec1 32 ssa_43 = ixor ssa_40, ssa_42
bb_04	:  PC=0x2d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:314) add.s32 %ssa_44, %ssa_21_1, %ssa_43; // vec1 32 ssa_44 = iadd ssa_21.y, ssa_43
bb_04	:  PC=0x2d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:317) mov.f32 %ssa_45, 0F3c6ef372; // vec1 32 ssa_45 = load_const (0x3c6ef372 /* 0.014584 */)
bb_04	:  PC=0x2e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:319) mov.b32 %ssa_45_bits, 0F3c6ef372;
bb_04	:  PC=0x2e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:322) shl.b32 %ssa_46, %ssa_44, %ssa_25_bits; // vec1 32 ssa_46 = ishl ssa_44, ssa_25
bb_04	:  PC=0x2f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:325) add.s32 %ssa_47, %ssa_46, %ssa_27_bits; // vec1 32 ssa_47 = iadd ssa_46, ssa_27
bb_04	:  PC=0x2f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:328) add.s32 %ssa_48, %ssa_44, %ssa_45_bits; // vec1 32 ssa_48 = iadd ssa_44, ssa_45
bb_04	:  PC=0x300 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:331) xor.b32 %ssa_49, %ssa_47, %ssa_48;// vec1 32 ssa_49 = ixor ssa_47, ssa_48
bb_04	:  PC=0x308 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:334) shr.u32 %ssa_50, %ssa_44, %ssa_23_bits; // vec1 32 ssa_50 = ushr ssa_44, ssa_23
bb_04	:  PC=0x310 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:337) add.s32 %ssa_51, %ssa_50, %ssa_26_bits; // vec1 32 ssa_51 = iadd ssa_50, ssa_26
bb_04	:  PC=0x318 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:340) xor.b32 %ssa_52, %ssa_49, %ssa_51;// vec1 32 ssa_52 = ixor ssa_49, ssa_51
bb_04	:  PC=0x320 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:343) add.s32 %ssa_53, %ssa_36, %ssa_52;// vec1 32 ssa_53 = iadd ssa_36, ssa_52
bb_04	:  PC=0x328 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:346) shl.b32 %ssa_54, %ssa_53, %ssa_25_bits; // vec1 32 ssa_54 = ishl ssa_53, ssa_25
bb_04	:  PC=0x330 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:349) add.s32 %ssa_55, %ssa_54, %ssa_24_bits; // vec1 32 ssa_55 = iadd ssa_54, ssa_24
bb_04	:  PC=0x338 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:352) add.s32 %ssa_56, %ssa_53, %ssa_45_bits; // vec1 32 ssa_56 = iadd ssa_53, ssa_45
bb_04	:  PC=0x340 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:355) xor.b32 %ssa_57, %ssa_55, %ssa_56;// vec1 32 ssa_57 = ixor ssa_55, ssa_56
bb_04	:  PC=0x348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:358) shr.u32 %ssa_58, %ssa_53, %ssa_23_bits; // vec1 32 ssa_58 = ushr ssa_53, ssa_23
bb_04	:  PC=0x350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:361) add.s32 %ssa_59, %ssa_58, %ssa_22_bits; // vec1 32 ssa_59 = iadd ssa_58, ssa_22
bb_04	:  PC=0x358 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:364) xor.b32 %ssa_60, %ssa_57, %ssa_59;// vec1 32 ssa_60 = ixor ssa_57, ssa_59
bb_04	:  PC=0x360 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:367) add.s32 %ssa_61, %ssa_44, %ssa_60;// vec1 32 ssa_61 = iadd ssa_44, ssa_60
bb_04	:  PC=0x368 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:370) mov.f32 %ssa_62, 0Fdaa66d2b; // vec1 32 ssa_62 = load_const (0xdaa66d2b /* -23422438792495104.000000 */)
bb_04	:  PC=0x370 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:372) mov.b32 %ssa_62_bits, 0Fdaa66d2b;
bb_04	:  PC=0x378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:375) shl.b32 %ssa_63, %ssa_61, %ssa_25_bits; // vec1 32 ssa_63 = ishl ssa_61, ssa_25
bb_04	:  PC=0x380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:378) add.s32 %ssa_64, %ssa_63, %ssa_27_bits; // vec1 32 ssa_64 = iadd ssa_63, ssa_27
bb_04	:  PC=0x388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:381) add.s32 %ssa_65, %ssa_61, %ssa_62_bits; // vec1 32 ssa_65 = iadd ssa_61, ssa_62
bb_04	:  PC=0x390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:384) xor.b32 %ssa_66, %ssa_64, %ssa_65;// vec1 32 ssa_66 = ixor ssa_64, ssa_65
bb_04	:  PC=0x398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:387) shr.u32 %ssa_67, %ssa_61, %ssa_23_bits; // vec1 32 ssa_67 = ushr ssa_61, ssa_23
bb_04	:  PC=0x3a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:390) add.s32 %ssa_68, %ssa_67, %ssa_26_bits; // vec1 32 ssa_68 = iadd ssa_67, ssa_26
bb_04	:  PC=0x3a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:393) xor.b32 %ssa_69, %ssa_66, %ssa_68;// vec1 32 ssa_69 = ixor ssa_66, ssa_68
bb_04	:  PC=0x3b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:396) add.s32 %ssa_70, %ssa_53, %ssa_69;// vec1 32 ssa_70 = iadd ssa_53, ssa_69
bb_04	:  PC=0x3b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:399) shl.b32 %ssa_71, %ssa_70, %ssa_25_bits; // vec1 32 ssa_71 = ishl ssa_70, ssa_25
bb_04	:  PC=0x3c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:402) add.s32 %ssa_72, %ssa_71, %ssa_24_bits; // vec1 32 ssa_72 = iadd ssa_71, ssa_24
bb_04	:  PC=0x3c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:405) add.s32 %ssa_73, %ssa_70, %ssa_62_bits; // vec1 32 ssa_73 = iadd ssa_70, ssa_62
bb_04	:  PC=0x3d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:408) xor.b32 %ssa_74, %ssa_72, %ssa_73;// vec1 32 ssa_74 = ixor ssa_72, ssa_73
bb_04	:  PC=0x3d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:411) shr.u32 %ssa_75, %ssa_70, %ssa_23_bits; // vec1 32 ssa_75 = ushr ssa_70, ssa_23
bb_04	:  PC=0x3e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:414) add.s32 %ssa_76, %ssa_75, %ssa_22_bits; // vec1 32 ssa_76 = iadd ssa_75, ssa_22
bb_04	:  PC=0x3e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:417) xor.b32 %ssa_77, %ssa_74, %ssa_76;// vec1 32 ssa_77 = ixor ssa_74, ssa_76
bb_04	:  PC=0x3f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:420) add.s32 %ssa_78, %ssa_61, %ssa_77;// vec1 32 ssa_78 = iadd ssa_61, ssa_77
bb_04	:  PC=0x3f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:423) mov.f32 %ssa_79, 0F78dde6e4; // vec1 32 ssa_79 = load_const (0x78dde6e4 /* 36005644498940313824116215142940672.000000 */)
bb_04	:  PC=0x400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:425) mov.b32 %ssa_79_bits, 0F78dde6e4;
bb_04	:  PC=0x408 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:428) shl.b32 %ssa_80, %ssa_78, %ssa_25_bits; // vec1 32 ssa_80 = ishl ssa_78, ssa_25
bb_04	:  PC=0x410 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:431) add.s32 %ssa_81, %ssa_80, %ssa_27_bits; // vec1 32 ssa_81 = iadd ssa_80, ssa_27
bb_04	:  PC=0x418 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:434) add.s32 %ssa_82, %ssa_78, %ssa_79_bits; // vec1 32 ssa_82 = iadd ssa_78, ssa_79
bb_04	:  PC=0x420 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:437) xor.b32 %ssa_83, %ssa_81, %ssa_82;// vec1 32 ssa_83 = ixor ssa_81, ssa_82
bb_04	:  PC=0x428 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:440) shr.u32 %ssa_84, %ssa_78, %ssa_23_bits; // vec1 32 ssa_84 = ushr ssa_78, ssa_23
bb_04	:  PC=0x430 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:443) add.s32 %ssa_85, %ssa_84, %ssa_26_bits; // vec1 32 ssa_85 = iadd ssa_84, ssa_26
bb_04	:  PC=0x438 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:446) xor.b32 %ssa_86, %ssa_83, %ssa_85;// vec1 32 ssa_86 = ixor ssa_83, ssa_85
bb_04	:  PC=0x440 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:449) add.s32 %ssa_87, %ssa_70, %ssa_86;// vec1 32 ssa_87 = iadd ssa_70, ssa_86
bb_04	:  PC=0x448 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:452) shl.b32 %ssa_88, %ssa_87, %ssa_25_bits; // vec1 32 ssa_88 = ishl ssa_87, ssa_25
bb_04	:  PC=0x450 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:455) add.s32 %ssa_89, %ssa_88, %ssa_24_bits; // vec1 32 ssa_89 = iadd ssa_88, ssa_24
bb_04	:  PC=0x458 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:458) add.s32 %ssa_90, %ssa_87, %ssa_79_bits; // vec1 32 ssa_90 = iadd ssa_87, ssa_79
bb_04	:  PC=0x460 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:461) xor.b32 %ssa_91, %ssa_89, %ssa_90;// vec1 32 ssa_91 = ixor ssa_89, ssa_90
bb_04	:  PC=0x468 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:464) shr.u32 %ssa_92, %ssa_87, %ssa_23_bits; // vec1 32 ssa_92 = ushr ssa_87, ssa_23
bb_04	:  PC=0x470 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:467) add.s32 %ssa_93, %ssa_92, %ssa_22_bits; // vec1 32 ssa_93 = iadd ssa_92, ssa_22
bb_04	:  PC=0x478 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:470) xor.b32 %ssa_94, %ssa_91, %ssa_93;// vec1 32 ssa_94 = ixor ssa_91, ssa_93
bb_04	:  PC=0x480 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:473) add.s32 %ssa_95, %ssa_78, %ssa_94;// vec1 32 ssa_95 = iadd ssa_78, ssa_94
bb_04	:  PC=0x488 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:476) mov.f32 %ssa_96, 0F1715609d; // vec1 32 ssa_96 = load_const (0x1715609d /* 0.000000 */)
bb_04	:  PC=0x490 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:478) mov.b32 %ssa_96_bits, 0F1715609d;
bb_04	:  PC=0x498 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:481) shl.b32 %ssa_97, %ssa_95, %ssa_25_bits; // vec1 32 ssa_97 = ishl ssa_95, ssa_25
bb_04	:  PC=0x4a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:484) add.s32 %ssa_98, %ssa_97, %ssa_27_bits; // vec1 32 ssa_98 = iadd ssa_97, ssa_27
bb_04	:  PC=0x4a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:487) add.s32 %ssa_99, %ssa_95, %ssa_96_bits; // vec1 32 ssa_99 = iadd ssa_95, ssa_96
bb_04	:  PC=0x4b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:490) xor.b32 %ssa_100, %ssa_98, %ssa_99;// vec1 32 ssa_100 = ixor ssa_98, ssa_99
bb_04	:  PC=0x4b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:493) shr.u32 %ssa_101, %ssa_95, %ssa_23_bits; // vec1 32 ssa_101 = ushr ssa_95, ssa_23
bb_04	:  PC=0x4c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:496) add.s32 %ssa_102, %ssa_101, %ssa_26_bits; // vec1 32 ssa_102 = iadd ssa_101, ssa_26
bb_04	:  PC=0x4c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:499) xor.b32 %ssa_103, %ssa_100, %ssa_102;// vec1 32 ssa_103 = ixor ssa_100, ssa_102
bb_04	:  PC=0x4d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:502) add.s32 %ssa_104, %ssa_87, %ssa_103;// vec1 32 ssa_104 = iadd ssa_87, ssa_103
bb_04	:  PC=0x4d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:505) shl.b32 %ssa_105, %ssa_104, %ssa_25_bits; // vec1 32 ssa_105 = ishl ssa_104, ssa_25
bb_04	:  PC=0x4e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:508) add.s32 %ssa_106, %ssa_105, %ssa_24_bits; // vec1 32 ssa_106 = iadd ssa_105, ssa_24
bb_04	:  PC=0x4e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:511) add.s32 %ssa_107, %ssa_104, %ssa_96_bits; // vec1 32 ssa_107 = iadd ssa_104, ssa_96
bb_04	:  PC=0x4f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:514) xor.b32 %ssa_108, %ssa_106, %ssa_107;// vec1 32 ssa_108 = ixor ssa_106, ssa_107
bb_04	:  PC=0x4f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:517) shr.u32 %ssa_109, %ssa_104, %ssa_23_bits; // vec1 32 ssa_109 = ushr ssa_104, ssa_23
bb_04	:  PC=0x500 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:520) add.s32 %ssa_110, %ssa_109, %ssa_22_bits; // vec1 32 ssa_110 = iadd ssa_109, ssa_22
bb_04	:  PC=0x508 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:523) xor.b32 %ssa_111, %ssa_108, %ssa_110;// vec1 32 ssa_111 = ixor ssa_108, ssa_110
bb_04	:  PC=0x510 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:526) add.s32 %ssa_112, %ssa_95, %ssa_111;// vec1 32 ssa_112 = iadd ssa_95, ssa_111
bb_04	:  PC=0x518 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:529) mov.f32 %ssa_113, 0Fb54cda56; // vec1 32 ssa_113 = load_const (0xb54cda56 /* -0.000001 */)
bb_04	:  PC=0x520 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:531) mov.b32 %ssa_113_bits, 0Fb54cda56;
bb_04	:  PC=0x528 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:534) shl.b32 %ssa_114, %ssa_112, %ssa_25_bits; // vec1 32 ssa_114 = ishl ssa_112, ssa_25
bb_04	:  PC=0x530 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:537) add.s32 %ssa_115, %ssa_114, %ssa_27_bits; // vec1 32 ssa_115 = iadd ssa_114, ssa_27
bb_04	:  PC=0x538 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:540) add.s32 %ssa_116, %ssa_112, %ssa_113_bits; // vec1 32 ssa_116 = iadd ssa_112, ssa_113
bb_04	:  PC=0x540 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:543) xor.b32 %ssa_117, %ssa_115, %ssa_116;// vec1 32 ssa_117 = ixor ssa_115, ssa_116
bb_04	:  PC=0x548 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:546) shr.u32 %ssa_118, %ssa_112, %ssa_23_bits; // vec1 32 ssa_118 = ushr ssa_112, ssa_23
bb_04	:  PC=0x550 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:549) add.s32 %ssa_119, %ssa_118, %ssa_26_bits; // vec1 32 ssa_119 = iadd ssa_118, ssa_26
bb_04	:  PC=0x558 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:552) xor.b32 %ssa_120, %ssa_117, %ssa_119;// vec1 32 ssa_120 = ixor ssa_117, ssa_119
bb_04	:  PC=0x560 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:555) add.s32 %ssa_121, %ssa_104, %ssa_120;// vec1 32 ssa_121 = iadd ssa_104, ssa_120
bb_04	:  PC=0x568 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:558) shl.b32 %ssa_122, %ssa_121, %ssa_25_bits; // vec1 32 ssa_122 = ishl ssa_121, ssa_25
bb_04	:  PC=0x570 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:561) add.s32 %ssa_123, %ssa_122, %ssa_24_bits; // vec1 32 ssa_123 = iadd ssa_122, ssa_24
bb_04	:  PC=0x578 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:564) add.s32 %ssa_124, %ssa_121, %ssa_113_bits; // vec1 32 ssa_124 = iadd ssa_121, ssa_113
bb_04	:  PC=0x580 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:567) xor.b32 %ssa_125, %ssa_123, %ssa_124;// vec1 32 ssa_125 = ixor ssa_123, ssa_124
bb_04	:  PC=0x588 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:570) shr.u32 %ssa_126, %ssa_121, %ssa_23_bits; // vec1 32 ssa_126 = ushr ssa_121, ssa_23
bb_04	:  PC=0x590 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:573) add.s32 %ssa_127, %ssa_126, %ssa_22_bits; // vec1 32 ssa_127 = iadd ssa_126, ssa_22
bb_04	:  PC=0x598 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:576) xor.b32 %ssa_128, %ssa_125, %ssa_127;// vec1 32 ssa_128 = ixor ssa_125, ssa_127
bb_04	:  PC=0x5a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:579) add.s32 %ssa_129, %ssa_112, %ssa_128;// vec1 32 ssa_129 = iadd ssa_112, ssa_128
bb_04	:  PC=0x5a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:582) mov.f32 %ssa_130, 0F5384540f; // vec1 32 ssa_130 = load_const (0x5384540f /* 1136691904512.000000 */)
bb_04	:  PC=0x5b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:584) mov.b32 %ssa_130_bits, 0F5384540f;
bb_04	:  PC=0x5b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:587) shl.b32 %ssa_131, %ssa_129, %ssa_25_bits; // vec1 32 ssa_131 = ishl ssa_129, ssa_25
bb_04	:  PC=0x5c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:590) add.s32 %ssa_132, %ssa_131, %ssa_27_bits; // vec1 32 ssa_132 = iadd ssa_131, ssa_27
bb_04	:  PC=0x5c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:593) add.s32 %ssa_133, %ssa_129, %ssa_130_bits; // vec1 32 ssa_133 = iadd ssa_129, ssa_130
bb_04	:  PC=0x5d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:596) xor.b32 %ssa_134, %ssa_132, %ssa_133;// vec1 32 ssa_134 = ixor ssa_132, ssa_133
bb_04	:  PC=0x5d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:599) shr.u32 %ssa_135, %ssa_129, %ssa_23_bits; // vec1 32 ssa_135 = ushr ssa_129, ssa_23
bb_04	:  PC=0x5e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:602) add.s32 %ssa_136, %ssa_135, %ssa_26_bits; // vec1 32 ssa_136 = iadd ssa_135, ssa_26
bb_04	:  PC=0x5e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:605) xor.b32 %ssa_137, %ssa_134, %ssa_136;// vec1 32 ssa_137 = ixor ssa_134, ssa_136
bb_04	:  PC=0x5f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:608) add.s32 %ssa_138, %ssa_121, %ssa_137;// vec1 32 ssa_138 = iadd ssa_121, ssa_137
bb_04	:  PC=0x5f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:611) shl.b32 %ssa_139, %ssa_138, %ssa_25_bits; // vec1 32 ssa_139 = ishl ssa_138, ssa_25
bb_04	:  PC=0x600 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:614) add.s32 %ssa_140, %ssa_139, %ssa_24_bits; // vec1 32 ssa_140 = iadd ssa_139, ssa_24
bb_04	:  PC=0x608 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:617) add.s32 %ssa_141, %ssa_138, %ssa_130_bits; // vec1 32 ssa_141 = iadd ssa_138, ssa_130
bb_04	:  PC=0x610 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:620) xor.b32 %ssa_142, %ssa_140, %ssa_141;// vec1 32 ssa_142 = ixor ssa_140, ssa_141
bb_04	:  PC=0x618 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:623) shr.u32 %ssa_143, %ssa_138, %ssa_23_bits; // vec1 32 ssa_143 = ushr ssa_138, ssa_23
bb_04	:  PC=0x620 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:626) add.s32 %ssa_144, %ssa_143, %ssa_22_bits; // vec1 32 ssa_144 = iadd ssa_143, ssa_22
bb_04	:  PC=0x628 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:629) xor.b32 %ssa_145, %ssa_142, %ssa_144;// vec1 32 ssa_145 = ixor ssa_142, ssa_144
bb_04	:  PC=0x630 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:632) add.s32 %ssa_146, %ssa_129, %ssa_145;// vec1 32 ssa_146 = iadd ssa_129, ssa_145
bb_04	:  PC=0x638 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:635) mov.f32 %ssa_147, 0Ff1bbcdc8; // vec1 32 ssa_147 = load_const (0xf1bbcdc8 /* -1859919075293091224364530008064.000000 */)
bb_04	:  PC=0x640 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:637) mov.b32 %ssa_147_bits, 0Ff1bbcdc8;
bb_04	:  PC=0x648 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:640) shl.b32 %ssa_148, %ssa_146, %ssa_25_bits; // vec1 32 ssa_148 = ishl ssa_146, ssa_25
bb_04	:  PC=0x650 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:643) add.s32 %ssa_149, %ssa_148, %ssa_27_bits; // vec1 32 ssa_149 = iadd ssa_148, ssa_27
bb_04	:  PC=0x658 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:646) add.s32 %ssa_150, %ssa_146, %ssa_147_bits; // vec1 32 ssa_150 = iadd ssa_146, ssa_147
bb_04	:  PC=0x660 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:649) xor.b32 %ssa_151, %ssa_149, %ssa_150;// vec1 32 ssa_151 = ixor ssa_149, ssa_150
bb_04	:  PC=0x668 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:652) shr.u32 %ssa_152, %ssa_146, %ssa_23_bits; // vec1 32 ssa_152 = ushr ssa_146, ssa_23
bb_04	:  PC=0x670 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:655) add.s32 %ssa_153, %ssa_152, %ssa_26_bits; // vec1 32 ssa_153 = iadd ssa_152, ssa_26
bb_04	:  PC=0x678 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:658) xor.b32 %ssa_154, %ssa_151, %ssa_153;// vec1 32 ssa_154 = ixor ssa_151, ssa_153
bb_04	:  PC=0x680 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:661) add.s32 %ssa_155, %ssa_138, %ssa_154;// vec1 32 ssa_155 = iadd ssa_138, ssa_154
bb_04	:  PC=0x688 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:664) shl.b32 %ssa_156, %ssa_155, %ssa_25_bits; // vec1 32 ssa_156 = ishl ssa_155, ssa_25
bb_04	:  PC=0x690 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:667) add.s32 %ssa_157, %ssa_156, %ssa_24_bits; // vec1 32 ssa_157 = iadd ssa_156, ssa_24
bb_04	:  PC=0x698 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:670) add.s32 %ssa_158, %ssa_155, %ssa_147_bits; // vec1 32 ssa_158 = iadd ssa_155, ssa_147
bb_04	:  PC=0x6a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:673) xor.b32 %ssa_159, %ssa_157, %ssa_158;// vec1 32 ssa_159 = ixor ssa_157, ssa_158
bb_04	:  PC=0x6a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:676) shr.u32 %ssa_160, %ssa_155, %ssa_23_bits; // vec1 32 ssa_160 = ushr ssa_155, ssa_23
bb_04	:  PC=0x6b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:679) add.s32 %ssa_161, %ssa_160, %ssa_22_bits; // vec1 32 ssa_161 = iadd ssa_160, ssa_22
bb_04	:  PC=0x6b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:682) xor.b32 %ssa_162, %ssa_159, %ssa_161;// vec1 32 ssa_162 = ixor ssa_159, ssa_161
bb_04	:  PC=0x6c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:685) add.s32 %ssa_163, %ssa_146, %ssa_162;// vec1 32 ssa_163 = iadd ssa_146, ssa_162
bb_04	:  PC=0x6c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:688) mov.f32 %ssa_164, 0F8ff34781; // vec1 32 ssa_164 = load_const (0x8ff34781 /* -0.000000 */)
bb_04	:  PC=0x6d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:690) mov.b32 %ssa_164_bits, 0F8ff34781;
bb_04	:  PC=0x6d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:693) shl.b32 %ssa_165, %ssa_163, %ssa_25_bits; // vec1 32 ssa_165 = ishl ssa_163, ssa_25
bb_04	:  PC=0x6e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:696) add.s32 %ssa_166, %ssa_165, %ssa_27_bits; // vec1 32 ssa_166 = iadd ssa_165, ssa_27
bb_04	:  PC=0x6e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:699) add.s32 %ssa_167, %ssa_163, %ssa_164_bits; // vec1 32 ssa_167 = iadd ssa_163, ssa_164
bb_04	:  PC=0x6f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:702) xor.b32 %ssa_168, %ssa_166, %ssa_167;// vec1 32 ssa_168 = ixor ssa_166, ssa_167
bb_04	:  PC=0x6f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:705) shr.u32 %ssa_169, %ssa_163, %ssa_23_bits; // vec1 32 ssa_169 = ushr ssa_163, ssa_23
bb_04	:  PC=0x700 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:708) add.s32 %ssa_170, %ssa_169, %ssa_26_bits; // vec1 32 ssa_170 = iadd ssa_169, ssa_26
bb_04	:  PC=0x708 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:711) xor.b32 %ssa_171, %ssa_168, %ssa_170;// vec1 32 ssa_171 = ixor ssa_168, ssa_170
bb_04	:  PC=0x710 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:714) add.s32 %ssa_172, %ssa_155, %ssa_171;// vec1 32 ssa_172 = iadd ssa_155, ssa_171
bb_04	:  PC=0x718 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:717) shl.b32 %ssa_173, %ssa_172, %ssa_25_bits; // vec1 32 ssa_173 = ishl ssa_172, ssa_25
bb_04	:  PC=0x720 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:720) add.s32 %ssa_174, %ssa_173, %ssa_24_bits; // vec1 32 ssa_174 = iadd ssa_173, ssa_24
bb_04	:  PC=0x728 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:723) add.s32 %ssa_175, %ssa_172, %ssa_164_bits; // vec1 32 ssa_175 = iadd ssa_172, ssa_164
bb_04	:  PC=0x730 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:726) xor.b32 %ssa_176, %ssa_174, %ssa_175;// vec1 32 ssa_176 = ixor ssa_174, ssa_175
bb_04	:  PC=0x738 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:729) shr.u32 %ssa_177, %ssa_172, %ssa_23_bits; // vec1 32 ssa_177 = ushr ssa_172, ssa_23
bb_04	:  PC=0x740 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:732) add.s32 %ssa_178, %ssa_177, %ssa_22_bits; // vec1 32 ssa_178 = iadd ssa_177, ssa_22
bb_04	:  PC=0x748 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:735) xor.b32 %ssa_179, %ssa_176, %ssa_178;// vec1 32 ssa_179 = ixor ssa_176, ssa_178
bb_04	:  PC=0x750 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:738) add.s32 %ssa_180, %ssa_163, %ssa_179;// vec1 32 ssa_180 = iadd ssa_163, ssa_179
bb_04	:  PC=0x758 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:741) mov.f32 %ssa_181, 0F2e2ac13a; // vec1 32 ssa_181 = load_const (0x2e2ac13a /* 0.000000 */)
bb_04	:  PC=0x760 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:743) mov.b32 %ssa_181_bits, 0F2e2ac13a;
bb_04	:  PC=0x768 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:746) shl.b32 %ssa_182, %ssa_180, %ssa_25_bits; // vec1 32 ssa_182 = ishl ssa_180, ssa_25
bb_04	:  PC=0x770 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:749) add.s32 %ssa_183, %ssa_182, %ssa_27_bits; // vec1 32 ssa_183 = iadd ssa_182, ssa_27
bb_04	:  PC=0x778 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:752) add.s32 %ssa_184, %ssa_180, %ssa_181_bits; // vec1 32 ssa_184 = iadd ssa_180, ssa_181
bb_04	:  PC=0x780 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:755) xor.b32 %ssa_185, %ssa_183, %ssa_184;// vec1 32 ssa_185 = ixor ssa_183, ssa_184
bb_04	:  PC=0x788 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:758) shr.u32 %ssa_186, %ssa_180, %ssa_23_bits; // vec1 32 ssa_186 = ushr ssa_180, ssa_23
bb_04	:  PC=0x790 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:761) add.s32 %ssa_187, %ssa_186, %ssa_26_bits; // vec1 32 ssa_187 = iadd ssa_186, ssa_26
bb_04	:  PC=0x798 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:764) xor.b32 %ssa_188, %ssa_185, %ssa_187;// vec1 32 ssa_188 = ixor ssa_185, ssa_187
bb_04	:  PC=0x7a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:767) add.s32 %ssa_189, %ssa_172, %ssa_188;// vec1 32 ssa_189 = iadd ssa_172, ssa_188
bb_04	:  PC=0x7a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:770) shl.b32 %ssa_190, %ssa_189, %ssa_25_bits; // vec1 32 ssa_190 = ishl ssa_189, ssa_25
bb_04	:  PC=0x7b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:773) add.s32 %ssa_191, %ssa_190, %ssa_24_bits; // vec1 32 ssa_191 = iadd ssa_190, ssa_24
bb_04	:  PC=0x7b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:776) add.s32 %ssa_192, %ssa_189, %ssa_181_bits; // vec1 32 ssa_192 = iadd ssa_189, ssa_181
bb_04	:  PC=0x7c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:779) xor.b32 %ssa_193, %ssa_191, %ssa_192;// vec1 32 ssa_193 = ixor ssa_191, ssa_192
bb_04	:  PC=0x7c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:782) shr.u32 %ssa_194, %ssa_189, %ssa_23_bits; // vec1 32 ssa_194 = ushr ssa_189, ssa_23
bb_04	:  PC=0x7d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:785) add.s32 %ssa_195, %ssa_194, %ssa_22_bits; // vec1 32 ssa_195 = iadd ssa_194, ssa_22
bb_04	:  PC=0x7d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:788) xor.b32 %ssa_196, %ssa_193, %ssa_195;// vec1 32 ssa_196 = ixor ssa_193, ssa_195
bb_04	:  PC=0x7e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:791) add.s32 %ssa_197, %ssa_180, %ssa_196;// vec1 32 ssa_197 = iadd ssa_180, ssa_196
bb_04	:  PC=0x7e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:794) mov.f32 %ssa_198, 0Fcc623af3; // vec1 32 ssa_198 = load_const (0xcc623af3 /* -59304908.000000 */)
bb_04	:  PC=0x7f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:796) mov.b32 %ssa_198_bits, 0Fcc623af3;
bb_04	:  PC=0x7f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:799) shl.b32 %ssa_199, %ssa_197, %ssa_25_bits; // vec1 32 ssa_199 = ishl ssa_197, ssa_25
bb_04	:  PC=0x800 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:802) add.s32 %ssa_200, %ssa_199, %ssa_27_bits; // vec1 32 ssa_200 = iadd ssa_199, ssa_27
bb_04	:  PC=0x808 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:805) add.s32 %ssa_201, %ssa_197, %ssa_198_bits; // vec1 32 ssa_201 = iadd ssa_197, ssa_198
bb_04	:  PC=0x810 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:808) xor.b32 %ssa_202, %ssa_200, %ssa_201;// vec1 32 ssa_202 = ixor ssa_200, ssa_201
bb_04	:  PC=0x818 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:811) shr.u32 %ssa_203, %ssa_197, %ssa_23_bits; // vec1 32 ssa_203 = ushr ssa_197, ssa_23
bb_04	:  PC=0x820 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:814) add.s32 %ssa_204, %ssa_203, %ssa_26_bits; // vec1 32 ssa_204 = iadd ssa_203, ssa_26
bb_04	:  PC=0x828 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:817) xor.b32 %ssa_205, %ssa_202, %ssa_204;// vec1 32 ssa_205 = ixor ssa_202, ssa_204
bb_04	:  PC=0x830 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:820) add.s32 %ssa_206, %ssa_189, %ssa_205;// vec1 32 ssa_206 = iadd ssa_189, ssa_205
bb_04	:  PC=0x838 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:823) shl.b32 %ssa_207, %ssa_206, %ssa_25_bits; // vec1 32 ssa_207 = ishl ssa_206, ssa_25
bb_04	:  PC=0x840 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:826) add.s32 %ssa_208, %ssa_207, %ssa_24_bits; // vec1 32 ssa_208 = iadd ssa_207, ssa_24
bb_04	:  PC=0x848 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:829) add.s32 %ssa_209, %ssa_206, %ssa_198_bits; // vec1 32 ssa_209 = iadd ssa_206, ssa_198
bb_04	:  PC=0x850 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:832) xor.b32 %ssa_210, %ssa_208, %ssa_209;// vec1 32 ssa_210 = ixor ssa_208, ssa_209
bb_04	:  PC=0x858 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:835) shr.u32 %ssa_211, %ssa_206, %ssa_23_bits; // vec1 32 ssa_211 = ushr ssa_206, ssa_23
bb_04	:  PC=0x860 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:838) add.s32 %ssa_212, %ssa_211, %ssa_22_bits; // vec1 32 ssa_212 = iadd ssa_211, ssa_22
bb_04	:  PC=0x868 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:841) xor.b32 %ssa_213, %ssa_210, %ssa_212;// vec1 32 ssa_213 = ixor ssa_210, ssa_212
bb_04	:  PC=0x870 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:844) add.s32 %ssa_214, %ssa_197, %ssa_213;// vec1 32 ssa_214 = iadd ssa_197, ssa_213
bb_04	:  PC=0x878 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:847) mov.f32 %ssa_215, 0F6a99b4ac; // vec1 32 ssa_215 = load_const (0x6a99b4ac /* 92909424603967738955694080.000000 */)
bb_04	:  PC=0x880 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:849) mov.b32 %ssa_215_bits, 0F6a99b4ac;
bb_04	:  PC=0x888 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:852) shl.b32 %ssa_216, %ssa_214, %ssa_25_bits; // vec1 32 ssa_216 = ishl ssa_214, ssa_25
bb_04	:  PC=0x890 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:855) add.s32 %ssa_217, %ssa_216, %ssa_27_bits; // vec1 32 ssa_217 = iadd ssa_216, ssa_27
bb_04	:  PC=0x898 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:858) add.s32 %ssa_218, %ssa_214, %ssa_215_bits; // vec1 32 ssa_218 = iadd ssa_214, ssa_215
bb_04	:  PC=0x8a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:861) xor.b32 %ssa_219, %ssa_217, %ssa_218;// vec1 32 ssa_219 = ixor ssa_217, ssa_218
bb_04	:  PC=0x8a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:864) shr.u32 %ssa_220, %ssa_214, %ssa_23_bits; // vec1 32 ssa_220 = ushr ssa_214, ssa_23
bb_04	:  PC=0x8b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:867) add.s32 %ssa_221, %ssa_220, %ssa_26_bits; // vec1 32 ssa_221 = iadd ssa_220, ssa_26
bb_04	:  PC=0x8b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:870) xor.b32 %ssa_222, %ssa_219, %ssa_221;// vec1 32 ssa_222 = ixor ssa_219, ssa_221
bb_04	:  PC=0x8c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:873) add.s32 %ssa_223, %ssa_206, %ssa_222;// vec1 32 ssa_223 = iadd ssa_206, ssa_222
bb_04	:  PC=0x8c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:876) shl.b32 %ssa_224, %ssa_223, %ssa_25_bits; // vec1 32 ssa_224 = ishl ssa_223, ssa_25
bb_04	:  PC=0x8d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:879) add.s32 %ssa_225, %ssa_224, %ssa_24_bits; // vec1 32 ssa_225 = iadd ssa_224, ssa_24
bb_04	:  PC=0x8d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:882) add.s32 %ssa_226, %ssa_223, %ssa_215_bits; // vec1 32 ssa_226 = iadd ssa_223, ssa_215
bb_04	:  PC=0x8e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:885) xor.b32 %ssa_227, %ssa_225, %ssa_226;// vec1 32 ssa_227 = ixor ssa_225, ssa_226
bb_04	:  PC=0x8e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:888) shr.u32 %ssa_228, %ssa_223, %ssa_23_bits; // vec1 32 ssa_228 = ushr ssa_223, ssa_23
bb_04	:  PC=0x8f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:891) add.s32 %ssa_229, %ssa_228, %ssa_22_bits; // vec1 32 ssa_229 = iadd ssa_228, ssa_22
bb_04	:  PC=0x8f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:894) xor.b32 %ssa_230, %ssa_227, %ssa_229;// vec1 32 ssa_230 = ixor ssa_227, ssa_229
bb_04	:  PC=0x900 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:897) add.s32 %ssa_231, %ssa_214, %ssa_230;// vec1 32 ssa_231 = iadd ssa_214, ssa_230
bb_04	:  PC=0x908 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:900) mov.f32 %ssa_232, 0F08d12e65; // vec1 32 ssa_232 = load_const (0x08d12e65 /* 0.000000 */)
bb_04	:  PC=0x910 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:902) mov.b32 %ssa_232_bits, 0F08d12e65;
bb_04	:  PC=0x918 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:905) shl.b32 %ssa_233, %ssa_231, %ssa_25_bits; // vec1 32 ssa_233 = ishl ssa_231, ssa_25
bb_04	:  PC=0x920 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:908) add.s32 %ssa_234, %ssa_233, %ssa_27_bits; // vec1 32 ssa_234 = iadd ssa_233, ssa_27
bb_04	:  PC=0x928 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:911) add.s32 %ssa_235, %ssa_231, %ssa_232_bits; // vec1 32 ssa_235 = iadd ssa_231, ssa_232
bb_04	:  PC=0x930 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:914) xor.b32 %ssa_236, %ssa_234, %ssa_235;// vec1 32 ssa_236 = ixor ssa_234, ssa_235
bb_04	:  PC=0x938 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:917) shr.u32 %ssa_237, %ssa_231, %ssa_23_bits; // vec1 32 ssa_237 = ushr ssa_231, ssa_23
bb_04	:  PC=0x940 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:920) add.s32 %ssa_238, %ssa_237, %ssa_26_bits; // vec1 32 ssa_238 = iadd ssa_237, ssa_26
bb_04	:  PC=0x948 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:923) xor.b32 %ssa_239, %ssa_236, %ssa_238;// vec1 32 ssa_239 = ixor ssa_236, ssa_238
bb_04	:  PC=0x950 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:926) add.s32 %ssa_240, %ssa_223, %ssa_239;// vec1 32 ssa_240 = iadd ssa_223, ssa_239
bb_04	:  PC=0x958 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:929) shl.b32 %ssa_241, %ssa_240, %ssa_25_bits; // vec1 32 ssa_241 = ishl ssa_240, ssa_25
bb_04	:  PC=0x960 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:932) add.s32 %ssa_242, %ssa_241, %ssa_24_bits; // vec1 32 ssa_242 = iadd ssa_241, ssa_24
bb_04	:  PC=0x968 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:935) add.s32 %ssa_243, %ssa_240, %ssa_232_bits; // vec1 32 ssa_243 = iadd ssa_240, ssa_232
bb_04	:  PC=0x970 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:938) xor.b32 %ssa_244, %ssa_242, %ssa_243;// vec1 32 ssa_244 = ixor ssa_242, ssa_243
bb_04	:  PC=0x978 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:941) shr.u32 %ssa_245, %ssa_240, %ssa_23_bits; // vec1 32 ssa_245 = ushr ssa_240, ssa_23
bb_04	:  PC=0x980 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:944) add.s32 %ssa_246, %ssa_245, %ssa_22_bits; // vec1 32 ssa_246 = iadd ssa_245, ssa_22
bb_04	:  PC=0x988 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:947) xor.b32 %ssa_247, %ssa_244, %ssa_246;// vec1 32 ssa_247 = ixor ssa_244, ssa_246
bb_04	:  PC=0x990 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:950) add.s32 %ssa_248, %ssa_231, %ssa_247;// vec1 32 ssa_248 = iadd ssa_231, ssa_247
bb_04	:  PC=0x998 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:953) mov.f32 %ssa_249, 0Fa708a81e; // vec1 32 ssa_249 = load_const (0xa708a81e /* -0.000000 */)
bb_04	:  PC=0x9a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:955) mov.b32 %ssa_249_bits, 0Fa708a81e;
bb_04	:  PC=0x9a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:958) shl.b32 %ssa_250, %ssa_248, %ssa_25_bits; // vec1 32 ssa_250 = ishl ssa_248, ssa_25
bb_04	:  PC=0x9b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:961) add.s32 %ssa_251, %ssa_250, %ssa_27_bits; // vec1 32 ssa_251 = iadd ssa_250, ssa_27
bb_04	:  PC=0x9b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:964) add.s32 %ssa_252, %ssa_248, %ssa_249_bits; // vec1 32 ssa_252 = iadd ssa_248, ssa_249
bb_04	:  PC=0x9c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:967) xor.b32 %ssa_253, %ssa_251, %ssa_252;// vec1 32 ssa_253 = ixor ssa_251, ssa_252
bb_04	:  PC=0x9c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:970) shr.u32 %ssa_254, %ssa_248, %ssa_23_bits; // vec1 32 ssa_254 = ushr ssa_248, ssa_23
bb_04	:  PC=0x9d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:973) add.s32 %ssa_255, %ssa_254, %ssa_26_bits; // vec1 32 ssa_255 = iadd ssa_254, ssa_26
bb_04	:  PC=0x9d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:976) xor.b32 %ssa_256, %ssa_253, %ssa_255;// vec1 32 ssa_256 = ixor ssa_253, ssa_255
bb_04	:  PC=0x9e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:979) add.s32 %ssa_257, %ssa_240, %ssa_256;// vec1 32 ssa_257 = iadd ssa_240, ssa_256
bb_04	:  PC=0x9e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:982) shl.b32 %ssa_258, %ssa_257, %ssa_25_bits; // vec1 32 ssa_258 = ishl ssa_257, ssa_25
bb_04	:  PC=0x9f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:985) add.s32 %ssa_259, %ssa_258, %ssa_24_bits; // vec1 32 ssa_259 = iadd ssa_258, ssa_24
bb_04	:  PC=0x9f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:988) add.s32 %ssa_260, %ssa_257, %ssa_249_bits; // vec1 32 ssa_260 = iadd ssa_257, ssa_249
bb_04	:  PC=0xa00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:991) xor.b32 %ssa_261, %ssa_259, %ssa_260;// vec1 32 ssa_261 = ixor ssa_259, ssa_260
bb_04	:  PC=0xa08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:994) shr.u32 %ssa_262, %ssa_257, %ssa_23_bits; // vec1 32 ssa_262 = ushr ssa_257, ssa_23
bb_04	:  PC=0xa10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:997) add.s32 %ssa_263, %ssa_262, %ssa_22_bits; // vec1 32 ssa_263 = iadd ssa_262, ssa_22
bb_04	:  PC=0xa18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1000) xor.b32 %ssa_264, %ssa_261, %ssa_263;// vec1 32 ssa_264 = ixor ssa_261, ssa_263
bb_04	:  PC=0xa20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1003) add.s32 %ssa_265, %ssa_248, %ssa_264;// vec1 32 ssa_265 = iadd ssa_248, ssa_264
bb_04	:  PC=0xa28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1006) mov.f32 %ssa_266, 0F454021d7; // vec1 32 ssa_266 = load_const (0x454021d7 /* 3074.114990 */)
bb_04	:  PC=0xa30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1008) mov.b32 %ssa_266_bits, 0F454021d7;
bb_04	:  PC=0xa38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1011) shl.b32 %ssa_267, %ssa_265, %ssa_25_bits; // vec1 32 ssa_267 = ishl ssa_265, ssa_25
bb_04	:  PC=0xa40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1014) add.s32 %ssa_268, %ssa_267, %ssa_27_bits; // vec1 32 ssa_268 = iadd ssa_267, ssa_27
bb_04	:  PC=0xa48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1017) add.s32 %ssa_269, %ssa_265, %ssa_266_bits; // vec1 32 ssa_269 = iadd ssa_265, ssa_266
bb_04	:  PC=0xa50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1020) xor.b32 %ssa_270, %ssa_268, %ssa_269;// vec1 32 ssa_270 = ixor ssa_268, ssa_269
bb_04	:  PC=0xa58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1023) shr.u32 %ssa_271, %ssa_265, %ssa_23_bits; // vec1 32 ssa_271 = ushr ssa_265, ssa_23
bb_04	:  PC=0xa60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1026) add.s32 %ssa_272, %ssa_271, %ssa_26_bits; // vec1 32 ssa_272 = iadd ssa_271, ssa_26
bb_04	:  PC=0xa68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1029) xor.b32 %ssa_273, %ssa_270, %ssa_272;// vec1 32 ssa_273 = ixor ssa_270, ssa_272
bb_04	:  PC=0xa70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1032) add.s32 %ssa_274, %ssa_257, %ssa_273;// vec1 32 ssa_274 = iadd ssa_257, ssa_273
bb_04	:  PC=0xa78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1035) shl.b32 %ssa_275, %ssa_274, %ssa_25_bits; // vec1 32 ssa_275 = ishl ssa_274, ssa_25
bb_04	:  PC=0xa80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1038) add.s32 %ssa_276, %ssa_275, %ssa_24_bits; // vec1 32 ssa_276 = iadd ssa_275, ssa_24
bb_04	:  PC=0xa88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1041) add.s32 %ssa_277, %ssa_274, %ssa_266_bits; // vec1 32 ssa_277 = iadd ssa_274, ssa_266
bb_04	:  PC=0xa90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1044) xor.b32 %ssa_278, %ssa_276, %ssa_277;// vec1 32 ssa_278 = ixor ssa_276, ssa_277
bb_04	:  PC=0xa98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1047) shr.u32 %ssa_279, %ssa_274, %ssa_23_bits; // vec1 32 ssa_279 = ushr ssa_274, ssa_23
bb_04	:  PC=0xaa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1050) add.s32 %ssa_280, %ssa_279, %ssa_22_bits; // vec1 32 ssa_280 = iadd ssa_279, ssa_22
bb_04	:  PC=0xaa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1053) xor.b32 %ssa_281, %ssa_278, %ssa_280;// vec1 32 ssa_281 = ixor ssa_278, ssa_280
bb_04	:  PC=0xab0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1056) add.s32 %ssa_282, %ssa_265, %ssa_281;// vec1 32 ssa_282 = iadd ssa_265, ssa_281
bb_04	:  PC=0xab8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1059) mov.f32 %ssa_283, 0Fe3779b90; // vec1 32 ssa_283 = load_const (0xe3779b90 /* -4567555245678784413696.000000 */)
bb_04	:  PC=0xac0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1061) mov.b32 %ssa_283_bits, 0Fe3779b90;
bb_04	:  PC=0xac8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1064) shl.b32 %ssa_284, %ssa_282, %ssa_25_bits; // vec1 32 ssa_284 = ishl ssa_282, ssa_25
bb_04	:  PC=0xad0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1067) add.s32 %ssa_285, %ssa_284, %ssa_27_bits; // vec1 32 ssa_285 = iadd ssa_284, ssa_27
bb_04	:  PC=0xad8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1070) add.s32 %ssa_286, %ssa_282, %ssa_283_bits; // vec1 32 ssa_286 = iadd ssa_282, ssa_283
bb_04	:  PC=0xae0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1073) xor.b32 %ssa_287, %ssa_285, %ssa_286;// vec1 32 ssa_287 = ixor ssa_285, ssa_286
bb_04	:  PC=0xae8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1076) shr.u32 %ssa_288, %ssa_282, %ssa_23_bits; // vec1 32 ssa_288 = ushr ssa_282, ssa_23
bb_04	:  PC=0xaf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1079) add.s32 %ssa_289, %ssa_288, %ssa_26_bits; // vec1 32 ssa_289 = iadd ssa_288, ssa_26
bb_04	:  PC=0xaf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1082) xor.b32 %ssa_290, %ssa_287, %ssa_289;// vec1 32 ssa_290 = ixor ssa_287, ssa_289
bb_04	:  PC=0xb00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1085) add.s32 %ssa_291, %ssa_274, %ssa_290;// vec1 32 ssa_291 = iadd ssa_274, ssa_290
bb_04	:  PC=0xb08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1088) add.u64 %ssa_292, %ssa_18, 284; // vec2 32 ssa_292 = deref_struct &ssa_18->TotalNumberOfSamples (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.TotalNumberOfSamples */
bb_04	:  PC=0xb10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1091) ld.global.u32 %ssa_293, [%ssa_292]; // vec1 32 ssa_293 = intrinsic load_deref (%ssa_292) (0) /* access=0 */
bb_04	:  PC=0xb18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1094) shl.b32 %ssa_294, %ssa_293, %ssa_25_bits; // vec1 32 ssa_294 = ishl ssa_293, ssa_25
bb_04	:  PC=0xb20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1097) add.s32 %ssa_295, %ssa_294, %ssa_27_bits; // vec1 32 ssa_295 = iadd ssa_294, ssa_27
bb_04	:  PC=0xb28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1100) add.s32 %ssa_296, %ssa_293, %ssa_28_bits; // vec1 32 ssa_296 = iadd ssa_293, ssa_28
bb_04	:  PC=0xb30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1103) xor.b32 %ssa_297, %ssa_295, %ssa_296;// vec1 32 ssa_297 = ixor ssa_295, ssa_296
bb_04	:  PC=0xb38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1106) shr.u32 %ssa_298, %ssa_293, %ssa_23_bits; // vec1 32 ssa_298 = ushr ssa_293, ssa_23
bb_04	:  PC=0xb40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1109) add.s32 %ssa_299, %ssa_298, %ssa_26_bits; // vec1 32 ssa_299 = iadd ssa_298, ssa_26
bb_04	:  PC=0xb48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1112) xor.b32 %ssa_300, %ssa_297, %ssa_299;// vec1 32 ssa_300 = ixor ssa_297, ssa_299
bb_04	:  PC=0xb50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1115) add.s32 %ssa_301, %ssa_291, %ssa_300;// vec1 32 ssa_301 = iadd ssa_291, ssa_300
bb_04	:  PC=0xb58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1118) shl.b32 %ssa_302, %ssa_301, %ssa_25_bits; // vec1 32 ssa_302 = ishl ssa_301, ssa_25
bb_04	:  PC=0xb60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1121) add.s32 %ssa_303, %ssa_302, %ssa_24_bits; // vec1 32 ssa_303 = iadd ssa_302, ssa_24
bb_04	:  PC=0xb68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1124) add.s32 %ssa_304, %ssa_301, %ssa_28_bits; // vec1 32 ssa_304 = iadd ssa_301, ssa_28
bb_04	:  PC=0xb70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1127) xor.b32 %ssa_305, %ssa_303, %ssa_304;// vec1 32 ssa_305 = ixor ssa_303, ssa_304
bb_04	:  PC=0xb78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1130) shr.u32 %ssa_306, %ssa_301, %ssa_23_bits; // vec1 32 ssa_306 = ushr ssa_301, ssa_23
bb_04	:  PC=0xb80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1133) add.s32 %ssa_307, %ssa_306, %ssa_22_bits; // vec1 32 ssa_307 = iadd ssa_306, ssa_22
bb_04	:  PC=0xb88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1136) xor.b32 %ssa_308, %ssa_305, %ssa_307;// vec1 32 ssa_308 = ixor ssa_305, ssa_307
bb_04	:  PC=0xb90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1139) add.s32 %ssa_309, %ssa_293, %ssa_308;// vec1 32 ssa_309 = iadd ssa_293, ssa_308
bb_04	:  PC=0xb98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1142) shl.b32 %ssa_310, %ssa_309, %ssa_25_bits; // vec1 32 ssa_310 = ishl ssa_309, ssa_25
bb_04	:  PC=0xba0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1145) add.s32 %ssa_311, %ssa_310, %ssa_27_bits; // vec1 32 ssa_311 = iadd ssa_310, ssa_27
bb_04	:  PC=0xba8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1148) add.s32 %ssa_312, %ssa_309, %ssa_45_bits; // vec1 32 ssa_312 = iadd ssa_309, ssa_45
bb_04	:  PC=0xbb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1151) xor.b32 %ssa_313, %ssa_311, %ssa_312;// vec1 32 ssa_313 = ixor ssa_311, ssa_312
bb_04	:  PC=0xbb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1154) shr.u32 %ssa_314, %ssa_309, %ssa_23_bits; // vec1 32 ssa_314 = ushr ssa_309, ssa_23
bb_04	:  PC=0xbc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1157) add.s32 %ssa_315, %ssa_314, %ssa_26_bits; // vec1 32 ssa_315 = iadd ssa_314, ssa_26
bb_04	:  PC=0xbc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1160) xor.b32 %ssa_316, %ssa_313, %ssa_315;// vec1 32 ssa_316 = ixor ssa_313, ssa_315
bb_04	:  PC=0xbd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1163) add.s32 %ssa_317, %ssa_301, %ssa_316;// vec1 32 ssa_317 = iadd ssa_301, ssa_316
bb_04	:  PC=0xbd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1166) shl.b32 %ssa_318, %ssa_317, %ssa_25_bits; // vec1 32 ssa_318 = ishl ssa_317, ssa_25
bb_04	:  PC=0xbe0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1169) add.s32 %ssa_319, %ssa_318, %ssa_24_bits; // vec1 32 ssa_319 = iadd ssa_318, ssa_24
bb_04	:  PC=0xbe8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1172) add.s32 %ssa_320, %ssa_317, %ssa_45_bits; // vec1 32 ssa_320 = iadd ssa_317, ssa_45
bb_04	:  PC=0xbf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1175) xor.b32 %ssa_321, %ssa_319, %ssa_320;// vec1 32 ssa_321 = ixor ssa_319, ssa_320
bb_04	:  PC=0xbf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1178) shr.u32 %ssa_322, %ssa_317, %ssa_23_bits; // vec1 32 ssa_322 = ushr ssa_317, ssa_23
bb_04	:  PC=0xc00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1181) add.s32 %ssa_323, %ssa_322, %ssa_22_bits; // vec1 32 ssa_323 = iadd ssa_322, ssa_22
bb_04	:  PC=0xc08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1184) xor.b32 %ssa_324, %ssa_321, %ssa_323;// vec1 32 ssa_324 = ixor ssa_321, ssa_323
bb_04	:  PC=0xc10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1187) add.s32 %ssa_325, %ssa_309, %ssa_324;// vec1 32 ssa_325 = iadd ssa_309, ssa_324
bb_04	:  PC=0xc18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1190) shl.b32 %ssa_326, %ssa_325, %ssa_25_bits; // vec1 32 ssa_326 = ishl ssa_325, ssa_25
bb_04	:  PC=0xc20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1193) add.s32 %ssa_327, %ssa_326, %ssa_27_bits; // vec1 32 ssa_327 = iadd ssa_326, ssa_27
bb_04	:  PC=0xc28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1196) add.s32 %ssa_328, %ssa_325, %ssa_62_bits; // vec1 32 ssa_328 = iadd ssa_325, ssa_62
bb_04	:  PC=0xc30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1199) xor.b32 %ssa_329, %ssa_327, %ssa_328;// vec1 32 ssa_329 = ixor ssa_327, ssa_328
bb_04	:  PC=0xc38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1202) shr.u32 %ssa_330, %ssa_325, %ssa_23_bits; // vec1 32 ssa_330 = ushr ssa_325, ssa_23
bb_04	:  PC=0xc40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1205) add.s32 %ssa_331, %ssa_330, %ssa_26_bits; // vec1 32 ssa_331 = iadd ssa_330, ssa_26
bb_04	:  PC=0xc48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1208) xor.b32 %ssa_332, %ssa_329, %ssa_331;// vec1 32 ssa_332 = ixor ssa_329, ssa_331
bb_04	:  PC=0xc50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1211) add.s32 %ssa_333, %ssa_317, %ssa_332;// vec1 32 ssa_333 = iadd ssa_317, ssa_332
bb_04	:  PC=0xc58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1214) shl.b32 %ssa_334, %ssa_333, %ssa_25_bits; // vec1 32 ssa_334 = ishl ssa_333, ssa_25
bb_04	:  PC=0xc60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1217) add.s32 %ssa_335, %ssa_334, %ssa_24_bits; // vec1 32 ssa_335 = iadd ssa_334, ssa_24
bb_04	:  PC=0xc68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1220) add.s32 %ssa_336, %ssa_333, %ssa_62_bits; // vec1 32 ssa_336 = iadd ssa_333, ssa_62
bb_04	:  PC=0xc70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1223) xor.b32 %ssa_337, %ssa_335, %ssa_336;// vec1 32 ssa_337 = ixor ssa_335, ssa_336
bb_04	:  PC=0xc78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1226) shr.u32 %ssa_338, %ssa_333, %ssa_23_bits; // vec1 32 ssa_338 = ushr ssa_333, ssa_23
bb_04	:  PC=0xc80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1229) add.s32 %ssa_339, %ssa_338, %ssa_22_bits; // vec1 32 ssa_339 = iadd ssa_338, ssa_22
bb_04	:  PC=0xc88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1232) xor.b32 %ssa_340, %ssa_337, %ssa_339;// vec1 32 ssa_340 = ixor ssa_337, ssa_339
bb_04	:  PC=0xc90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1235) add.s32 %ssa_341, %ssa_325, %ssa_340;// vec1 32 ssa_341 = iadd ssa_325, ssa_340
bb_04	:  PC=0xc98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1238) shl.b32 %ssa_342, %ssa_341, %ssa_25_bits; // vec1 32 ssa_342 = ishl ssa_341, ssa_25
bb_04	:  PC=0xca0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1241) add.s32 %ssa_343, %ssa_342, %ssa_27_bits; // vec1 32 ssa_343 = iadd ssa_342, ssa_27
bb_04	:  PC=0xca8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1244) add.s32 %ssa_344, %ssa_341, %ssa_79_bits; // vec1 32 ssa_344 = iadd ssa_341, ssa_79
bb_04	:  PC=0xcb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1247) xor.b32 %ssa_345, %ssa_343, %ssa_344;// vec1 32 ssa_345 = ixor ssa_343, ssa_344
bb_04	:  PC=0xcb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1250) shr.u32 %ssa_346, %ssa_341, %ssa_23_bits; // vec1 32 ssa_346 = ushr ssa_341, ssa_23
bb_04	:  PC=0xcc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1253) add.s32 %ssa_347, %ssa_346, %ssa_26_bits; // vec1 32 ssa_347 = iadd ssa_346, ssa_26
bb_04	:  PC=0xcc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1256) xor.b32 %ssa_348, %ssa_345, %ssa_347;// vec1 32 ssa_348 = ixor ssa_345, ssa_347
bb_04	:  PC=0xcd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1259) add.s32 %ssa_349, %ssa_333, %ssa_348;// vec1 32 ssa_349 = iadd ssa_333, ssa_348
bb_04	:  PC=0xcd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1262) shl.b32 %ssa_350, %ssa_349, %ssa_25_bits; // vec1 32 ssa_350 = ishl ssa_349, ssa_25
bb_04	:  PC=0xce0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1265) add.s32 %ssa_351, %ssa_350, %ssa_24_bits; // vec1 32 ssa_351 = iadd ssa_350, ssa_24
bb_04	:  PC=0xce8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1268) add.s32 %ssa_352, %ssa_349, %ssa_79_bits; // vec1 32 ssa_352 = iadd ssa_349, ssa_79
bb_04	:  PC=0xcf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1271) xor.b32 %ssa_353, %ssa_351, %ssa_352;// vec1 32 ssa_353 = ixor ssa_351, ssa_352
bb_04	:  PC=0xcf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1274) shr.u32 %ssa_354, %ssa_349, %ssa_23_bits; // vec1 32 ssa_354 = ushr ssa_349, ssa_23
bb_04	:  PC=0xd00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1277) add.s32 %ssa_355, %ssa_354, %ssa_22_bits; // vec1 32 ssa_355 = iadd ssa_354, ssa_22
bb_04	:  PC=0xd08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1280) xor.b32 %ssa_356, %ssa_353, %ssa_355;// vec1 32 ssa_356 = ixor ssa_353, ssa_355
bb_04	:  PC=0xd10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1283) add.s32 %ssa_357, %ssa_341, %ssa_356;// vec1 32 ssa_357 = iadd ssa_341, ssa_356
bb_04	:  PC=0xd18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1286) shl.b32 %ssa_358, %ssa_357, %ssa_25_bits; // vec1 32 ssa_358 = ishl ssa_357, ssa_25
bb_04	:  PC=0xd20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1289) add.s32 %ssa_359, %ssa_358, %ssa_27_bits; // vec1 32 ssa_359 = iadd ssa_358, ssa_27
bb_04	:  PC=0xd28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1292) add.s32 %ssa_360, %ssa_357, %ssa_96_bits; // vec1 32 ssa_360 = iadd ssa_357, ssa_96
bb_04	:  PC=0xd30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1295) xor.b32 %ssa_361, %ssa_359, %ssa_360;// vec1 32 ssa_361 = ixor ssa_359, ssa_360
bb_04	:  PC=0xd38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1298) shr.u32 %ssa_362, %ssa_357, %ssa_23_bits; // vec1 32 ssa_362 = ushr ssa_357, ssa_23
bb_04	:  PC=0xd40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1301) add.s32 %ssa_363, %ssa_362, %ssa_26_bits; // vec1 32 ssa_363 = iadd ssa_362, ssa_26
bb_04	:  PC=0xd48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1304) xor.b32 %ssa_364, %ssa_361, %ssa_363;// vec1 32 ssa_364 = ixor ssa_361, ssa_363
bb_04	:  PC=0xd50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1307) add.s32 %ssa_365, %ssa_349, %ssa_364;// vec1 32 ssa_365 = iadd ssa_349, ssa_364
bb_04	:  PC=0xd58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1310) shl.b32 %ssa_366, %ssa_365, %ssa_25_bits; // vec1 32 ssa_366 = ishl ssa_365, ssa_25
bb_04	:  PC=0xd60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1313) add.s32 %ssa_367, %ssa_366, %ssa_24_bits; // vec1 32 ssa_367 = iadd ssa_366, ssa_24
bb_04	:  PC=0xd68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1316) add.s32 %ssa_368, %ssa_365, %ssa_96_bits; // vec1 32 ssa_368 = iadd ssa_365, ssa_96
bb_04	:  PC=0xd70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1319) xor.b32 %ssa_369, %ssa_367, %ssa_368;// vec1 32 ssa_369 = ixor ssa_367, ssa_368
bb_04	:  PC=0xd78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1322) shr.u32 %ssa_370, %ssa_365, %ssa_23_bits; // vec1 32 ssa_370 = ushr ssa_365, ssa_23
bb_04	:  PC=0xd80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1325) add.s32 %ssa_371, %ssa_370, %ssa_22_bits; // vec1 32 ssa_371 = iadd ssa_370, ssa_22
bb_04	:  PC=0xd88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1328) xor.b32 %ssa_372, %ssa_369, %ssa_371;// vec1 32 ssa_372 = ixor ssa_369, ssa_371
bb_04	:  PC=0xd90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1331) add.s32 %ssa_373, %ssa_357, %ssa_372;// vec1 32 ssa_373 = iadd ssa_357, ssa_372
bb_04	:  PC=0xd98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1334) shl.b32 %ssa_374, %ssa_373, %ssa_25_bits; // vec1 32 ssa_374 = ishl ssa_373, ssa_25
bb_04	:  PC=0xda0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1337) add.s32 %ssa_375, %ssa_374, %ssa_27_bits; // vec1 32 ssa_375 = iadd ssa_374, ssa_27
bb_04	:  PC=0xda8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1340) add.s32 %ssa_376, %ssa_373, %ssa_113_bits; // vec1 32 ssa_376 = iadd ssa_373, ssa_113
bb_04	:  PC=0xdb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1343) xor.b32 %ssa_377, %ssa_375, %ssa_376;// vec1 32 ssa_377 = ixor ssa_375, ssa_376
bb_04	:  PC=0xdb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1346) shr.u32 %ssa_378, %ssa_373, %ssa_23_bits; // vec1 32 ssa_378 = ushr ssa_373, ssa_23
bb_04	:  PC=0xdc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1349) add.s32 %ssa_379, %ssa_378, %ssa_26_bits; // vec1 32 ssa_379 = iadd ssa_378, ssa_26
bb_04	:  PC=0xdc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1352) xor.b32 %ssa_380, %ssa_377, %ssa_379;// vec1 32 ssa_380 = ixor ssa_377, ssa_379
bb_04	:  PC=0xdd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1355) add.s32 %ssa_381, %ssa_365, %ssa_380;// vec1 32 ssa_381 = iadd ssa_365, ssa_380
bb_04	:  PC=0xdd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1358) shl.b32 %ssa_382, %ssa_381, %ssa_25_bits; // vec1 32 ssa_382 = ishl ssa_381, ssa_25
bb_04	:  PC=0xde0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1361) add.s32 %ssa_383, %ssa_382, %ssa_24_bits; // vec1 32 ssa_383 = iadd ssa_382, ssa_24
bb_04	:  PC=0xde8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1364) add.s32 %ssa_384, %ssa_381, %ssa_113_bits; // vec1 32 ssa_384 = iadd ssa_381, ssa_113
bb_04	:  PC=0xdf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1367) xor.b32 %ssa_385, %ssa_383, %ssa_384;// vec1 32 ssa_385 = ixor ssa_383, ssa_384
bb_04	:  PC=0xdf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1370) shr.u32 %ssa_386, %ssa_381, %ssa_23_bits; // vec1 32 ssa_386 = ushr ssa_381, ssa_23
bb_04	:  PC=0xe00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1373) add.s32 %ssa_387, %ssa_386, %ssa_22_bits; // vec1 32 ssa_387 = iadd ssa_386, ssa_22
bb_04	:  PC=0xe08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1376) xor.b32 %ssa_388, %ssa_385, %ssa_387;// vec1 32 ssa_388 = ixor ssa_385, ssa_387
bb_04	:  PC=0xe10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1379) add.s32 %ssa_389, %ssa_373, %ssa_388;// vec1 32 ssa_389 = iadd ssa_373, ssa_388
bb_04	:  PC=0xe18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1382) shl.b32 %ssa_390, %ssa_389, %ssa_25_bits; // vec1 32 ssa_390 = ishl ssa_389, ssa_25
bb_04	:  PC=0xe20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1385) add.s32 %ssa_391, %ssa_390, %ssa_27_bits; // vec1 32 ssa_391 = iadd ssa_390, ssa_27
bb_04	:  PC=0xe28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1388) add.s32 %ssa_392, %ssa_389, %ssa_130_bits; // vec1 32 ssa_392 = iadd ssa_389, ssa_130
bb_04	:  PC=0xe30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1391) xor.b32 %ssa_393, %ssa_391, %ssa_392;// vec1 32 ssa_393 = ixor ssa_391, ssa_392
bb_04	:  PC=0xe38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1394) shr.u32 %ssa_394, %ssa_389, %ssa_23_bits; // vec1 32 ssa_394 = ushr ssa_389, ssa_23
bb_04	:  PC=0xe40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1397) add.s32 %ssa_395, %ssa_394, %ssa_26_bits; // vec1 32 ssa_395 = iadd ssa_394, ssa_26
bb_04	:  PC=0xe48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1400) xor.b32 %ssa_396, %ssa_393, %ssa_395;// vec1 32 ssa_396 = ixor ssa_393, ssa_395
bb_04	:  PC=0xe50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1403) add.s32 %ssa_397, %ssa_381, %ssa_396;// vec1 32 ssa_397 = iadd ssa_381, ssa_396
bb_04	:  PC=0xe58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1406) shl.b32 %ssa_398, %ssa_397, %ssa_25_bits; // vec1 32 ssa_398 = ishl ssa_397, ssa_25
bb_04	:  PC=0xe60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1409) add.s32 %ssa_399, %ssa_398, %ssa_24_bits; // vec1 32 ssa_399 = iadd ssa_398, ssa_24
bb_04	:  PC=0xe68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1412) add.s32 %ssa_400, %ssa_397, %ssa_130_bits; // vec1 32 ssa_400 = iadd ssa_397, ssa_130
bb_04	:  PC=0xe70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1415) xor.b32 %ssa_401, %ssa_399, %ssa_400;// vec1 32 ssa_401 = ixor ssa_399, ssa_400
bb_04	:  PC=0xe78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1418) shr.u32 %ssa_402, %ssa_397, %ssa_23_bits; // vec1 32 ssa_402 = ushr ssa_397, ssa_23
bb_04	:  PC=0xe80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1421) add.s32 %ssa_403, %ssa_402, %ssa_22_bits; // vec1 32 ssa_403 = iadd ssa_402, ssa_22
bb_04	:  PC=0xe88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1424) xor.b32 %ssa_404, %ssa_401, %ssa_403;// vec1 32 ssa_404 = ixor ssa_401, ssa_403
bb_04	:  PC=0xe90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1427) add.s32 %ssa_405, %ssa_389, %ssa_404;// vec1 32 ssa_405 = iadd ssa_389, ssa_404
bb_04	:  PC=0xe98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1430) shl.b32 %ssa_406, %ssa_405, %ssa_25_bits; // vec1 32 ssa_406 = ishl ssa_405, ssa_25
bb_04	:  PC=0xea0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1433) add.s32 %ssa_407, %ssa_406, %ssa_27_bits; // vec1 32 ssa_407 = iadd ssa_406, ssa_27
bb_04	:  PC=0xea8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1436) add.s32 %ssa_408, %ssa_405, %ssa_147_bits; // vec1 32 ssa_408 = iadd ssa_405, ssa_147
bb_04	:  PC=0xeb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1439) xor.b32 %ssa_409, %ssa_407, %ssa_408;// vec1 32 ssa_409 = ixor ssa_407, ssa_408
bb_04	:  PC=0xeb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1442) shr.u32 %ssa_410, %ssa_405, %ssa_23_bits; // vec1 32 ssa_410 = ushr ssa_405, ssa_23
bb_04	:  PC=0xec0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1445) add.s32 %ssa_411, %ssa_410, %ssa_26_bits; // vec1 32 ssa_411 = iadd ssa_410, ssa_26
bb_04	:  PC=0xec8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1448) xor.b32 %ssa_412, %ssa_409, %ssa_411;// vec1 32 ssa_412 = ixor ssa_409, ssa_411
bb_04	:  PC=0xed0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1451) add.s32 %ssa_413, %ssa_397, %ssa_412;// vec1 32 ssa_413 = iadd ssa_397, ssa_412
bb_04	:  PC=0xed8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1454) shl.b32 %ssa_414, %ssa_413, %ssa_25_bits; // vec1 32 ssa_414 = ishl ssa_413, ssa_25
bb_04	:  PC=0xee0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1457) add.s32 %ssa_415, %ssa_414, %ssa_24_bits; // vec1 32 ssa_415 = iadd ssa_414, ssa_24
bb_04	:  PC=0xee8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1460) add.s32 %ssa_416, %ssa_413, %ssa_147_bits; // vec1 32 ssa_416 = iadd ssa_413, ssa_147
bb_04	:  PC=0xef0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1463) xor.b32 %ssa_417, %ssa_415, %ssa_416;// vec1 32 ssa_417 = ixor ssa_415, ssa_416
bb_04	:  PC=0xef8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1466) shr.u32 %ssa_418, %ssa_413, %ssa_23_bits; // vec1 32 ssa_418 = ushr ssa_413, ssa_23
bb_04	:  PC=0xf00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1469) add.s32 %ssa_419, %ssa_418, %ssa_22_bits; // vec1 32 ssa_419 = iadd ssa_418, ssa_22
bb_04	:  PC=0xf08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1472) xor.b32 %ssa_420, %ssa_417, %ssa_419;// vec1 32 ssa_420 = ixor ssa_417, ssa_419
bb_04	:  PC=0xf10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1475) add.s32 %ssa_421, %ssa_405, %ssa_420;// vec1 32 ssa_421 = iadd ssa_405, ssa_420
bb_04	:  PC=0xf18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1478) shl.b32 %ssa_422, %ssa_421, %ssa_25_bits; // vec1 32 ssa_422 = ishl ssa_421, ssa_25
bb_04	:  PC=0xf20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1481) add.s32 %ssa_423, %ssa_422, %ssa_27_bits; // vec1 32 ssa_423 = iadd ssa_422, ssa_27
bb_04	:  PC=0xf28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1484) add.s32 %ssa_424, %ssa_421, %ssa_164_bits; // vec1 32 ssa_424 = iadd ssa_421, ssa_164
bb_04	:  PC=0xf30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1487) xor.b32 %ssa_425, %ssa_423, %ssa_424;// vec1 32 ssa_425 = ixor ssa_423, ssa_424
bb_04	:  PC=0xf38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1490) shr.u32 %ssa_426, %ssa_421, %ssa_23_bits; // vec1 32 ssa_426 = ushr ssa_421, ssa_23
bb_04	:  PC=0xf40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1493) add.s32 %ssa_427, %ssa_426, %ssa_26_bits; // vec1 32 ssa_427 = iadd ssa_426, ssa_26
bb_04	:  PC=0xf48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1496) xor.b32 %ssa_428, %ssa_425, %ssa_427;// vec1 32 ssa_428 = ixor ssa_425, ssa_427
bb_04	:  PC=0xf50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1499) add.s32 %ssa_429, %ssa_413, %ssa_428;// vec1 32 ssa_429 = iadd ssa_413, ssa_428
bb_04	:  PC=0xf58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1502) shl.b32 %ssa_430, %ssa_429, %ssa_25_bits; // vec1 32 ssa_430 = ishl ssa_429, ssa_25
bb_04	:  PC=0xf60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1505) add.s32 %ssa_431, %ssa_430, %ssa_24_bits; // vec1 32 ssa_431 = iadd ssa_430, ssa_24
bb_04	:  PC=0xf68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1508) add.s32 %ssa_432, %ssa_429, %ssa_164_bits; // vec1 32 ssa_432 = iadd ssa_429, ssa_164
bb_04	:  PC=0xf70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1511) xor.b32 %ssa_433, %ssa_431, %ssa_432;// vec1 32 ssa_433 = ixor ssa_431, ssa_432
bb_04	:  PC=0xf78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1514) shr.u32 %ssa_434, %ssa_429, %ssa_23_bits; // vec1 32 ssa_434 = ushr ssa_429, ssa_23
bb_04	:  PC=0xf80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1517) add.s32 %ssa_435, %ssa_434, %ssa_22_bits; // vec1 32 ssa_435 = iadd ssa_434, ssa_22
bb_04	:  PC=0xf88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1520) xor.b32 %ssa_436, %ssa_433, %ssa_435;// vec1 32 ssa_436 = ixor ssa_433, ssa_435
bb_04	:  PC=0xf90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1523) add.s32 %ssa_437, %ssa_421, %ssa_436;// vec1 32 ssa_437 = iadd ssa_421, ssa_436
bb_04	:  PC=0xf98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1526) shl.b32 %ssa_438, %ssa_437, %ssa_25_bits; // vec1 32 ssa_438 = ishl ssa_437, ssa_25
bb_04	:  PC=0xfa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1529) add.s32 %ssa_439, %ssa_438, %ssa_27_bits; // vec1 32 ssa_439 = iadd ssa_438, ssa_27
bb_04	:  PC=0xfa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1532) add.s32 %ssa_440, %ssa_437, %ssa_181_bits; // vec1 32 ssa_440 = iadd ssa_437, ssa_181
bb_04	:  PC=0xfb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1535) xor.b32 %ssa_441, %ssa_439, %ssa_440;// vec1 32 ssa_441 = ixor ssa_439, ssa_440
bb_04	:  PC=0xfb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1538) shr.u32 %ssa_442, %ssa_437, %ssa_23_bits; // vec1 32 ssa_442 = ushr ssa_437, ssa_23
bb_04	:  PC=0xfc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1541) add.s32 %ssa_443, %ssa_442, %ssa_26_bits; // vec1 32 ssa_443 = iadd ssa_442, ssa_26
bb_04	:  PC=0xfc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1544) xor.b32 %ssa_444, %ssa_441, %ssa_443;// vec1 32 ssa_444 = ixor ssa_441, ssa_443
bb_04	:  PC=0xfd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1547) add.s32 %ssa_445, %ssa_429, %ssa_444;// vec1 32 ssa_445 = iadd ssa_429, ssa_444
bb_04	:  PC=0xfd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1550) shl.b32 %ssa_446, %ssa_445, %ssa_25_bits; // vec1 32 ssa_446 = ishl ssa_445, ssa_25
bb_04	:  PC=0xfe0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1553) add.s32 %ssa_447, %ssa_446, %ssa_24_bits; // vec1 32 ssa_447 = iadd ssa_446, ssa_24
bb_04	:  PC=0xfe8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1556) add.s32 %ssa_448, %ssa_445, %ssa_181_bits; // vec1 32 ssa_448 = iadd ssa_445, ssa_181
bb_04	:  PC=0xff0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1559) xor.b32 %ssa_449, %ssa_447, %ssa_448;// vec1 32 ssa_449 = ixor ssa_447, ssa_448
bb_04	:  PC=0xff8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1562) shr.u32 %ssa_450, %ssa_445, %ssa_23_bits; // vec1 32 ssa_450 = ushr ssa_445, ssa_23
bb_04	:  PC=0x1000 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1565) add.s32 %ssa_451, %ssa_450, %ssa_22_bits; // vec1 32 ssa_451 = iadd ssa_450, ssa_22
bb_04	:  PC=0x1008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1568) xor.b32 %ssa_452, %ssa_449, %ssa_451;// vec1 32 ssa_452 = ixor ssa_449, ssa_451
bb_04	:  PC=0x1010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1571) add.s32 %ssa_453, %ssa_437, %ssa_452;// vec1 32 ssa_453 = iadd ssa_437, ssa_452
bb_04	:  PC=0x1018 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1574) shl.b32 %ssa_454, %ssa_453, %ssa_25_bits; // vec1 32 ssa_454 = ishl ssa_453, ssa_25
bb_04	:  PC=0x1020 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1577) add.s32 %ssa_455, %ssa_454, %ssa_27_bits; // vec1 32 ssa_455 = iadd ssa_454, ssa_27
bb_04	:  PC=0x1028 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1580) add.s32 %ssa_456, %ssa_453, %ssa_198_bits; // vec1 32 ssa_456 = iadd ssa_453, ssa_198
bb_04	:  PC=0x1030 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1583) xor.b32 %ssa_457, %ssa_455, %ssa_456;// vec1 32 ssa_457 = ixor ssa_455, ssa_456
bb_04	:  PC=0x1038 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1586) shr.u32 %ssa_458, %ssa_453, %ssa_23_bits; // vec1 32 ssa_458 = ushr ssa_453, ssa_23
bb_04	:  PC=0x1040 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1589) add.s32 %ssa_459, %ssa_458, %ssa_26_bits; // vec1 32 ssa_459 = iadd ssa_458, ssa_26
bb_04	:  PC=0x1048 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1592) xor.b32 %ssa_460, %ssa_457, %ssa_459;// vec1 32 ssa_460 = ixor ssa_457, ssa_459
bb_04	:  PC=0x1050 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1595) add.s32 %ssa_461, %ssa_445, %ssa_460;// vec1 32 ssa_461 = iadd ssa_445, ssa_460
bb_04	:  PC=0x1058 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1598) shl.b32 %ssa_462, %ssa_461, %ssa_25_bits; // vec1 32 ssa_462 = ishl ssa_461, ssa_25
bb_04	:  PC=0x1060 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1601) add.s32 %ssa_463, %ssa_462, %ssa_24_bits; // vec1 32 ssa_463 = iadd ssa_462, ssa_24
bb_04	:  PC=0x1068 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1604) add.s32 %ssa_464, %ssa_461, %ssa_198_bits; // vec1 32 ssa_464 = iadd ssa_461, ssa_198
bb_04	:  PC=0x1070 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1607) xor.b32 %ssa_465, %ssa_463, %ssa_464;// vec1 32 ssa_465 = ixor ssa_463, ssa_464
bb_04	:  PC=0x1078 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1610) shr.u32 %ssa_466, %ssa_461, %ssa_23_bits; // vec1 32 ssa_466 = ushr ssa_461, ssa_23
bb_04	:  PC=0x1080 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1613) add.s32 %ssa_467, %ssa_466, %ssa_22_bits; // vec1 32 ssa_467 = iadd ssa_466, ssa_22
bb_04	:  PC=0x1088 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1616) xor.b32 %ssa_468, %ssa_465, %ssa_467;// vec1 32 ssa_468 = ixor ssa_465, ssa_467
bb_04	:  PC=0x1090 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1619) add.s32 %ssa_469, %ssa_453, %ssa_468;// vec1 32 ssa_469 = iadd ssa_453, ssa_468
bb_04	:  PC=0x1098 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1622) shl.b32 %ssa_470, %ssa_469, %ssa_25_bits; // vec1 32 ssa_470 = ishl ssa_469, ssa_25
bb_04	:  PC=0x10a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1625) add.s32 %ssa_471, %ssa_470, %ssa_27_bits; // vec1 32 ssa_471 = iadd ssa_470, ssa_27
bb_04	:  PC=0x10a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1628) add.s32 %ssa_472, %ssa_469, %ssa_215_bits; // vec1 32 ssa_472 = iadd ssa_469, ssa_215
bb_04	:  PC=0x10b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1631) xor.b32 %ssa_473, %ssa_471, %ssa_472;// vec1 32 ssa_473 = ixor ssa_471, ssa_472
bb_04	:  PC=0x10b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1634) shr.u32 %ssa_474, %ssa_469, %ssa_23_bits; // vec1 32 ssa_474 = ushr ssa_469, ssa_23
bb_04	:  PC=0x10c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1637) add.s32 %ssa_475, %ssa_474, %ssa_26_bits; // vec1 32 ssa_475 = iadd ssa_474, ssa_26
bb_04	:  PC=0x10c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1640) xor.b32 %ssa_476, %ssa_473, %ssa_475;// vec1 32 ssa_476 = ixor ssa_473, ssa_475
bb_04	:  PC=0x10d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1643) add.s32 %ssa_477, %ssa_461, %ssa_476;// vec1 32 ssa_477 = iadd ssa_461, ssa_476
bb_04	:  PC=0x10d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1646) shl.b32 %ssa_478, %ssa_477, %ssa_25_bits; // vec1 32 ssa_478 = ishl ssa_477, ssa_25
bb_04	:  PC=0x10e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1649) add.s32 %ssa_479, %ssa_478, %ssa_24_bits; // vec1 32 ssa_479 = iadd ssa_478, ssa_24
bb_04	:  PC=0x10e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1652) add.s32 %ssa_480, %ssa_477, %ssa_215_bits; // vec1 32 ssa_480 = iadd ssa_477, ssa_215
bb_04	:  PC=0x10f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1655) xor.b32 %ssa_481, %ssa_479, %ssa_480;// vec1 32 ssa_481 = ixor ssa_479, ssa_480
bb_04	:  PC=0x10f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1658) shr.u32 %ssa_482, %ssa_477, %ssa_23_bits; // vec1 32 ssa_482 = ushr ssa_477, ssa_23
bb_04	:  PC=0x1100 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1661) add.s32 %ssa_483, %ssa_482, %ssa_22_bits; // vec1 32 ssa_483 = iadd ssa_482, ssa_22
bb_04	:  PC=0x1108 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1664) xor.b32 %ssa_484, %ssa_481, %ssa_483;// vec1 32 ssa_484 = ixor ssa_481, ssa_483
bb_04	:  PC=0x1110 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1667) add.s32 %ssa_485, %ssa_469, %ssa_484;// vec1 32 ssa_485 = iadd ssa_469, ssa_484
bb_04	:  PC=0x1118 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1670) shl.b32 %ssa_486, %ssa_485, %ssa_25_bits; // vec1 32 ssa_486 = ishl ssa_485, ssa_25
bb_04	:  PC=0x1120 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1673) add.s32 %ssa_487, %ssa_486, %ssa_27_bits; // vec1 32 ssa_487 = iadd ssa_486, ssa_27
bb_04	:  PC=0x1128 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1676) add.s32 %ssa_488, %ssa_485, %ssa_232_bits; // vec1 32 ssa_488 = iadd ssa_485, ssa_232
bb_04	:  PC=0x1130 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1679) xor.b32 %ssa_489, %ssa_487, %ssa_488;// vec1 32 ssa_489 = ixor ssa_487, ssa_488
bb_04	:  PC=0x1138 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1682) shr.u32 %ssa_490, %ssa_485, %ssa_23_bits; // vec1 32 ssa_490 = ushr ssa_485, ssa_23
bb_04	:  PC=0x1140 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1685) add.s32 %ssa_491, %ssa_490, %ssa_26_bits; // vec1 32 ssa_491 = iadd ssa_490, ssa_26
bb_04	:  PC=0x1148 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1688) xor.b32 %ssa_492, %ssa_489, %ssa_491;// vec1 32 ssa_492 = ixor ssa_489, ssa_491
bb_04	:  PC=0x1150 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1691) add.s32 %ssa_493, %ssa_477, %ssa_492;// vec1 32 ssa_493 = iadd ssa_477, ssa_492
bb_04	:  PC=0x1158 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1694) shl.b32 %ssa_494, %ssa_493, %ssa_25_bits; // vec1 32 ssa_494 = ishl ssa_493, ssa_25
bb_04	:  PC=0x1160 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1697) add.s32 %ssa_495, %ssa_494, %ssa_24_bits; // vec1 32 ssa_495 = iadd ssa_494, ssa_24
bb_04	:  PC=0x1168 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1700) add.s32 %ssa_496, %ssa_493, %ssa_232_bits; // vec1 32 ssa_496 = iadd ssa_493, ssa_232
bb_04	:  PC=0x1170 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1703) xor.b32 %ssa_497, %ssa_495, %ssa_496;// vec1 32 ssa_497 = ixor ssa_495, ssa_496
bb_04	:  PC=0x1178 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1706) shr.u32 %ssa_498, %ssa_493, %ssa_23_bits; // vec1 32 ssa_498 = ushr ssa_493, ssa_23
bb_04	:  PC=0x1180 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1709) add.s32 %ssa_499, %ssa_498, %ssa_22_bits; // vec1 32 ssa_499 = iadd ssa_498, ssa_22
bb_04	:  PC=0x1188 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1712) xor.b32 %ssa_500, %ssa_497, %ssa_499;// vec1 32 ssa_500 = ixor ssa_497, ssa_499
bb_04	:  PC=0x1190 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1715) add.s32 %ssa_501, %ssa_485, %ssa_500;// vec1 32 ssa_501 = iadd ssa_485, ssa_500
bb_04	:  PC=0x1198 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1718) shl.b32 %ssa_502, %ssa_501, %ssa_25_bits; // vec1 32 ssa_502 = ishl ssa_501, ssa_25
bb_04	:  PC=0x11a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1721) add.s32 %ssa_503, %ssa_502, %ssa_27_bits; // vec1 32 ssa_503 = iadd ssa_502, ssa_27
bb_04	:  PC=0x11a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1724) add.s32 %ssa_504, %ssa_501, %ssa_249_bits; // vec1 32 ssa_504 = iadd ssa_501, ssa_249
bb_04	:  PC=0x11b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1727) xor.b32 %ssa_505, %ssa_503, %ssa_504;// vec1 32 ssa_505 = ixor ssa_503, ssa_504
bb_04	:  PC=0x11b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1730) shr.u32 %ssa_506, %ssa_501, %ssa_23_bits; // vec1 32 ssa_506 = ushr ssa_501, ssa_23
bb_04	:  PC=0x11c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1733) add.s32 %ssa_507, %ssa_506, %ssa_26_bits; // vec1 32 ssa_507 = iadd ssa_506, ssa_26
bb_04	:  PC=0x11c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1736) xor.b32 %ssa_508, %ssa_505, %ssa_507;// vec1 32 ssa_508 = ixor ssa_505, ssa_507
bb_04	:  PC=0x11d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1739) add.s32 %ssa_509, %ssa_493, %ssa_508;// vec1 32 ssa_509 = iadd ssa_493, ssa_508
bb_04	:  PC=0x11d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1742) shl.b32 %ssa_510, %ssa_509, %ssa_25_bits; // vec1 32 ssa_510 = ishl ssa_509, ssa_25
bb_04	:  PC=0x11e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1745) add.s32 %ssa_511, %ssa_510, %ssa_24_bits; // vec1 32 ssa_511 = iadd ssa_510, ssa_24
bb_04	:  PC=0x11e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1748) add.s32 %ssa_512, %ssa_509, %ssa_249_bits; // vec1 32 ssa_512 = iadd ssa_509, ssa_249
bb_04	:  PC=0x11f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1751) xor.b32 %ssa_513, %ssa_511, %ssa_512;// vec1 32 ssa_513 = ixor ssa_511, ssa_512
bb_04	:  PC=0x11f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1754) shr.u32 %ssa_514, %ssa_509, %ssa_23_bits; // vec1 32 ssa_514 = ushr ssa_509, ssa_23
bb_04	:  PC=0x1200 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1757) add.s32 %ssa_515, %ssa_514, %ssa_22_bits; // vec1 32 ssa_515 = iadd ssa_514, ssa_22
bb_04	:  PC=0x1208 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1760) xor.b32 %ssa_516, %ssa_513, %ssa_515;// vec1 32 ssa_516 = ixor ssa_513, ssa_515
bb_04	:  PC=0x1210 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1763) add.s32 %ssa_517, %ssa_501, %ssa_516;// vec1 32 ssa_517 = iadd ssa_501, ssa_516
bb_04	:  PC=0x1218 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1766) shl.b32 %ssa_518, %ssa_517, %ssa_25_bits; // vec1 32 ssa_518 = ishl ssa_517, ssa_25
bb_04	:  PC=0x1220 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1769) add.s32 %ssa_519, %ssa_518, %ssa_27_bits; // vec1 32 ssa_519 = iadd ssa_518, ssa_27
bb_04	:  PC=0x1228 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1772) add.s32 %ssa_520, %ssa_517, %ssa_266_bits; // vec1 32 ssa_520 = iadd ssa_517, ssa_266
bb_04	:  PC=0x1230 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1775) xor.b32 %ssa_521, %ssa_519, %ssa_520;// vec1 32 ssa_521 = ixor ssa_519, ssa_520
bb_04	:  PC=0x1238 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1778) shr.u32 %ssa_522, %ssa_517, %ssa_23_bits; // vec1 32 ssa_522 = ushr ssa_517, ssa_23
bb_04	:  PC=0x1240 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1781) add.s32 %ssa_523, %ssa_522, %ssa_26_bits; // vec1 32 ssa_523 = iadd ssa_522, ssa_26
bb_04	:  PC=0x1248 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1784) xor.b32 %ssa_524, %ssa_521, %ssa_523;// vec1 32 ssa_524 = ixor ssa_521, ssa_523
bb_04	:  PC=0x1250 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1787) add.s32 %ssa_525, %ssa_509, %ssa_524;// vec1 32 ssa_525 = iadd ssa_509, ssa_524
bb_04	:  PC=0x1258 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1790) shl.b32 %ssa_526, %ssa_525, %ssa_25_bits; // vec1 32 ssa_526 = ishl ssa_525, ssa_25
bb_04	:  PC=0x1260 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1793) add.s32 %ssa_527, %ssa_526, %ssa_24_bits; // vec1 32 ssa_527 = iadd ssa_526, ssa_24
bb_04	:  PC=0x1268 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1796) add.s32 %ssa_528, %ssa_525, %ssa_266_bits; // vec1 32 ssa_528 = iadd ssa_525, ssa_266
bb_04	:  PC=0x1270 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1799) xor.b32 %ssa_529, %ssa_527, %ssa_528;// vec1 32 ssa_529 = ixor ssa_527, ssa_528
bb_04	:  PC=0x1278 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1802) shr.u32 %ssa_530, %ssa_525, %ssa_23_bits; // vec1 32 ssa_530 = ushr ssa_525, ssa_23
bb_04	:  PC=0x1280 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1805) add.s32 %ssa_531, %ssa_530, %ssa_22_bits; // vec1 32 ssa_531 = iadd ssa_530, ssa_22
bb_04	:  PC=0x1288 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1808) xor.b32 %ssa_532, %ssa_529, %ssa_531;// vec1 32 ssa_532 = ixor ssa_529, ssa_531
bb_04	:  PC=0x1290 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1811) add.s32 %ssa_533, %ssa_517, %ssa_532;// vec1 32 ssa_533 = iadd ssa_517, ssa_532
bb_04	:  PC=0x1298 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1814) shl.b32 %ssa_534, %ssa_533, %ssa_25_bits; // vec1 32 ssa_534 = ishl ssa_533, ssa_25
bb_04	:  PC=0x12a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1817) add.s32 %ssa_535, %ssa_534, %ssa_27_bits; // vec1 32 ssa_535 = iadd ssa_534, ssa_27
bb_04	:  PC=0x12a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1820) add.s32 %ssa_536, %ssa_533, %ssa_283_bits; // vec1 32 ssa_536 = iadd ssa_533, ssa_283
bb_04	:  PC=0x12b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1823) xor.b32 %ssa_537, %ssa_535, %ssa_536;// vec1 32 ssa_537 = ixor ssa_535, ssa_536
bb_04	:  PC=0x12b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1826) shr.u32 %ssa_538, %ssa_533, %ssa_23_bits; // vec1 32 ssa_538 = ushr ssa_533, ssa_23
bb_04	:  PC=0x12c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1829) add.s32 %ssa_539, %ssa_538, %ssa_26_bits; // vec1 32 ssa_539 = iadd ssa_538, ssa_26
bb_04	:  PC=0x12c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1832) xor.b32 %ssa_540, %ssa_537, %ssa_539;// vec1 32 ssa_540 = ixor ssa_537, ssa_539
bb_04	:  PC=0x12d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1835) add.s32 %ssa_541, %ssa_525, %ssa_540;// vec1 32 ssa_541 = iadd ssa_525, ssa_540
bb_04	:  PC=0x12d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1838) mov.b64 %ssa_542, %Ray; // vec1 32 ssa_542 = deref_var &Ray (function_temp RayPayload) 
bb_04	:  PC=0x12e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1841) add.u64 %ssa_543, %ssa_542, 44; // vec1 32 ssa_543 = deref_struct &ssa_542->RandomSeed (function_temp uint) /* &Ray.RandomSeed */
bb_04	:  PC=0x12e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1843) st.global.s32 [%ssa_543], %ssa_541; // intrinsic store_deref (%ssa_543, %ssa_541) (1, 0) /* wrmask=x */ /* access=0 */
bb_04	:  PC=0x12f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1846) mov.f32 %ssa_832, 0F00000000; // vec1 32 ssa_832 = load_const (0x00000000 /* 0.000000 */)
bb_04	:  PC=0x12f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1848) mov.b32 %ssa_832_bits, 0F00000000;
bb_04	:  PC=0x1300 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1851) mov.f32 %ssa_833, 0F00000000; // vec1 32 ssa_833 = load_const (0x00000000 /* 0.000000 */)
bb_04	:  PC=0x1308 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1853) mov.b32 %ssa_833_bits, 0F00000000;
bb_04	:  PC=0x1310 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1856) mov.f32 %ssa_834, 0F00000000; // vec1 32 ssa_834 = load_const (0x00000000 /* 0.000000 */)
bb_04	:  PC=0x1318 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1858) mov.b32 %ssa_834_bits, 0F00000000;
bb_04	:  PC=0x1320 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1860) mov.s32 %ssa_544, %ssa_20; // vec1 32 ssa_544 = phi block_0: ssa_20, block_20: ssa_563
bb_04	:  PC=0x1328 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1861) mov.f32 %ssa_762, %ssa_832; // vec1 32 ssa_762 = phi block_0: ssa_832, block_20: ssa_761
bb_04	:  PC=0x1330 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1862) mov.f32 %ssa_765, %ssa_833; // vec1 32 ssa_765 = phi block_0: ssa_833, block_20: ssa_764
bb_04	:  PC=0x1338 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1863) mov.f32 %ssa_768, %ssa_834; // vec1 32 ssa_768 = phi block_0: ssa_834, block_20: ssa_767
bb_04	:  PC=0x1340 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1864) mov.s32 %ssa_546, %ssa_2_bits; // vec1 32 ssa_546 = phi block_0: ssa_2, block_20: ssa_737

bb_05	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1875) .reg .b32 %ssa_769_0;
bb_05	:  PC=0x1348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1879) mov.b32 %ssa_769_0, %ssa_762;
bb_05	:  PC=0x1350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1880) mov.b32 %ssa_769_1, %ssa_765;
bb_05	:  PC=0x1358 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1881) mov.b32 %ssa_769_2, %ssa_768; // vec3 32 ssa_769 = vec3 ssa_762, ssa_765, ssa_768
bb_05	:  PC=0x1360 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1884) add.u64 %ssa_547, %ssa_18, 288; // vec2 32 ssa_547 = deref_struct &ssa_18->NumberOfSamples (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.NumberOfSamples */
bb_05	:  PC=0x1368 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1887) ld.global.u32 %ssa_548, [%ssa_547]; // vec1 32 ssa_548 = intrinsic load_deref (%ssa_547) (0) /* access=0 */
bb_05	:  PC=0x1370 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1890) setp.ge.u32 %ssa_549, %ssa_546, %ssa_548;// vec1  1 ssa_549 = uge ssa_546, ssa_548
bb_05	:  PC=0x1378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1895) @!%ssa_549 bra else_0;

bb_06	:  PC=0x1380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1899) bra loop_0_exit;

bb_07	:  PC=0x1388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1903) bra end_if_0;

bb_08	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1910) end_if_0:
bb_08	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1913) .reg .f32 %ssa_550;
bb_08	:  PC=0x1390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1914) cvt.rn.f32.u32 %ssa_550, %ssa_21_0; // vec1 32 ssa_550 = u2f32 ssa_21.x
bb_08	:  PC=0x1398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1917) mov.f32 %ssa_551, 0F00ffffff; // vec1 32 ssa_551 = load_const (0x00ffffff /* 0.000000 */)
bb_08	:  PC=0x13a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1919) mov.b32 %ssa_551_bits, 0F00ffffff;
bb_08	:  PC=0x13a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1922) mov.f32 %ssa_552, 0F3c6ef35f; // vec1 32 ssa_552 = load_const (0x3c6ef35f /* 0.014584 */)
bb_08	:  PC=0x13b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1924) mov.b32 %ssa_552_bits, 0F3c6ef35f;
bb_08	:  PC=0x13b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1927) mov.f32 %ssa_553, 0F0019660d; // vec1 32 ssa_553 = load_const (0x0019660d /* 0.000000 */)
bb_08	:  PC=0x13c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1929) mov.b32 %ssa_553_bits, 0F0019660d;
bb_08	:  PC=0x13c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1932) mul.lo.s32 %ssa_554, %ssa_553_bits, %ssa_544; // vec1 32 ssa_554 = imul ssa_553, ssa_544
bb_08	:  PC=0x13d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1935) add.s32 %ssa_555, %ssa_554, %ssa_552_bits; // vec1 32 ssa_555 = iadd ssa_554, ssa_552
bb_08	:  PC=0x13d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1938) and.b32 %ssa_556, %ssa_555, %ssa_551;// vec1 32 ssa_556 = iand ssa_555, ssa_551
bb_08	:  PC=0x13e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1941) cvt.rn.f32.u32 %ssa_557, %ssa_556;// vec1 32 ssa_557 = u2f32 ssa_556
bb_08	:  PC=0x13e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1944) mov.f32 %ssa_558, 0F33800000; // vec1 32 ssa_558 = load_const (0x33800000 /* 0.000000 */)
bb_08	:  PC=0x13f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1946) mov.b32 %ssa_558_bits, 0F33800000;
bb_08	:  PC=0x13f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1949) mul.f32 %ssa_559, %ssa_557, %ssa_558;// vec1 32 ssa_559 = fmul ssa_557, ssa_558
bb_08	:  PC=0x1400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1952) add.f32 %ssa_560, %ssa_550, %ssa_559;// vec1 32 ssa_560 = fadd ssa_550, ssa_559
bb_08	:  PC=0x1408 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1955) cvt.rn.f32.u32 %ssa_561, %ssa_21_1; // vec1 32 ssa_561 = u2f32 ssa_21.y
bb_08	:  PC=0x1410 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1958) mul.lo.s32 %ssa_562, %ssa_553_bits, %ssa_555; // vec1 32 ssa_562 = imul ssa_553, ssa_555
bb_08	:  PC=0x1418 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1961) add.s32 %ssa_563, %ssa_562, %ssa_552_bits; // vec1 32 ssa_563 = iadd ssa_562, ssa_552
bb_08	:  PC=0x1420 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1964) and.b32 %ssa_564, %ssa_563, %ssa_551;// vec1 32 ssa_564 = iand ssa_563, ssa_551
bb_08	:  PC=0x1428 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1967) cvt.rn.f32.u32 %ssa_565, %ssa_564;// vec1 32 ssa_565 = u2f32 ssa_564
bb_08	:  PC=0x1430 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1970) mul.f32 %ssa_566, %ssa_565, %ssa_558;// vec1 32 ssa_566 = fmul ssa_565, ssa_558
bb_08	:  PC=0x1438 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1973) add.f32 %ssa_567, %ssa_561, %ssa_566;// vec1 32 ssa_567 = fadd ssa_561, ssa_566
bb_08	:  PC=0x1440 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1979) load_ray_launch_size %ssa_568_0, %ssa_568_1, %ssa_568_2; // vec3 32 ssa_568 = intrinsic load_ray_launch_size () ()
bb_08	:  PC=0x1448 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1982) cvt.rn.f32.u32 %ssa_569, %ssa_568_0; // vec1 32 ssa_569 = u2f32 ssa_568.x
bb_08	:  PC=0x1450 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1985) cvt.rn.f32.u32 %ssa_570, %ssa_568_1; // vec1 32 ssa_570 = u2f32 ssa_568.y
bb_08	:  PC=0x1458 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1988) rcp.approx.f32 %ssa_571, %ssa_569;// vec1 32 ssa_571 = frcp ssa_569
bb_08	:  PC=0x1460 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1991) rcp.approx.f32 %ssa_572, %ssa_570;// vec1 32 ssa_572 = frcp ssa_570
bb_08	:  PC=0x1468 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1994) mul.f32 %ssa_573, %ssa_560, %ssa_14;// vec1 32 ssa_573 = fmul ssa_560, ssa_14
bb_08	:  PC=0x1470 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1997) mul.f32 %ssa_574, %ssa_567, %ssa_14;// vec1 32 ssa_574 = fmul ssa_567, ssa_14
bb_08	:  PC=0x1478 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2000) mul.f32 %ssa_575, %ssa_573, %ssa_571;// vec1 32 ssa_575 = fmul ssa_573, ssa_571
bb_08	:  PC=0x1480 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2003) mul.f32 %ssa_576, %ssa_574, %ssa_572;// vec1 32 ssa_576 = fmul ssa_574, ssa_572
bb_08	:  PC=0x1488 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2007) mov.f32 %ssa_577_0, 0Fbf800000;
bb_08	:  PC=0x1490 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2008) mov.f32 %ssa_577_1, 0Fbf800000;
bb_08	:  PC=0x1498 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2012) add.f32 %ssa_578, %ssa_575, %ssa_577_0; // vec1 32 ssa_578 = fadd ssa_575, ssa_577.x
bb_08	:  PC=0x14a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2015) add.f32 %ssa_579, %ssa_576, %ssa_577_1; // vec1 32 ssa_579 = fadd ssa_576, ssa_577.y
bb_08	:  PC=0x14a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2018) add.u64 %ssa_580, %ssa_18, 272; // vec2 32 ssa_580 = deref_struct &ssa_18->Aperture (ubo float) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.Aperture */
bb_08	:  PC=0x14b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2021) ld.global.f32 %ssa_581, [%ssa_580]; // vec1 32 ssa_581 = intrinsic load_deref (%ssa_580) (0) /* access=0 */
bb_08	:  PC=0x14b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2024) mov.f32 %ssa_582, 0F3f000000; // vec1 32 ssa_582 = load_const (0x3f000000 /* 0.500000 */)
bb_08	:  PC=0x14c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2026) mov.b32 %ssa_582_bits, 0F3f000000;
bb_08	:  PC=0x14c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2029) mul.f32 %ssa_583, %ssa_581, %ssa_582;// vec1 32 ssa_583 = fmul ssa_581, ssa_582
bb_08	:  PC=0x14d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2032) ld.global.u32 %ssa_584, [%ssa_543]; // vec1 32 ssa_584 = intrinsic load_deref (%ssa_543) (0) /* access=0 */
bb_08	:  PC=0x14d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2035) mov.f32 %ssa_585, 0F3f800000; // vec1 32 ssa_585 = load_const (0x3f800000 /* 1.000000 */)
bb_08	:  PC=0x14e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2037) mov.b32 %ssa_585_bits, 0F3f800000;
bb_08	:  PC=0x14e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2039) mov.s32 %ssa_586, %ssa_584; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592

bb_09	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2046) .reg .s32 %ssa_587;
bb_09	:  PC=0x14f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2047) mul.lo.s32 %ssa_587, %ssa_553_bits, %ssa_586; // vec1 32 ssa_587 = imul ssa_553, ssa_586
bb_09	:  PC=0x14f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2050) add.s32 %ssa_588, %ssa_587, %ssa_552_bits; // vec1 32 ssa_588 = iadd ssa_587, ssa_552
bb_09	:  PC=0x1500 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2053) and.b32 %ssa_589, %ssa_588, %ssa_551;// vec1 32 ssa_589 = iand ssa_588, ssa_551
bb_09	:  PC=0x1508 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2056) cvt.rn.f32.u32 %ssa_590, %ssa_589;// vec1 32 ssa_590 = u2f32 ssa_589
bb_09	:  PC=0x1510 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2059) mul.lo.s32 %ssa_591, %ssa_553_bits, %ssa_588; // vec1 32 ssa_591 = imul ssa_553, ssa_588
bb_09	:  PC=0x1518 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2062) add.s32 %ssa_592, %ssa_591, %ssa_552_bits; // vec1 32 ssa_592 = iadd ssa_591, ssa_552
bb_09	:  PC=0x1520 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2065) and.b32 %ssa_593, %ssa_592, %ssa_551;// vec1 32 ssa_593 = iand ssa_592, ssa_551
bb_09	:  PC=0x1528 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2068) cvt.rn.f32.u32 %ssa_594, %ssa_593;// vec1 32 ssa_594 = u2f32 ssa_593
bb_09	:  PC=0x1530 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2071) mov.f32 %ssa_595, 0F34000000; // vec1 32 ssa_595 = load_const (0x34000000 /* 0.000000 */)
bb_09	:  PC=0x1538 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2073) mov.b32 %ssa_595_bits, 0F34000000;
bb_09	:  PC=0x1540 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2076) mul.f32 %ssa_596, %ssa_595, %ssa_590;// vec1 32 ssa_596 = fmul ssa_595, ssa_590
bb_09	:  PC=0x1548 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2079) mul.f32 %ssa_597, %ssa_595, %ssa_594;// vec1 32 ssa_597 = fmul ssa_595, ssa_594
bb_09	:  PC=0x1550 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2082) add.f32 %ssa_598, %ssa_596, %ssa_577_0; // vec1 32 ssa_598 = fadd ssa_596, ssa_577.x
bb_09	:  PC=0x1558 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2085) add.f32 %ssa_599, %ssa_597, %ssa_577_1; // vec1 32 ssa_599 = fadd ssa_597, ssa_577.y
bb_09	:  PC=0x1560 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2088) mul.f32 %ssa_600, %ssa_598, %ssa_598;// vec1 32 ssa_600 = fmul ssa_598, ssa_598
bb_09	:  PC=0x1568 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2091) mul.f32 %ssa_601, %ssa_599, %ssa_599;// vec1 32 ssa_601 = fmul ssa_599, ssa_599
bb_09	:  PC=0x1570 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2094) add.f32 %ssa_602, %ssa_600, %ssa_601;// vec1 32 ssa_602 = fadd ssa_600, ssa_601
bb_09	:  PC=0x1578 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2097) setp.lt.f32 %ssa_603, %ssa_602, %ssa_585;// vec1  1 ssa_603 = flt! ssa_602, ssa_585
bb_09	:  PC=0x1580 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2102) @!%ssa_603 bra else_1;

bb_10	:  PC=0x1588 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2106) bra loop_1_exit;

bb_11	:  PC=0x1590 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2110) bra end_if_1;

bb_12	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2117) end_if_1:
bb_12	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2120) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592
bb_12	:  PC=0x1598 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2120) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592
bb_12	:  PC=0x15a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2123) bra loop_1;

bb_13	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2128) st.global.s32 [%ssa_543], %ssa_592; // intrinsic store_deref (%ssa_543, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
bb_13	:  PC=0x15a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2128) st.global.s32 [%ssa_543], %ssa_592; // intrinsic store_deref (%ssa_543, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
bb_13	:  PC=0x15b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2131) mul.f32 %ssa_604, %ssa_598, %ssa_583;// vec1 32 ssa_604 = fmul ssa_598, ssa_583
bb_13	:  PC=0x15b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2134) mul.f32 %ssa_605, %ssa_599, %ssa_583;// vec1 32 ssa_605 = fmul ssa_599, ssa_583
bb_13	:  PC=0x15c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2137) add.u64 %ssa_606, %ssa_18, 128; // vec2 32 ssa_606 = deref_struct &ssa_18->ModelViewInverse (ubo mat4x16a0B) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse */
bb_13	:  PC=0x15c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2140) add.u64 %ssa_607, %ssa_606, 0; // vec2 32 ssa_607 = deref_array &(*ssa_606)[0] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[0] */
bb_13	:  PC=0x15d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2146) ld.global.f32 %ssa_608_0, [%ssa_607 + 0];
bb_13	:  PC=0x15d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2147) ld.global.f32 %ssa_608_1, [%ssa_607 + 4];
bb_13	:  PC=0x15e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2148) ld.global.f32 %ssa_608_2, [%ssa_607 + 8];
bb_13	:  PC=0x15e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2149) ld.global.f32 %ssa_608_3, [%ssa_607 + 12];
bb_13	:  PC=0x15f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2154) add.u64 %ssa_609, %ssa_606, 16; // vec2 32 ssa_609 = deref_array &(*ssa_606)[1] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[1] */
bb_13	:  PC=0x15f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2160) ld.global.f32 %ssa_610_0, [%ssa_609 + 0];
bb_13	:  PC=0x1600 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2161) ld.global.f32 %ssa_610_1, [%ssa_609 + 4];
bb_13	:  PC=0x1608 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2162) ld.global.f32 %ssa_610_2, [%ssa_609 + 8];
bb_13	:  PC=0x1610 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2163) ld.global.f32 %ssa_610_3, [%ssa_609 + 12];
bb_13	:  PC=0x1618 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2168) mov.f32 %ssa_611, 0F00000003; // vec1 32 ssa_611 = load_const (0x00000003 /* 0.000000 */)
bb_13	:  PC=0x1620 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2170) mov.b32 %ssa_611_bits, 0F00000003;
bb_13	:  PC=0x1628 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2173) add.u64 %ssa_612, %ssa_606, 48; // vec2 32 ssa_612 = deref_array &(*ssa_606)[3] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[3] */
bb_13	:  PC=0x1630 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2179) ld.global.f32 %ssa_613_0, [%ssa_612 + 0];
bb_13	:  PC=0x1638 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2180) ld.global.f32 %ssa_613_1, [%ssa_612 + 4];
bb_13	:  PC=0x1640 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2181) ld.global.f32 %ssa_613_2, [%ssa_612 + 8];
bb_13	:  PC=0x1648 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2182) ld.global.f32 %ssa_613_3, [%ssa_612 + 12];
bb_13	:  PC=0x1650 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2187) mul.f32 %ssa_614, %ssa_610_0, %ssa_605; // vec1 32 ssa_614 = fmul ssa_610.x, ssa_605
bb_13	:  PC=0x1658 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2190) mul.f32 %ssa_615, %ssa_610_1, %ssa_605; // vec1 32 ssa_615 = fmul ssa_610.y, ssa_605
bb_13	:  PC=0x1660 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2193) mul.f32 %ssa_616, %ssa_610_2, %ssa_605; // vec1 32 ssa_616 = fmul ssa_610.z, ssa_605
bb_13	:  PC=0x1668 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2196) mul.f32 %ssa_617, %ssa_610_3, %ssa_605; // vec1 32 ssa_617 = fmul ssa_610.w, ssa_605
bb_13	:  PC=0x1670 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2199) add.f32 %ssa_618, %ssa_614, %ssa_613_0; // vec1 32 ssa_618 = fadd ssa_614, ssa_613.x
bb_13	:  PC=0x1678 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2202) add.f32 %ssa_619, %ssa_615, %ssa_613_1; // vec1 32 ssa_619 = fadd ssa_615, ssa_613.y
bb_13	:  PC=0x1680 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2205) add.f32 %ssa_620, %ssa_616, %ssa_613_2; // vec1 32 ssa_620 = fadd ssa_616, ssa_613.z
bb_13	:  PC=0x1688 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2208) add.f32 %ssa_621, %ssa_617, %ssa_613_3; // vec1 32 ssa_621 = fadd ssa_617, ssa_613.w
bb_13	:  PC=0x1690 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2211) mul.f32 %ssa_622, %ssa_608_0, %ssa_604; // vec1 32 ssa_622 = fmul ssa_608.x, ssa_604
bb_13	:  PC=0x1698 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2214) mul.f32 %ssa_623, %ssa_608_1, %ssa_604; // vec1 32 ssa_623 = fmul ssa_608.y, ssa_604
bb_13	:  PC=0x16a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2217) mul.f32 %ssa_624, %ssa_608_2, %ssa_604; // vec1 32 ssa_624 = fmul ssa_608.z, ssa_604
bb_13	:  PC=0x16a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2220) mul.f32 %ssa_625, %ssa_608_3, %ssa_604; // vec1 32 ssa_625 = fmul ssa_608.w, ssa_604
bb_13	:  PC=0x16b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2223) add.f32 %ssa_626, %ssa_622, %ssa_618;// vec1 32 ssa_626 = fadd ssa_622, ssa_618
bb_13	:  PC=0x16b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2226) add.f32 %ssa_627, %ssa_623, %ssa_619;// vec1 32 ssa_627 = fadd ssa_623, ssa_619
bb_13	:  PC=0x16c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2229) add.f32 %ssa_628, %ssa_624, %ssa_620;// vec1 32 ssa_628 = fadd ssa_624, ssa_620
bb_13	:  PC=0x16c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2232) add.f32 %ssa_629, %ssa_625, %ssa_621;// vec1 32 ssa_629 = fadd ssa_625, ssa_621
bb_13	:  PC=0x16d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2238) mov.f32 %ssa_630_0, %ssa_626;
bb_13	:  PC=0x16d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2239) mov.f32 %ssa_630_1, %ssa_627;
bb_13	:  PC=0x16e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2240) mov.f32 %ssa_630_2, %ssa_628;
bb_13	:  PC=0x16e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2241) mov.f32 %ssa_630_3, %ssa_629; // vec4 32 ssa_630 = vec4 ssa_626, ssa_627, ssa_628, ssa_629
bb_13	:  PC=0x16f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2244) add.u64 %ssa_631, %ssa_18, 192; // vec2 32 ssa_631 = deref_struct &ssa_18->ProjectionInverse (ubo mat4x16a0B) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse */
bb_13	:  PC=0x16f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2247) add.u64 %ssa_632, %ssa_631, 0; // vec2 32 ssa_632 = deref_array &(*ssa_631)[0] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[0] */
bb_13	:  PC=0x1700 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2253) ld.global.f32 %ssa_633_0, [%ssa_632 + 0];
bb_13	:  PC=0x1708 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2254) ld.global.f32 %ssa_633_1, [%ssa_632 + 4];
bb_13	:  PC=0x1710 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2255) ld.global.f32 %ssa_633_2, [%ssa_632 + 8];
bb_13	:  PC=0x1718 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2256) ld.global.f32 %ssa_633_3, [%ssa_632 + 12];
bb_13	:  PC=0x1720 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2261) add.u64 %ssa_634, %ssa_631, 16; // vec2 32 ssa_634 = deref_array &(*ssa_631)[1] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[1] */
bb_13	:  PC=0x1728 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2267) ld.global.f32 %ssa_635_0, [%ssa_634 + 0];
bb_13	:  PC=0x1730 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2268) ld.global.f32 %ssa_635_1, [%ssa_634 + 4];
bb_13	:  PC=0x1738 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2269) ld.global.f32 %ssa_635_2, [%ssa_634 + 8];
bb_13	:  PC=0x1740 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2270) ld.global.f32 %ssa_635_3, [%ssa_634 + 12];
bb_13	:  PC=0x1748 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2275) mov.f32 %ssa_636, 0F00000002; // vec1 32 ssa_636 = load_const (0x00000002 /* 0.000000 */)
bb_13	:  PC=0x1750 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2277) mov.b32 %ssa_636_bits, 0F00000002;
bb_13	:  PC=0x1758 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2280) add.u64 %ssa_637, %ssa_631, 32; // vec2 32 ssa_637 = deref_array &(*ssa_631)[2] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[2] */
bb_13	:  PC=0x1760 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2286) ld.global.f32 %ssa_638_0, [%ssa_637 + 0];
bb_13	:  PC=0x1768 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2287) ld.global.f32 %ssa_638_1, [%ssa_637 + 4];
bb_13	:  PC=0x1770 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2288) ld.global.f32 %ssa_638_2, [%ssa_637 + 8];
bb_13	:  PC=0x1778 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2289) ld.global.f32 %ssa_638_3, [%ssa_637 + 12];
bb_13	:  PC=0x1780 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2294) add.u64 %ssa_639, %ssa_631, 48; // vec2 32 ssa_639 = deref_array &(*ssa_631)[3] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[3] */
bb_13	:  PC=0x1788 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2300) ld.global.f32 %ssa_640_0, [%ssa_639 + 0];
bb_13	:  PC=0x1790 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2301) ld.global.f32 %ssa_640_1, [%ssa_639 + 4];
bb_13	:  PC=0x1798 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2302) ld.global.f32 %ssa_640_2, [%ssa_639 + 8];
bb_13	:  PC=0x17a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2303) ld.global.f32 %ssa_640_3, [%ssa_639 + 12];
bb_13	:  PC=0x17a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2308) add.f32 %ssa_641, %ssa_638_0, %ssa_640_0; // vec1 32 ssa_641 = fadd ssa_638.x, ssa_640.x
bb_13	:  PC=0x17b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2311) add.f32 %ssa_642, %ssa_638_1, %ssa_640_1; // vec1 32 ssa_642 = fadd ssa_638.y, ssa_640.y
bb_13	:  PC=0x17b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2314) add.f32 %ssa_643, %ssa_638_2, %ssa_640_2; // vec1 32 ssa_643 = fadd ssa_638.z, ssa_640.z
bb_13	:  PC=0x17c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2317) mul.f32 %ssa_644, %ssa_635_0, %ssa_579; // vec1 32 ssa_644 = fmul ssa_635.x, ssa_579
bb_13	:  PC=0x17c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2320) mul.f32 %ssa_645, %ssa_635_1, %ssa_579; // vec1 32 ssa_645 = fmul ssa_635.y, ssa_579
bb_13	:  PC=0x17d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2323) mul.f32 %ssa_646, %ssa_635_2, %ssa_579; // vec1 32 ssa_646 = fmul ssa_635.z, ssa_579
bb_13	:  PC=0x17d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2326) add.f32 %ssa_647, %ssa_644, %ssa_641;// vec1 32 ssa_647 = fadd ssa_644, ssa_641
bb_13	:  PC=0x17e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2329) add.f32 %ssa_648, %ssa_645, %ssa_642;// vec1 32 ssa_648 = fadd ssa_645, ssa_642
bb_13	:  PC=0x17e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2332) add.f32 %ssa_649, %ssa_646, %ssa_643;// vec1 32 ssa_649 = fadd ssa_646, ssa_643
bb_13	:  PC=0x17f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2335) mul.f32 %ssa_650, %ssa_633_0, %ssa_578; // vec1 32 ssa_650 = fmul ssa_633.x, ssa_578
bb_13	:  PC=0x17f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2338) mul.f32 %ssa_651, %ssa_633_1, %ssa_578; // vec1 32 ssa_651 = fmul ssa_633.y, ssa_578
bb_13	:  PC=0x1800 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2341) mul.f32 %ssa_652, %ssa_633_2, %ssa_578; // vec1 32 ssa_652 = fmul ssa_633.z, ssa_578
bb_13	:  PC=0x1808 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2344) add.f32 %ssa_653, %ssa_650, %ssa_647;// vec1 32 ssa_653 = fadd ssa_650, ssa_647
bb_13	:  PC=0x1810 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2347) add.f32 %ssa_654, %ssa_651, %ssa_648;// vec1 32 ssa_654 = fadd ssa_651, ssa_648
bb_13	:  PC=0x1818 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2350) add.f32 %ssa_655, %ssa_652, %ssa_649;// vec1 32 ssa_655 = fadd ssa_652, ssa_649
bb_13	:  PC=0x1820 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2353) add.u64 %ssa_656, %ssa_606, 32; // vec2 32 ssa_656 = deref_array &(*ssa_606)[2] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[2] */
bb_13	:  PC=0x1828 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2359) ld.global.f32 %ssa_657_0, [%ssa_656 + 0];
bb_13	:  PC=0x1830 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2360) ld.global.f32 %ssa_657_1, [%ssa_656 + 4];
bb_13	:  PC=0x1838 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2361) ld.global.f32 %ssa_657_2, [%ssa_656 + 8];
bb_13	:  PC=0x1840 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2362) ld.global.f32 %ssa_657_3, [%ssa_656 + 12];
bb_13	:  PC=0x1848 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2367) add.u64 %ssa_658, %ssa_18, 276; // vec2 32 ssa_658 = deref_struct &ssa_18->FocusDistance (ubo float) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.FocusDistance */
bb_13	:  PC=0x1850 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2370) ld.global.f32 %ssa_659, [%ssa_658]; // vec1 32 ssa_659 = intrinsic load_deref (%ssa_658) (0) /* access=0 */
bb_13	:  PC=0x1858 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2373) mul.f32 %ssa_660, %ssa_653, %ssa_659;// vec1 32 ssa_660 = fmul ssa_653, ssa_659
bb_13	:  PC=0x1860 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2376) mul.f32 %ssa_661, %ssa_654, %ssa_659;// vec1 32 ssa_661 = fmul ssa_654, ssa_659
bb_13	:  PC=0x1868 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2379) mul.f32 %ssa_662, %ssa_655, %ssa_659;// vec1 32 ssa_662 = fmul ssa_655, ssa_659
bb_13	:  PC=0x1870 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2382) neg.f32 %ssa_663, %ssa_604;// vec1 32 ssa_663 = fneg ssa_604
bb_13	:  PC=0x1878 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2385) neg.f32 %ssa_664, %ssa_605;// vec1 32 ssa_664 = fneg ssa_605
bb_13	:  PC=0x1880 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2388) add.f32 %ssa_665, %ssa_660, %ssa_663;// vec1 32 ssa_665 = fadd ssa_660, ssa_663
bb_13	:  PC=0x1888 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2391) add.f32 %ssa_666, %ssa_661, %ssa_664;// vec1 32 ssa_666 = fadd ssa_661, ssa_664
bb_13	:  PC=0x1890 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2394) mul.f32 %ssa_667, %ssa_665, %ssa_665;// vec1 32 ssa_667 = fmul ssa_665, ssa_665
bb_13	:  PC=0x1898 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2397) mul.f32 %ssa_668, %ssa_666, %ssa_666;// vec1 32 ssa_668 = fmul ssa_666, ssa_666
bb_13	:  PC=0x18a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2400) mul.f32 %ssa_669, %ssa_662, %ssa_662;// vec1 32 ssa_669 = fmul ssa_662, ssa_662
bb_13	:  PC=0x18a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2406) mov.f32 %ssa_670_0, %ssa_667;
bb_13	:  PC=0x18b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2407) mov.f32 %ssa_670_1, %ssa_668;
bb_13	:  PC=0x18b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2408) mov.f32 %ssa_670_2, %ssa_669; // vec3 32 ssa_670 = vec3 ssa_667, ssa_668, ssa_669
bb_13	:  PC=0x18c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2411) add.f32 %ssa_671, %ssa_670_0, %ssa_670_1;
bb_13	:  PC=0x18c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2412) add.f32 %ssa_671, %ssa_671, %ssa_670_2; // vec1 32 ssa_671 = fsum3 ssa_670
bb_13	:  PC=0x18d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2415) rsqrt.approx.f32 %ssa_672, %ssa_671;// vec1 32 ssa_672 = frsq ssa_671
bb_13	:  PC=0x18d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2418) mul.f32 %ssa_673, %ssa_665, %ssa_672;// vec1 32 ssa_673 = fmul ssa_665, ssa_672
bb_13	:  PC=0x18e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2421) mul.f32 %ssa_674, %ssa_666, %ssa_672;// vec1 32 ssa_674 = fmul ssa_666, ssa_672
bb_13	:  PC=0x18e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2424) mul.f32 %ssa_675, %ssa_662, %ssa_672;// vec1 32 ssa_675 = fmul ssa_662, ssa_672
bb_13	:  PC=0x18f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2427) mul.f32 %ssa_676, %ssa_657_0, %ssa_675; // vec1 32 ssa_676 = fmul ssa_657.x, ssa_675
bb_13	:  PC=0x18f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2430) mul.f32 %ssa_677, %ssa_657_1, %ssa_675; // vec1 32 ssa_677 = fmul ssa_657.y, ssa_675
bb_13	:  PC=0x1900 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2433) mul.f32 %ssa_678, %ssa_657_2, %ssa_675; // vec1 32 ssa_678 = fmul ssa_657.z, ssa_675
bb_13	:  PC=0x1908 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2436) mul.f32 %ssa_679, %ssa_657_3, %ssa_675; // vec1 32 ssa_679 = fmul ssa_657.w, ssa_675
bb_13	:  PC=0x1910 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2439) mul.f32 %ssa_680, %ssa_610_0, %ssa_674; // vec1 32 ssa_680 = fmul ssa_610.x, ssa_674
bb_13	:  PC=0x1918 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2442) mul.f32 %ssa_681, %ssa_610_1, %ssa_674; // vec1 32 ssa_681 = fmul ssa_610.y, ssa_674
bb_13	:  PC=0x1920 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2445) mul.f32 %ssa_682, %ssa_610_2, %ssa_674; // vec1 32 ssa_682 = fmul ssa_610.z, ssa_674
bb_13	:  PC=0x1928 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2448) mul.f32 %ssa_683, %ssa_610_3, %ssa_674; // vec1 32 ssa_683 = fmul ssa_610.w, ssa_674
bb_13	:  PC=0x1930 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2451) add.f32 %ssa_684, %ssa_680, %ssa_676;// vec1 32 ssa_684 = fadd ssa_680, ssa_676
bb_13	:  PC=0x1938 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2454) add.f32 %ssa_685, %ssa_681, %ssa_677;// vec1 32 ssa_685 = fadd ssa_681, ssa_677
bb_13	:  PC=0x1940 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2457) add.f32 %ssa_686, %ssa_682, %ssa_678;// vec1 32 ssa_686 = fadd ssa_682, ssa_678
bb_13	:  PC=0x1948 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2460) add.f32 %ssa_687, %ssa_683, %ssa_679;// vec1 32 ssa_687 = fadd ssa_683, ssa_679
bb_13	:  PC=0x1950 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2463) mul.f32 %ssa_688, %ssa_608_0, %ssa_673; // vec1 32 ssa_688 = fmul ssa_608.x, ssa_673
bb_13	:  PC=0x1958 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2466) mul.f32 %ssa_689, %ssa_608_1, %ssa_673; // vec1 32 ssa_689 = fmul ssa_608.y, ssa_673
bb_13	:  PC=0x1960 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2469) mul.f32 %ssa_690, %ssa_608_2, %ssa_673; // vec1 32 ssa_690 = fmul ssa_608.z, ssa_673
bb_13	:  PC=0x1968 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2472) mul.f32 %ssa_691, %ssa_608_3, %ssa_673; // vec1 32 ssa_691 = fmul ssa_608.w, ssa_673
bb_13	:  PC=0x1970 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2475) add.f32 %ssa_692, %ssa_688, %ssa_684;// vec1 32 ssa_692 = fadd ssa_688, ssa_684
bb_13	:  PC=0x1978 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2478) add.f32 %ssa_693, %ssa_689, %ssa_685;// vec1 32 ssa_693 = fadd ssa_689, ssa_685
bb_13	:  PC=0x1980 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2481) add.f32 %ssa_694, %ssa_690, %ssa_686;// vec1 32 ssa_694 = fadd ssa_690, ssa_686
bb_13	:  PC=0x1988 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2484) add.f32 %ssa_695, %ssa_691, %ssa_687;// vec1 32 ssa_695 = fadd ssa_691, ssa_687
bb_13	:  PC=0x1990 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2490) mov.f32 %ssa_696_0, %ssa_692;
bb_13	:  PC=0x1998 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2491) mov.f32 %ssa_696_1, %ssa_693;
bb_13	:  PC=0x19a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2492) mov.f32 %ssa_696_2, %ssa_694;
bb_13	:  PC=0x19a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2493) mov.f32 %ssa_696_3, %ssa_695; // vec4 32 ssa_696 = vec4 ssa_692, ssa_693, ssa_694, ssa_695
bb_13	:  PC=0x19b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2496) mov.f32 %ssa_770, %ssa_630_0; // vec1 32 ssa_770 = mov ssa_630.x
bb_13	:  PC=0x19b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2499) mov.f32 %ssa_773, %ssa_630_1; // vec1 32 ssa_773 = mov ssa_630.y
bb_13	:  PC=0x19c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2502) mov.f32 %ssa_776, %ssa_630_2; // vec1 32 ssa_776 = mov ssa_630.z
bb_13	:  PC=0x19c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2505) mov.f32 %ssa_779, %ssa_630_3; // vec1 32 ssa_779 = mov ssa_630.w
bb_13	:  PC=0x19d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2508) mov.f32 %ssa_783, %ssa_696_0; // vec1 32 ssa_783 = mov ssa_696.x
bb_13	:  PC=0x19d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2511) mov.f32 %ssa_786, %ssa_696_1; // vec1 32 ssa_786 = mov ssa_696.y
bb_13	:  PC=0x19e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2514) mov.f32 %ssa_789, %ssa_696_2; // vec1 32 ssa_789 = mov ssa_696.z
bb_13	:  PC=0x19e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2517) mov.f32 %ssa_792, %ssa_696_3; // vec1 32 ssa_792 = mov ssa_696.w
bb_13	:  PC=0x19f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2520) mov.f32 %ssa_835, 0F3f800000; // vec1 32 ssa_835 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x19f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2522) mov.b32 %ssa_835_bits, 0F3f800000;
bb_13	:  PC=0x1a00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2525) mov.f32 %ssa_836, 0F3f800000; // vec1 32 ssa_836 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x1a08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2527) mov.b32 %ssa_836_bits, 0F3f800000;
bb_13	:  PC=0x1a10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2530) mov.f32 %ssa_837, 0F3f800000; // vec1 32 ssa_837 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x1a18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2532) mov.b32 %ssa_837_bits, 0F3f800000;
bb_13	:  PC=0x1a20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2534) mov.f32 %ssa_772, %ssa_770; // vec1 32 ssa_772 = phi block_9: ssa_770, block_19: ssa_771
bb_13	:  PC=0x1a28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2535) mov.f32 %ssa_775, %ssa_773; // vec1 32 ssa_775 = phi block_9: ssa_773, block_19: ssa_774
bb_13	:  PC=0x1a30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2536) mov.f32 %ssa_778, %ssa_776; // vec1 32 ssa_778 = phi block_9: ssa_776, block_19: ssa_777
bb_13	:  PC=0x1a38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2537) mov.f32 %ssa_781, %ssa_779; // vec1 32 ssa_781 = phi block_9: ssa_779, block_19: ssa_780
bb_13	:  PC=0x1a40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2538) mov.f32 %ssa_785, %ssa_783; // vec1 32 ssa_785 = phi block_9: ssa_783, block_19: ssa_784
bb_13	:  PC=0x1a48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2539) mov.f32 %ssa_788, %ssa_786; // vec1 32 ssa_788 = phi block_9: ssa_786, block_19: ssa_787
bb_13	:  PC=0x1a50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2540) mov.f32 %ssa_791, %ssa_789; // vec1 32 ssa_791 = phi block_9: ssa_789, block_19: ssa_790
bb_13	:  PC=0x1a58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2541) mov.f32 %ssa_794, %ssa_792; // vec1 32 ssa_794 = phi block_9: ssa_792, block_19: ssa_793
bb_13	:  PC=0x1a60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2542) mov.f32 %ssa_798, %ssa_835; // vec1 32 ssa_798 = phi block_9: ssa_835, block_19: ssa_797
bb_13	:  PC=0x1a68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2543) mov.f32 %ssa_801, %ssa_836; // vec1 32 ssa_801 = phi block_9: ssa_836, block_19: ssa_800
bb_13	:  PC=0x1a70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2544) mov.f32 %ssa_804, %ssa_837; // vec1 32 ssa_804 = phi block_9: ssa_837, block_19: ssa_803
bb_13	:  PC=0x1a78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2545) mov.s32 %ssa_700, %ssa_2_bits; // vec1 32 ssa_700 = phi block_9: ssa_2, block_19: ssa_730

bb_14	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2563) .reg .b32 %ssa_805_0;
bb_14	:  PC=0x1a80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2567) mov.b32 %ssa_805_0, %ssa_798;
bb_14	:  PC=0x1a88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2568) mov.b32 %ssa_805_1, %ssa_801;
bb_14	:  PC=0x1a90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2569) mov.b32 %ssa_805_2, %ssa_804; // vec3 32 ssa_805 = vec3 ssa_798, ssa_801, ssa_804
bb_14	:  PC=0x1a98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2575) mov.b32 %ssa_795_0, %ssa_785;
bb_14	:  PC=0x1aa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2576) mov.b32 %ssa_795_1, %ssa_788;
bb_14	:  PC=0x1aa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2577) mov.b32 %ssa_795_2, %ssa_791;
bb_14	:  PC=0x1ab0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2578) mov.b32 %ssa_795_3, %ssa_794; // vec4 32 ssa_795 = vec4 ssa_785, ssa_788, ssa_791, ssa_794
bb_14	:  PC=0x1ab8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2584) mov.b32 %ssa_782_0, %ssa_772;
bb_14	:  PC=0x1ac0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2585) mov.b32 %ssa_782_1, %ssa_775;
bb_14	:  PC=0x1ac8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2586) mov.b32 %ssa_782_2, %ssa_778;
bb_14	:  PC=0x1ad0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2587) mov.b32 %ssa_782_3, %ssa_781; // vec4 32 ssa_782 = vec4 ssa_772, ssa_775, ssa_778, ssa_781
bb_14	:  PC=0x1ad8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2590) add.u64 %ssa_701, %ssa_18, 292; // vec2 32 ssa_701 = deref_struct &ssa_18->NumberOfBounces (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.NumberOfBounces */
bb_14	:  PC=0x1ae0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2593) ld.global.u32 %ssa_702, [%ssa_701]; // vec1 32 ssa_702 = intrinsic load_deref (%ssa_701) (0) /* access=0 */
bb_14	:  PC=0x1ae8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2596) setp.lt.u32 %ssa_703, %ssa_702, %ssa_700;// vec1  1 ssa_703 = ult ssa_702, ssa_700
bb_14	:  PC=0x1af0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2601) @!%ssa_703 bra else_2;

bb_15	:  PC=0x1af8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2606) mov.b32 %ssa_808, %ssa_805_0; // vec1 32 ssa_808 = mov ssa_805.x
bb_15	:  PC=0x1b00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2609) mov.b32 %ssa_812, %ssa_805_1; // vec1 32 ssa_812 = mov ssa_805.y
bb_15	:  PC=0x1b08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2612) mov.b32 %ssa_816, %ssa_805_2; // vec1 32 ssa_816 = mov ssa_805.z
bb_15	:  PC=0x1b10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2614) mov.f32 %ssa_809, %ssa_808; // vec1 32 ssa_809 = phi block_14: ssa_838, block_17: ssa_807, block_11: ssa_808
bb_15	:  PC=0x1b18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2615) mov.f32 %ssa_813, %ssa_812; // vec1 32 ssa_813 = phi block_14: ssa_839, block_17: ssa_811, block_11: ssa_812
bb_15	:  PC=0x1b20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2616) mov.f32 %ssa_817, %ssa_816; // vec1 32 ssa_817 = phi block_14: ssa_840, block_17: ssa_815, block_11: ssa_816
bb_15	:  PC=0x1b28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2617) bra loop_2_exit;

bb_16	:  PC=0x1b30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2621) bra end_if_2;

bb_17	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2628) end_if_2:
bb_17	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2631) .reg .pred %ssa_704;
bb_17	:  PC=0x1b38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2632) setp.eq.s32 %ssa_704, %ssa_700, %ssa_702;// vec1  1 ssa_704 = ieq ssa_700, ssa_702
bb_17	:  PC=0x1b40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2637) @!%ssa_704 bra else_3;

bb_18	:  PC=0x1b48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2642) mov.f32 %ssa_838, 0F00000000; // vec1 32 ssa_838 = load_const (0x00000000 /* 0.000000 */)
bb_18	:  PC=0x1b50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2644) mov.b32 %ssa_838_bits, 0F00000000;
bb_18	:  PC=0x1b58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2647) mov.f32 %ssa_839, 0F00000000; // vec1 32 ssa_839 = load_const (0x00000000 /* 0.000000 */)
bb_18	:  PC=0x1b60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2649) mov.b32 %ssa_839_bits, 0F00000000;
bb_18	:  PC=0x1b68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2652) mov.f32 %ssa_840, 0F00000000; // vec1 32 ssa_840 = load_const (0x00000000 /* 0.000000 */)
bb_18	:  PC=0x1b70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2654) mov.b32 %ssa_840_bits, 0F00000000;
bb_18	:  PC=0x1b78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2656) mov.f32 %ssa_809, %ssa_838; // vec1 32 ssa_809 = phi block_14: ssa_838, block_17: ssa_807, block_11: ssa_808
bb_18	:  PC=0x1b80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2657) mov.f32 %ssa_813, %ssa_839; // vec1 32 ssa_813 = phi block_14: ssa_839, block_17: ssa_811, block_11: ssa_812
bb_18	:  PC=0x1b88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2658) mov.f32 %ssa_817, %ssa_840; // vec1 32 ssa_817 = phi block_14: ssa_840, block_17: ssa_815, block_11: ssa_816
bb_18	:  PC=0x1b90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2659) bra loop_2_exit;

bb_19	:  PC=0x1b98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2663) bra end_if_3;

bb_20	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2670) end_if_3:
bb_20	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2673) .reg .b64 %ssa_705;
bb_20	:  PC=0x1ba0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2674) load_vulkan_descriptor %ssa_705, 0, 0, 1000150000; // vec1 64 ssa_705 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
bb_20	:  PC=0x1ba8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2677) mov.b64 %ssa_706, %ssa_705; // vec1 64 ssa_706 = intrinsic load_vulkan_descriptor (%ssa_705) (1000150000) /* desc_type=accel-struct */
bb_20	:  PC=0x1bb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2683) mov.b32 %ssa_707_0, %ssa_782_0;
bb_20	:  PC=0x1bb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2684) mov.b32 %ssa_707_1, %ssa_782_1;
bb_20	:  PC=0x1bc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2685) mov.b32 %ssa_707_2, %ssa_782_2; // vec3 32 ssa_707 = vec3 ssa_782.x, ssa_782.y, ssa_782.z
bb_20	:  PC=0x1bc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2691) mov.b32 %ssa_708_0, %ssa_795_0;
bb_20	:  PC=0x1bd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2692) mov.b32 %ssa_708_1, %ssa_795_1;
bb_20	:  PC=0x1bd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2693) mov.b32 %ssa_708_2, %ssa_795_2; // vec3 32 ssa_708 = vec3 ssa_795.x, ssa_795.y, ssa_795.z
bb_20	:  PC=0x1be0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2696) trace_ray %ssa_706, %ssa_8, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_707_0, %ssa_707_1, %ssa_707_2, %ssa_10, %ssa_708_0, %ssa_708_1, %ssa_708_2, %ssa_9, %traversal_finished_0; // intrinsic trace_ray (%ssa_706, %ssa_8, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_707, %ssa_10, %ssa_708, %ssa_9, %ssa_542) ()
bb_20	:  PC=0x1be8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2699) mov.u32 %intersection_counter_0, 0;

bb_21	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2701) .reg .pred %intersections_exit_0;
bb_21	:  PC=0x1bf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2702) intersection_exit.pred %intersections_exit_0, %intersection_counter_0, %traversal_finished_0;
bb_21	:  PC=0x1bf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) @%intersections_exit_0 bra exit_intersection_label_0;

bb_22	:  PC=0x1c00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2705) get_intersection_shader_data_address %shader_data_address_0, %intersection_counter_0;
bb_22	:  PC=0x1c08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2707) get_intersection_shaderID %intersection_shaderID_0, %intersection_counter_0;
bb_22	:  PC=0x1c10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2709) setp.ne.u32 %skip_intersection_8_0, %intersection_shaderID_0, 8;
bb_22	:  PC=0x1c18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2710) @%skip_intersection_8_0 bra skip_intersection_label_8_0;

bb_23	:  PC=0x1c20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2711) call_intersection_shader %intersection_counter_0;

bb_24	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2713) .reg .pred %skip_intersection_6_0;
bb_24	:  PC=0x1c28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2714) setp.ne.u32 %skip_intersection_6_0, %intersection_shaderID_0, 6;
bb_24	:  PC=0x1c30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2715) @%skip_intersection_6_0 bra skip_intersection_label_6_0;

bb_25	:  PC=0x1c38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2716) call_intersection_shader %intersection_counter_0;

bb_26	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2718) .reg .pred %skip_intersection_7_0;
bb_26	:  PC=0x1c40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2719) setp.ne.u32 %skip_intersection_7_0, %intersection_shaderID_0, 7;
bb_26	:  PC=0x1c48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2720) @%skip_intersection_7_0 bra skip_intersection_label_7_0;

bb_27	:  PC=0x1c50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2721) call_intersection_shader %intersection_counter_0;

bb_28	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2723) .reg .pred %skip_intersection_9_0;
bb_28	:  PC=0x1c58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2724) setp.ne.u32 %skip_intersection_9_0, %intersection_shaderID_0, 9;
bb_28	:  PC=0x1c60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2725) @%skip_intersection_9_0 bra skip_intersection_label_9_0;

bb_29	:  PC=0x1c68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2726) call_intersection_shader %intersection_counter_0;

bb_30	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2728) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
bb_30	:  PC=0x1c70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2728) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
bb_30	:  PC=0x1c78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2729) bra intersection_loop_0;

bb_31	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2733) .reg .pred %hit_geometry_0;
bb_31	:  PC=0x1c80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2734) hit_geometry.pred %hit_geometry_0, %traversal_finished_0;
bb_31	:  PC=0x1c88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2736) @!%hit_geometry_0 bra exit_closest_hit_label_0;

bb_32	:  PC=0x1c90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2738) get_closest_hit_shaderID %closest_hit_shaderID_0;
bb_32	:  PC=0x1c98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2740) setp.ne.u32 %skip_closest_hit_3_0, %closest_hit_shaderID_0, 3;
bb_32	:  PC=0x1ca0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2741) @%skip_closest_hit_3_0 bra skip_closest_hit_label_3_0;

bb_33	:  PC=0x1ca8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2742) call_closest_hit_shader 3;

bb_34	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2744) .reg .pred %skip_closest_hit_2_0;
bb_34	:  PC=0x1cb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2745) setp.ne.u32 %skip_closest_hit_2_0, %closest_hit_shaderID_0, 2;
bb_34	:  PC=0x1cb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2746) @%skip_closest_hit_2_0 bra skip_closest_hit_label_2_0;

bb_35	:  PC=0x1cc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2747) call_closest_hit_shader 2;

bb_36	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2749) .reg .pred %skip_closest_hit_5_0;
bb_36	:  PC=0x1cc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2750) setp.ne.u32 %skip_closest_hit_5_0, %closest_hit_shaderID_0, 5;
bb_36	:  PC=0x1cd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2751) @%skip_closest_hit_5_0 bra skip_closest_hit_label_5_0;

bb_37	:  PC=0x1cd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2752) call_closest_hit_shader 5;

bb_38	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2754) .reg .pred %skip_closest_hit_4_0;
bb_38	:  PC=0x1ce0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2755) setp.ne.u32 %skip_closest_hit_4_0, %closest_hit_shaderID_0, 4;
bb_38	:  PC=0x1ce8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2756) @%skip_closest_hit_4_0 bra skip_closest_hit_label_4_0;

bb_39	:  PC=0x1cf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2757) call_closest_hit_shader 4;

bb_40	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2759) exit_closest_hit_label_0:
bb_40	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) @%hit_geometry_0 bra skip_miss_label_0;
bb_40	:  PC=0x1cf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) @%hit_geometry_0 bra skip_miss_label_0;

bb_41	:  PC=0x1d00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2762) call_miss_shader ;

bb_42	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2765) end_trace_ray ;
bb_42	:  PC=0x1d08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2765) end_trace_ray ;
bb_42	:  PC=0x1d10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2768) add.u64 %ssa_709, %ssa_542, 0; // vec1 32 ssa_709 = deref_struct &ssa_542->ColorAndDistance (function_temp vec4) /* &Ray.ColorAndDistance */
bb_42	:  PC=0x1d18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2774) ld.global.f32 %ssa_710_0, [%ssa_709 + 0];
bb_42	:  PC=0x1d20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2775) ld.global.f32 %ssa_710_1, [%ssa_709 + 4];
bb_42	:  PC=0x1d28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2776) ld.global.f32 %ssa_710_2, [%ssa_709 + 8];
bb_42	:  PC=0x1d30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2777) ld.global.f32 %ssa_710_3, [%ssa_709 + 12];
bb_42	:  PC=0x1d38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2782) add.u64 %ssa_711, %ssa_542, 16; // vec1 32 ssa_711 = deref_struct &ssa_542->ScatterDirection (function_temp vec4) /* &Ray.ScatterDirection */
bb_42	:  PC=0x1d40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2788) ld.global.f32 %ssa_712_0, [%ssa_711 + 0];
bb_42	:  PC=0x1d48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2789) ld.global.f32 %ssa_712_1, [%ssa_711 + 4];
bb_42	:  PC=0x1d50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2790) ld.global.f32 %ssa_712_2, [%ssa_711 + 8];
bb_42	:  PC=0x1d58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2791) ld.global.f32 %ssa_712_3, [%ssa_711 + 12];
bb_42	:  PC=0x1d60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2796) setp.lt.f32 %ssa_713, %ssa_2, %ssa_712_3; // vec1  1 ssa_713 = flt! ssa_2, ssa_712.w
bb_42	:  PC=0x1d68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2799) mul.f32 %ssa_714, %ssa_805_0, %ssa_710_0; // vec1 32 ssa_714 = fmul ssa_805.x, ssa_710.x
bb_42	:  PC=0x1d70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2802) mul.f32 %ssa_715, %ssa_805_1, %ssa_710_1; // vec1 32 ssa_715 = fmul ssa_805.y, ssa_710.y
bb_42	:  PC=0x1d78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2805) mul.f32 %ssa_716, %ssa_805_2, %ssa_710_2; // vec1 32 ssa_716 = fmul ssa_805.z, ssa_710.z
bb_42	:  PC=0x1d80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2811) mov.f32 %ssa_717_0, %ssa_714;
bb_42	:  PC=0x1d88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2812) mov.f32 %ssa_717_1, %ssa_715;
bb_42	:  PC=0x1d90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2813) mov.f32 %ssa_717_2, %ssa_716; // vec3 32 ssa_717 = vec3 ssa_714, ssa_715, ssa_716
bb_42	:  PC=0x1d98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2816) setp.lt.f32 %ssa_718, %ssa_710_3, %ssa_2; // vec1  1 ssa_718 = flt! ssa_710.w, ssa_2
bb_42	:  PC=0x1da0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2819) not.pred %ssa_719, %ssa_713;// vec1  1 ssa_719 = inot ssa_713
bb_42	:  PC=0x1da8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2822) or.pred %ssa_720, %ssa_718, %ssa_719;// vec1  1 ssa_720 = ior ssa_718, ssa_719
bb_42	:  PC=0x1db0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2827) @!%ssa_720 bra else_4;

bb_43	:  PC=0x1db8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2832) mov.f32 %ssa_807, %ssa_717_0; // vec1 32 ssa_807 = mov ssa_717.x
bb_43	:  PC=0x1dc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2835) mov.f32 %ssa_811, %ssa_717_1; // vec1 32 ssa_811 = mov ssa_717.y
bb_43	:  PC=0x1dc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2838) mov.f32 %ssa_815, %ssa_717_2; // vec1 32 ssa_815 = mov ssa_717.z
bb_43	:  PC=0x1dd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2840) mov.f32 %ssa_809, %ssa_807; // vec1 32 ssa_809 = phi block_14: ssa_838, block_17: ssa_807, block_11: ssa_808
bb_43	:  PC=0x1dd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2841) mov.f32 %ssa_813, %ssa_811; // vec1 32 ssa_813 = phi block_14: ssa_839, block_17: ssa_811, block_11: ssa_812
bb_43	:  PC=0x1de0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2842) mov.f32 %ssa_817, %ssa_815; // vec1 32 ssa_817 = phi block_14: ssa_840, block_17: ssa_815, block_11: ssa_816
bb_43	:  PC=0x1de8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2843) bra loop_2_exit;

bb_44	:  PC=0x1df0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2847) bra end_if_4;

bb_45	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2854) end_if_4:
bb_45	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2857) .reg .f32 %ssa_721;
bb_45	:  PC=0x1df8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2858) mul.f32 %ssa_721, %ssa_795_0, %ssa_710_3; // vec1 32 ssa_721 = fmul ssa_795.x, ssa_710.w
bb_45	:  PC=0x1e00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2861) mul.f32 %ssa_722, %ssa_795_1, %ssa_710_3; // vec1 32 ssa_722 = fmul ssa_795.y, ssa_710.w
bb_45	:  PC=0x1e08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2864) mul.f32 %ssa_723, %ssa_795_2, %ssa_710_3; // vec1 32 ssa_723 = fmul ssa_795.z, ssa_710.w
bb_45	:  PC=0x1e10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2867) mul.f32 %ssa_724, %ssa_795_3, %ssa_710_3; // vec1 32 ssa_724 = fmul ssa_795.w, ssa_710.w
bb_45	:  PC=0x1e18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2870) add.f32 %ssa_725, %ssa_782_0, %ssa_721; // vec1 32 ssa_725 = fadd ssa_782.x, ssa_721
bb_45	:  PC=0x1e20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2873) add.f32 %ssa_726, %ssa_782_1, %ssa_722; // vec1 32 ssa_726 = fadd ssa_782.y, ssa_722
bb_45	:  PC=0x1e28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2876) add.f32 %ssa_727, %ssa_782_2, %ssa_723; // vec1 32 ssa_727 = fadd ssa_782.z, ssa_723
bb_45	:  PC=0x1e30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2879) add.f32 %ssa_728, %ssa_782_3, %ssa_724; // vec1 32 ssa_728 = fadd ssa_782.w, ssa_724
bb_45	:  PC=0x1e38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2885) mov.f32 %ssa_729_0, %ssa_725;
bb_45	:  PC=0x1e40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2886) mov.f32 %ssa_729_1, %ssa_726;
bb_45	:  PC=0x1e48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2887) mov.f32 %ssa_729_2, %ssa_727;
bb_45	:  PC=0x1e50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2888) mov.f32 %ssa_729_3, %ssa_728; // vec4 32 ssa_729 = vec4 ssa_725, ssa_726, ssa_727, ssa_728
bb_45	:  PC=0x1e58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2891) add.s32 %ssa_730, %ssa_700, %ssa_8_bits; // vec1 32 ssa_730 = iadd ssa_700, ssa_8
bb_45	:  PC=0x1e60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2897) mov.f32 %ssa_731_0, %ssa_712_0;
bb_45	:  PC=0x1e68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2898) mov.f32 %ssa_731_1, %ssa_712_1;
bb_45	:  PC=0x1e70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2899) mov.f32 %ssa_731_2, %ssa_712_2;
bb_45	:  PC=0x1e78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2900) mov.f32 %ssa_731_3, %ssa_2; // vec4 32 ssa_731 = vec4 ssa_712.x, ssa_712.y, ssa_712.z, ssa_2
bb_45	:  PC=0x1e80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2903) mov.f32 %ssa_771, %ssa_729_0; // vec1 32 ssa_771 = mov ssa_729.x
bb_45	:  PC=0x1e88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2906) mov.f32 %ssa_774, %ssa_729_1; // vec1 32 ssa_774 = mov ssa_729.y
bb_45	:  PC=0x1e90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2909) mov.f32 %ssa_777, %ssa_729_2; // vec1 32 ssa_777 = mov ssa_729.z
bb_45	:  PC=0x1e98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2912) mov.f32 %ssa_780, %ssa_729_3; // vec1 32 ssa_780 = mov ssa_729.w
bb_45	:  PC=0x1ea0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2915) mov.f32 %ssa_784, %ssa_731_0; // vec1 32 ssa_784 = mov ssa_731.x
bb_45	:  PC=0x1ea8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2918) mov.f32 %ssa_787, %ssa_731_1; // vec1 32 ssa_787 = mov ssa_731.y
bb_45	:  PC=0x1eb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2921) mov.f32 %ssa_790, %ssa_731_2; // vec1 32 ssa_790 = mov ssa_731.z
bb_45	:  PC=0x1eb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2924) mov.f32 %ssa_793, %ssa_731_3; // vec1 32 ssa_793 = mov ssa_731.w
bb_45	:  PC=0x1ec0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2927) mov.f32 %ssa_797, %ssa_717_0; // vec1 32 ssa_797 = mov ssa_717.x
bb_45	:  PC=0x1ec8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2930) mov.f32 %ssa_800, %ssa_717_1; // vec1 32 ssa_800 = mov ssa_717.y
bb_45	:  PC=0x1ed0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2933) mov.f32 %ssa_803, %ssa_717_2; // vec1 32 ssa_803 = mov ssa_717.z
bb_45	:  PC=0x1ed8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2935) mov.f32 %ssa_772, %ssa_771; // vec1 32 ssa_772 = phi block_9: ssa_770, block_19: ssa_771
bb_45	:  PC=0x1ee0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2936) mov.f32 %ssa_775, %ssa_774; // vec1 32 ssa_775 = phi block_9: ssa_773, block_19: ssa_774
bb_45	:  PC=0x1ee8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2937) mov.f32 %ssa_778, %ssa_777; // vec1 32 ssa_778 = phi block_9: ssa_776, block_19: ssa_777
bb_45	:  PC=0x1ef0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2938) mov.f32 %ssa_781, %ssa_780; // vec1 32 ssa_781 = phi block_9: ssa_779, block_19: ssa_780
bb_45	:  PC=0x1ef8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2939) mov.f32 %ssa_785, %ssa_784; // vec1 32 ssa_785 = phi block_9: ssa_783, block_19: ssa_784
bb_45	:  PC=0x1f00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2940) mov.f32 %ssa_788, %ssa_787; // vec1 32 ssa_788 = phi block_9: ssa_786, block_19: ssa_787
bb_45	:  PC=0x1f08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2941) mov.f32 %ssa_791, %ssa_790; // vec1 32 ssa_791 = phi block_9: ssa_789, block_19: ssa_790
bb_45	:  PC=0x1f10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2942) mov.f32 %ssa_794, %ssa_793; // vec1 32 ssa_794 = phi block_9: ssa_792, block_19: ssa_793
bb_45	:  PC=0x1f18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2943) mov.f32 %ssa_798, %ssa_797; // vec1 32 ssa_798 = phi block_9: ssa_835, block_19: ssa_797
bb_45	:  PC=0x1f20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2944) mov.f32 %ssa_801, %ssa_800; // vec1 32 ssa_801 = phi block_9: ssa_836, block_19: ssa_800
bb_45	:  PC=0x1f28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2945) mov.f32 %ssa_804, %ssa_803; // vec1 32 ssa_804 = phi block_9: ssa_837, block_19: ssa_803
bb_45	:  PC=0x1f30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2946) mov.s32 %ssa_700, %ssa_730; // vec1 32 ssa_700 = phi block_9: ssa_2, block_19: ssa_730
bb_45	:  PC=0x1f38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2949) bra loop_2;

bb_46	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2957) .reg .b32 %ssa_818_0;
bb_46	:  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
bb_46	:  PC=0x1f48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2962) mov.b32 %ssa_818_1, %ssa_813;
bb_46	:  PC=0x1f50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2963) mov.b32 %ssa_818_2, %ssa_817; // vec3 32 ssa_818 = vec3 ssa_809, ssa_813, ssa_817
bb_46	:  PC=0x1f58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2966) add.f32 %ssa_733, %ssa_769_0, %ssa_818_0; // vec1 32 ssa_733 = fadd ssa_769.x, ssa_818.x
bb_46	:  PC=0x1f60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2969) add.f32 %ssa_734, %ssa_769_1, %ssa_818_1; // vec1 32 ssa_734 = fadd ssa_769.y, ssa_818.y
bb_46	:  PC=0x1f68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) add.f32 %ssa_735, %ssa_769_2, %ssa_818_2; // vec1 32 ssa_735 = fadd ssa_769.z, ssa_818.z
bb_46	:  PC=0x1f70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2978) mov.f32 %ssa_736_0, %ssa_733;
bb_46	:  PC=0x1f78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2979) mov.f32 %ssa_736_1, %ssa_734;
bb_46	:  PC=0x1f80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2980) mov.f32 %ssa_736_2, %ssa_735; // vec3 32 ssa_736 = vec3 ssa_733, ssa_734, ssa_735
bb_46	:  PC=0x1f88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2983) add.s32 %ssa_737, %ssa_546, %ssa_8_bits; // vec1 32 ssa_737 = iadd ssa_546, ssa_8
bb_46	:  PC=0x1f90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2986) mov.f32 %ssa_761, %ssa_736_0; // vec1 32 ssa_761 = mov ssa_736.x
bb_46	:  PC=0x1f98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2989) mov.f32 %ssa_764, %ssa_736_1; // vec1 32 ssa_764 = mov ssa_736.y
bb_46	:  PC=0x1fa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2992) mov.f32 %ssa_767, %ssa_736_2; // vec1 32 ssa_767 = mov ssa_736.z
bb_46	:  PC=0x1fa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2994) mov.s32 %ssa_544, %ssa_563; // vec1 32 ssa_544 = phi block_0: ssa_20, block_20: ssa_563
bb_46	:  PC=0x1fb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2995) mov.f32 %ssa_762, %ssa_761; // vec1 32 ssa_762 = phi block_0: ssa_832, block_20: ssa_761
bb_46	:  PC=0x1fb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2996) mov.f32 %ssa_765, %ssa_764; // vec1 32 ssa_765 = phi block_0: ssa_833, block_20: ssa_764
bb_46	:  PC=0x1fc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2997) mov.f32 %ssa_768, %ssa_767; // vec1 32 ssa_768 = phi block_0: ssa_834, block_20: ssa_767
bb_46	:  PC=0x1fc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2998) mov.s32 %ssa_546, %ssa_737; // vec1 32 ssa_546 = phi block_0: ssa_2, block_20: ssa_737
bb_46	:  PC=0x1fd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3001) bra loop_0;

bb_47	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3006) .reg .pred %ssa_738;
bb_47	:  PC=0x1fd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3007) setp.ne.s32 %ssa_738, %ssa_548, %ssa_293;// vec1  1 ssa_738 = ine ssa_548, ssa_293
bb_47	:  PC=0x1fe0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3012) @!%ssa_738 bra else_5;

bb_48	:  PC=0x1fe8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3017) mov.b64 %ssa_739, %AccumulationImage; // vec1 32 ssa_739 = deref_var &AccumulationImage (image image2D) 
bb_48	:  PC=0x1ff0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3023) mov.u32 %ssa_740_0, %ssa_21_0;
bb_48	:  PC=0x1ff8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3024) mov.u32 %ssa_740_1, %ssa_21_1;
bb_48	:  PC=0x2000 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3025) mov.u32 %ssa_740_2, %ssa_7_bits;
bb_48	:  PC=0x2008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3026) mov.u32 %ssa_740_3, %ssa_7_bits; // vec4 32 ssa_740 = vec4 ssa_21.x, ssa_21.y, ssa_7, ssa_7
bb_48	:  PC=0x2010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3032) image_deref_load %ssa_739, %ssa_741_0, %ssa_741_1, %ssa_741_2, %ssa_741_3, %ssa_740_0, %ssa_740_1, %ssa_740_2, %ssa_740_3, %ssa_6, %ssa_2, 1, 0, 0, 0, 160; // vec4 32 ssa_741 = intrinsic image_deref_load (%ssa_739, %ssa_740, %ssa_6, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* dest_type=float32 */
bb_48	:  PC=0x2018 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3035) mov.f32 %ssa_819, %ssa_741_0; // vec1 32 ssa_819 = mov ssa_741.x
bb_48	:  PC=0x2020 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3038) mov.f32 %ssa_822, %ssa_741_1; // vec1 32 ssa_822 = mov ssa_741.y
bb_48	:  PC=0x2028 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3041) mov.f32 %ssa_825, %ssa_741_2; // vec1 32 ssa_825 = mov ssa_741.z
bb_48	:  PC=0x2030 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3044) mov.f32 %ssa_828, %ssa_741_3; // vec1 32 ssa_828 = mov ssa_741.w
bb_48	:  PC=0x2038 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3046) mov.f32 %ssa_821, %ssa_819; // vec1 32 ssa_821 = phi block_22: ssa_819, block_23: ssa_841
bb_48	:  PC=0x2040 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3047) mov.f32 %ssa_824, %ssa_822; // vec1 32 ssa_824 = phi block_22: ssa_822, block_23: ssa_842
bb_48	:  PC=0x2048 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3048) mov.f32 %ssa_827, %ssa_825; // vec1 32 ssa_827 = phi block_22: ssa_825, block_23: ssa_843
bb_48	:  PC=0x2050 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3049) mov.f32 %ssa_830, %ssa_828; // vec1 32 ssa_830 = phi block_22: ssa_828, block_23: ssa_844
bb_48	:  PC=0x2058 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3052) bra end_if_5;

bb_49	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3057) .reg .f32 %ssa_841;
bb_49	:  PC=0x2060 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3058) mov.f32 %ssa_841, 0F00000000; // vec1 32 ssa_841 = load_const (0x00000000 /* 0.000000 */)
bb_49	:  PC=0x2068 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3060) mov.b32 %ssa_841_bits, 0F00000000;
bb_49	:  PC=0x2070 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3063) mov.f32 %ssa_842, 0F00000000; // vec1 32 ssa_842 = load_const (0x00000000 /* 0.000000 */)
bb_49	:  PC=0x2078 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3065) mov.b32 %ssa_842_bits, 0F00000000;
bb_49	:  PC=0x2080 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3068) mov.f32 %ssa_843, 0F00000000; // vec1 32 ssa_843 = load_const (0x00000000 /* 0.000000 */)
bb_49	:  PC=0x2088 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3070) mov.b32 %ssa_843_bits, 0F00000000;
bb_49	:  PC=0x2090 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3073) mov.f32 %ssa_844, 0F00000000; // vec1 32 ssa_844 = load_const (0x00000000 /* 0.000000 */)
bb_49	:  PC=0x2098 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3075) mov.b32 %ssa_844_bits, 0F00000000;
bb_49	:  PC=0x20a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3077) mov.f32 %ssa_821, %ssa_841; // vec1 32 ssa_821 = phi block_22: ssa_819, block_23: ssa_841
bb_49	:  PC=0x20a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3078) mov.f32 %ssa_824, %ssa_842; // vec1 32 ssa_824 = phi block_22: ssa_822, block_23: ssa_842
bb_49	:  PC=0x20b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3079) mov.f32 %ssa_827, %ssa_843; // vec1 32 ssa_827 = phi block_22: ssa_825, block_23: ssa_843
bb_49	:  PC=0x20b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3080) mov.f32 %ssa_830, %ssa_844; // vec1 32 ssa_830 = phi block_22: ssa_828, block_23: ssa_844

bb_50	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3090) .reg .b32 %ssa_831_0;
bb_50	:  PC=0x20c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3094) mov.b32 %ssa_831_0, %ssa_821;
bb_50	:  PC=0x20c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3095) mov.b32 %ssa_831_1, %ssa_824;
bb_50	:  PC=0x20d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3096) mov.b32 %ssa_831_2, %ssa_827;
bb_50	:  PC=0x20d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3097) mov.b32 %ssa_831_3, %ssa_830; // vec4 32 ssa_831 = vec4 ssa_821, ssa_824, ssa_827, ssa_830
bb_50	:  PC=0x20e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3100) add.f32 %ssa_743, %ssa_831_0, %ssa_769_0; // vec1 32 ssa_743 = fadd ssa_831.x, ssa_769.x
bb_50	:  PC=0x20e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3103) add.f32 %ssa_744, %ssa_831_1, %ssa_769_1; // vec1 32 ssa_744 = fadd ssa_831.y, ssa_769.y
bb_50	:  PC=0x20f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3106) add.f32 %ssa_745, %ssa_831_2, %ssa_769_2; // vec1 32 ssa_745 = fadd ssa_831.z, ssa_769.z
bb_50	:  PC=0x20f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3109) cvt.rn.f32.u32 %ssa_746, %ssa_293;// vec1 32 ssa_746 = u2f32 ssa_293
bb_50	:  PC=0x2100 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3112) rcp.approx.f32 %ssa_747, %ssa_746;// vec1 32 ssa_747 = frcp ssa_746
bb_50	:  PC=0x2108 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3115) mul.f32 %ssa_748, %ssa_743, %ssa_747;// vec1 32 ssa_748 = fmul ssa_743, ssa_747
bb_50	:  PC=0x2110 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3118) mul.f32 %ssa_749, %ssa_744, %ssa_747;// vec1 32 ssa_749 = fmul ssa_744, ssa_747
bb_50	:  PC=0x2118 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3121) mul.f32 %ssa_750, %ssa_745, %ssa_747;// vec1 32 ssa_750 = fmul ssa_745, ssa_747
bb_50	:  PC=0x2120 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3124) sqrt.approx.f32 %ssa_751, %ssa_748;// vec1 32 ssa_751 = fsqrt ssa_748
bb_50	:  PC=0x2128 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3127) sqrt.approx.f32 %ssa_752, %ssa_749;// vec1 32 ssa_752 = fsqrt ssa_749
bb_50	:  PC=0x2130 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3130) sqrt.approx.f32 %ssa_753, %ssa_750;// vec1 32 ssa_753 = fsqrt ssa_750
bb_50	:  PC=0x2138 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3133) mov.b64 %ssa_754, %AccumulationImage; // vec1 32 ssa_754 = deref_var &AccumulationImage (image image2D) 
bb_50	:  PC=0x2140 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3139) mov.f32 %ssa_755_0, %ssa_743;
bb_50	:  PC=0x2148 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3140) mov.f32 %ssa_755_1, %ssa_744;
bb_50	:  PC=0x2150 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3141) mov.f32 %ssa_755_2, %ssa_745;
bb_50	:  PC=0x2158 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3142) mov.f32 %ssa_755_3, %ssa_2; // vec4 32 ssa_755 = vec4 ssa_743, ssa_744, ssa_745, ssa_2
bb_50	:  PC=0x2160 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3148) mov.u32 %ssa_756_0, %ssa_21_0;
bb_50	:  PC=0x2168 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3149) mov.u32 %ssa_756_1, %ssa_21_1;
bb_50	:  PC=0x2170 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3150) mov.u32 %ssa_756_2, %ssa_4_bits;
bb_50	:  PC=0x2178 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3151) mov.u32 %ssa_756_3, %ssa_4_bits; // vec4 32 ssa_756 = vec4 ssa_21.x, ssa_21.y, ssa_4, ssa_4
bb_50	:  PC=0x2180 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3153) image_deref_store %ssa_754, %ssa_756_0, %ssa_756_1, %ssa_756_2, %ssa_756_3, %ssa_3, %ssa_755_0, %ssa_755_1, %ssa_755_2, %ssa_755_3, %ssa_2, 1, 0, 0, 0, 160; // intrinsic image_deref_store (%ssa_754, %ssa_756, %ssa_3, %ssa_755, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* src_type=float32 */
bb_50	:  PC=0x2188 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3156) mov.b64 %ssa_757, %OutputImage; // vec1 32 ssa_757 = deref_var &OutputImage (image image2D) 
bb_50	:  PC=0x2190 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3162) mov.f32 %ssa_758_0, %ssa_751;
bb_50	:  PC=0x2198 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3163) mov.f32 %ssa_758_1, %ssa_752;
bb_50	:  PC=0x21a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3164) mov.f32 %ssa_758_2, %ssa_753;
bb_50	:  PC=0x21a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3165) mov.f32 %ssa_758_3, %ssa_2; // vec4 32 ssa_758 = vec4 ssa_751, ssa_752, ssa_753, ssa_2
bb_50	:  PC=0x21b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3171) mov.u32 %ssa_759_0, %ssa_21_0;
bb_50	:  PC=0x21b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3172) mov.u32 %ssa_759_1, %ssa_21_1;
bb_50	:  PC=0x21c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3173) mov.u32 %ssa_759_2, %ssa_1_bits;
bb_50	:  PC=0x21c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3174) mov.u32 %ssa_759_3, %ssa_1_bits; // vec4 32 ssa_759 = vec4 ssa_21.x, ssa_21.y, ssa_1, ssa_1
bb_50	:  PC=0x21d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3176) image_deref_store %ssa_757, %ssa_759_0, %ssa_759_1, %ssa_759_2, %ssa_759_3, %ssa_0, %ssa_758_0, %ssa_758_1, %ssa_758_2, %ssa_758_3, %ssa_2, 1, 0, 0, 0, 160; // intrinsic image_deref_store (%ssa_757, %ssa_759, %ssa_0, %ssa_758, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* src_type=float32 */

bb_51	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) ret ;
bb_51	:  PC=0x21d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) ret ;

Summary of basic blocks for 'MESA_SHADER_RAYGEN_func0_main':
bb_00	: first: filter_shader	 last: bra	
bb_01	: first: load_ray_launch_id	 last: bra	
bb_02	: first: bra	 last: bra	
bb_03	: first: bra	 last: bra	
bb_04	: first: load_vulkan_descriptor	 last: mov	
bb_05	: first: mov	 last: bra	
bb_06	: first: bra	 last: bra	
bb_07	: first: bra	 last: bra	
bb_08	: first: cvt	 last: mov	
bb_09	: first: mul	 last: bra	
bb_10	: first: bra	 last: bra	
bb_11	: first: bra	 last: bra	
bb_12	: first: mov	 last: bra	
bb_13	: first: st	 last: mov	
bb_14	: first: mov	 last: bra	
bb_15	: first: mov	 last: bra	
bb_16	: first: bra	 last: bra	
bb_17	: first: setp	 last: bra	
bb_18	: first: mov	 last: bra	
bb_19	: first: bra	 last: bra	
bb_20	: first: load_vulkan_descriptor	 last: mov	
bb_21	: first: intersection_exit	 last: bra	
bb_22	: first: get_intersection_shader_data_address	 last: bra	
bb_23	: first: call_intersection_shader	 last: call_intersection_shader	
bb_24	: first: setp	 last: bra	
bb_25	: first: call_intersection_shader	 last: call_intersection_shader	
bb_26	: first: setp	 last: bra	
bb_27	: first: call_intersection_shader	 last: call_intersection_shader	
bb_28	: first: setp	 last: bra	
bb_29	: first: call_intersection_shader	 last: call_intersection_shader	
bb_30	: first: add	 last: bra	
bb_31	: first: hit_geometry	 last: bra	
bb_32	: first: get_closest_hit_shaderID	 last: bra	
bb_33	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_34	: first: setp	 last: bra	
bb_35	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_36	: first: setp	 last: bra	
bb_37	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_38	: first: setp	 last: bra	
bb_39	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_40	: first: bra	 last: bra	
bb_41	: first: call_miss_shader	 last: call_miss_shader	
bb_42	: first: end_trace_ray	 last: bra	
bb_43	: first: mov	 last: bra	
bb_44	: first: bra	 last: bra	
bb_45	: first: mul	 last: bra	
bb_46	: first: mov	 last: bra	
bb_47	: first: setp	 last: bra	
bb_48	: first: mov	 last: bra	
bb_49	: first: mov	 last: mov	
bb_50	: first: mov	 last: image_deref_store	
bb_51	: first: ret	 last: ret	
bb_52	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_RAYGEN_func0_main'...
Operand information not set. filter_shader %shader_passes;
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_RAYGEN_func0_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:17) @%does_pass bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x21d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x040 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:39) @%bigger_0 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x21d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) ret ;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x048 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:40) @%bigger_1 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x21d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) ret ;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x050 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:41) @%bigger_2 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x21d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) ret ;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x1378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1895) @!%ssa_549 bra else_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1899) bra loop_0_exit;
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x1380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1899) bra loop_0_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1fd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3007) setp.ne.s32 %ssa_738, %ssa_548, %ssa_293;// vec1  1 ssa_738 = ine ssa_548, ssa_293
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x1388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1903) bra end_if_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1914) cvt.rn.f32.u32 %ssa_550, %ssa_21_0; // vec1 32 ssa_550 = u2f32 ssa_21.x
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x1580 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2102) @!%ssa_603 bra else_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1588 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2106) bra loop_1_exit;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x1588 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2106) bra loop_1_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x15a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2128) st.global.s32 [%ssa_543], %ssa_592; // intrinsic store_deref (%ssa_543, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x1590 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2110) bra end_if_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1598 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2120) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x15a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2123) bra loop_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x14f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2047) mul.lo.s32 %ssa_587, %ssa_553_bits, %ssa_586; // vec1 32 ssa_587 = imul ssa_553, ssa_586
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x1af0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2601) @!%ssa_703 bra else_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x1b28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2617) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x1b30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2621) bra end_if_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1b38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2632) setp.eq.s32 %ssa_704, %ssa_700, %ssa_702;// vec1  1 ssa_704 = ieq ssa_700, ssa_702
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x1b40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2637) @!%ssa_704 bra else_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x1b90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2659) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x1b98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2663) bra end_if_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1ba0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2674) load_vulkan_descriptor %ssa_705, 0, 0, 1000150000; // vec1 64 ssa_705 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x1bf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) @%intersections_exit_0 bra exit_intersection_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2734) hit_geometry.pred %hit_geometry_0, %traversal_finished_0;
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x1c18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2710) @%skip_intersection_8_0 bra skip_intersection_label_8_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2714) setp.ne.u32 %skip_intersection_6_0, %intersection_shaderID_0, 6;
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x1c30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2715) @%skip_intersection_6_0 bra skip_intersection_label_6_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2719) setp.ne.u32 %skip_intersection_7_0, %intersection_shaderID_0, 7;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x1c48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2720) @%skip_intersection_7_0 bra skip_intersection_label_7_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2724) setp.ne.u32 %skip_intersection_9_0, %intersection_shaderID_0, 9;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x1c60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2725) @%skip_intersection_9_0 bra skip_intersection_label_9_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2728) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
GPGPU-Sim PTX: 23 (potential) branch divergence @  PC=0x1c78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2729) bra intersection_loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2702) intersection_exit.pred %intersections_exit_0, %intersection_counter_0, %traversal_finished_0;
GPGPU-Sim PTX: 24 (potential) branch divergence @  PC=0x1c88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2736) @!%hit_geometry_0 bra exit_closest_hit_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1cf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX: 25 (potential) branch divergence @  PC=0x1ca0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2741) @%skip_closest_hit_3_0 bra skip_closest_hit_label_3_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1cb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2745) setp.ne.u32 %skip_closest_hit_2_0, %closest_hit_shaderID_0, 2;
GPGPU-Sim PTX: 26 (potential) branch divergence @  PC=0x1cb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2746) @%skip_closest_hit_2_0 bra skip_closest_hit_label_2_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1cc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2750) setp.ne.u32 %skip_closest_hit_5_0, %closest_hit_shaderID_0, 5;
GPGPU-Sim PTX: 27 (potential) branch divergence @  PC=0x1cd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2751) @%skip_closest_hit_5_0 bra skip_closest_hit_label_5_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1ce0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2755) setp.ne.u32 %skip_closest_hit_4_0, %closest_hit_shaderID_0, 4;
GPGPU-Sim PTX: 28 (potential) branch divergence @  PC=0x1ce8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2756) @%skip_closest_hit_4_0 bra skip_closest_hit_label_4_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1cf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX: 29 (potential) branch divergence @  PC=0x1cf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2765) end_trace_ray ;
GPGPU-Sim PTX: 30 (potential) branch divergence @  PC=0x1db0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2827) @!%ssa_720 bra else_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 31 (potential) branch divergence @  PC=0x1de8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2843) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2961) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 32 (potential) branch divergence @  PC=0x1df0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2847) bra end_if_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1df8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2858) mul.f32 %ssa_721, %ssa_795_0, %ssa_710_3; // vec1 32 ssa_721 = fmul ssa_795.x, ssa_710.w
GPGPU-Sim PTX: 33 (potential) branch divergence @  PC=0x1f38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2949) bra loop_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2567) mov.b32 %ssa_805_0, %ssa_798;
GPGPU-Sim PTX: 34 (potential) branch divergence @  PC=0x1fd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3001) bra loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1879) mov.b32 %ssa_769_0, %ssa_762;
GPGPU-Sim PTX: 35 (potential) branch divergence @  PC=0x1fe0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3012) @!%ssa_738 bra else_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3094) mov.b32 %ssa_831_0, %ssa_821;
GPGPU-Sim PTX: 36 (potential) branch divergence @  PC=0x2058 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3052) bra end_if_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3094) mov.b32 %ssa_831_0, %ssa_821;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_RAYGEN_func0_main
Operand information not set. load_vulkan_descriptor %AccumulationImage, 0, 1; // decl_var image INTERP_MODE_NONE restrict r32g32b32a32_float image2D AccumulationImage
Operand information not set. load_vulkan_descriptor %OutputImage, 0, 2; // decl_var image INTERP_MODE_NONE restrict r8g8b8a8_unorm image2D OutputImage
Operand information not set. load_vulkan_descriptor %ssa_15, 0, 3, 6; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_2) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
Operand information not set. load_vulkan_descriptor %ssa_705, 0, 0, 1000150000; // vec1 64 ssa_705 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
trace_ray instruction found at PC 7136 (line 2696, shader 0)!
Operand information not set. get_intersection_shader_data_address %shader_data_address_0, %intersection_counter_0;
Operand information not set. get_intersection_shaderID %intersection_shaderID_0, %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. get_closest_hit_shaderID %closest_hit_shaderID_0;
Operand information not set. call_closest_hit_shader 3;
Operand information not set. call_closest_hit_shader 2;
Operand information not set. call_closest_hit_shader 5;
Operand information not set. call_closest_hit_shader 4;
Operand information not set. call_miss_shader ;
Operand information not set. end_trace_ray ;
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_RAYGEN_func0_main'.
gpgpusim: launch dimensions 8 x 256 x 1
gpgpusim: SBT: raygen 0x556ba015e000, miss 0x556ba015e020, hit 0x556ba015e040, callable (nil)
gpgpusim: blas address
	[0x556b9daf6000] -> 0xc1e53200
	[0x556b9daf6200] -> 0xc1e53200
	[0x556b9daf6400] -> 0xc1e53200
	[0x556b9daf6600] -> 0xc1e53200
	[0x556b9daf6800] -> 0xc1e53200
	[0x556b9daf6a00] -> 0xc1e53200
	[0x556b9daf6c00] -> 0xc1e53200
	[0x556b9daf6e00] -> 0xc1e53200
	[0x556b9daf7000] -> 0xc1e53200
	[0x556b9daf7200] -> 0xc1e53200
	[0x556b9daf7400] -> 0xc1e53200
	[0x556b9daf7600] -> 0xc1e53200
	[0x556b9daf7800] -> 0xc1e53200
	[0x556b9daf7a00] -> 0xc1e53200
	[0x556b9daf7c00] -> 0xc1e53200
	[0x556b9daf7e00] -> 0xc1e53200
	[0x556b9daf8000] -> 0xc1e53200
	[0x556b9daf8200] -> 0xc1e53200
	[0x556b9daf8400] -> 0xc1e53200
	[0x556b9daf8600] -> 0xc1e53200
	[0x556b9daf8800] -> 0xc1e53200
	[0x556b9daf8a00] -> 0xc1e53200
	[0x556b9daf8c00] -> 0xc1e53200
	[0x556b9daf8e00] -> 0xc1e53200
	[0x556b9daf9000] -> 0xc1e53200
	[0x556b9daf9200] -> 0xc1e53200
	[0x556b9daf9400] -> 0xc1e53200
	[0x556b9daf9600] -> 0xc1e53200
	[0x556b9daf9800] -> 0xc1e53200
	[0x556b9daf9a00] -> 0xc1e53200
	[0x556b9daf9c00] -> 0xc1e53200
	[0x556b9daf9e00] -> 0xc1e53200
	[0x556b9dafa000] -> 0xc1e53200
	[0x556b9dafa200] -> 0xc1e53200
	[0x556b9dafa400] -> 0xc1e53200
	[0x556b9dafa600] -> 0xc1e53200
	[0x556b9dafa800] -> 0xc1e53200
	[0x556b9dafaa00] -> 0xc1e53200
	[0x556b9dafac00] -> 0xc1e53200
	[0x556b9dafae00] -> 0xc1e53200
	[0x556b9dafb000] -> 0xc1e53200
	[0x556b9dafb200] -> 0xc1e53200
	[0x556b9dafb400] -> 0xc1e53200
	[0x556b9dafb600] -> 0xc1e53200
	[0x556b9dafb800] -> 0xc1e53200
	[0x556b9dafba00] -> 0xc1e53200
	[0x556b9dafbc00] -> 0xc1e53200
	[0x556b9dafbe00] -> 0xc1e53200
	[0x556b9dafc000] -> 0xc1e53200
	[0x556b9dafc200] -> 0xc1e53200
	[0x556b9dafc400] -> 0xc1e53200
	[0x556b9dafc600] -> 0xc1e53200
	[0x556b9dafc800] -> 0xc1e53200
	[0x556b9dafca00] -> 0xc1e53200
	[0x556b9dafcc00] -> 0xc1e53200
	[0x556b9dafce00] -> 0xc1e53200
	[0x556b9dafd000] -> 0xc1e53200
	[0x556b9dafd200] -> 0xc1e53200
	[0x556b9dafd400] -> 0xc1e53200
	[0x556b9dafd600] -> 0xc1e53200
	[0x556b9dafd800] -> 0xc1e53200
	[0x556b9dafda00] -> 0xc1e53200
	[0x556b9dafdc00] -> 0xc1e53200
	[0x556b9dafde00] -> 0xc1e53200
	[0x556b9dafe000] -> 0xc1e53200
	[0x556b9dafe200] -> 0xc1e53200
	[0x556b9dafe400] -> 0xc1e53200
	[0x556b9dafe600] -> 0xc1e53200
	[0x556b9dafe800] -> 0xc1e53200
	[0x556b9dafea00] -> 0xc1e53200
	[0x556b9dafec00] -> 0xc1e53200
	[0x556b9dafee00] -> 0xc1e53200
	[0x556b9daff000] -> 0xc1e53200
	[0x556b9daff200] -> 0xc1e53200
	[0x556b9daff400] -> 0xc1e53200
	[0x556b9daff600] -> 0xc1e53200
	[0x556b9daff800] -> 0xc1e53200
	[0x556b9daffa00] -> 0xc1e53200
	[0x556b9daffc00] -> 0xc1e53200
	[0x556b9daffe00] -> 0xc1e53200
	[0x556b9db00000] -> 0xc1e53200
	[0x556b9db00200] -> 0xc1e53200
	[0x556b9db00400] -> 0xc1e53200
	[0x556b9db00600] -> 0xc1e53200
	[0x556b9db00800] -> 0xc1e53200
	[0x556b9db00a00] -> 0xc1e53200
	[0x556b9db00c00] -> 0xc1e53200
	[0x556b9db00e00] -> 0xc1e53200
	[0x556b9db01000] -> 0xc1e53200
	[0x556b9db01200] -> 0xc1e53200
	[0x556b9db01400] -> 0xc1e53200
	[0x556b9db01600] -> 0xc1e53200
	[0x556b9db01800] -> 0xc1e53200
	[0x556b9db01a00] -> 0xc1e53200
	[0x556b9db01c00] -> 0xc1e53200
	[0x556b9db01e00] -> 0xc1e53200
	[0x556b9db02000] -> 0xc1e53200
	[0x556b9db02200] -> 0xc1e53200
	[0x556b9db02400] -> 0xc1e53200
	[0x556b9db02600] -> 0xc1e53200
	[0x556b9db02800] -> 0xc1e53200
	[0x556b9db02a00] -> 0xc1e53200
	[0x556b9db02c00] -> 0xc1e53200
	[0x556b9db02e00] -> 0xc1e53200
	[0x556b9db03000] -> 0xc1e53200
	[0x556b9db03200] -> 0xc1e53200
	[0x556b9db03400] -> 0xc1e53200
	[0x556b9db03600] -> 0xc1e53200
	[0x556b9db03800] -> 0xc1e53200
	[0x556b9db03a00] -> 0xc1e53200
	[0x556b9db03c00] -> 0xc1e53200
	[0x556b9db03e00] -> 0xc1e53200
	[0x556b9db04000] -> 0xc1e53200
	[0x556b9db04200] -> 0xc1e53200
	[0x556b9db04400] -> 0xc1e53200
	[0x556b9db04600] -> 0xc1e53200
	[0x556b9db04800] -> 0xc1e53200
	[0x556b9db04a00] -> 0xc1e53200
	[0x556b9db04c00] -> 0xc1e53200
	[0x556b9db04e00] -> 0xc1e53200
	[0x556b9db05000] -> 0xc1e53200
	[0x556b9db05200] -> 0xc1e53200
	[0x556b9db05400] -> 0xc1e53200
	[0x556b9db05600] -> 0xc1e53200
	[0x556b9db05800] -> 0xc1e53200
	[0x556b9db05a00] -> 0xc1e53200
	[0x556b9db05c00] -> 0xc1e53200
	[0x556b9db05e00] -> 0xc1e53200
	[0x556b9db06000] -> 0xc1e53200
	[0x556b9db06200] -> 0xc1e53200
	[0x556b9db06400] -> 0xc1e53200
	[0x556b9db06600] -> 0xc1e53200
	[0x556b9db06800] -> 0xc1e53200
	[0x556b9db06a00] -> 0xc1e53200
	[0x556b9db06c00] -> 0xc1e53200
	[0x556b9db06e00] -> 0xc1e53200
	[0x556b9db07000] -> 0xc1e53200
	[0x556b9db07200] -> 0xc1e53200
	[0x556b9db07400] -> 0xc1e53200
	[0x556b9db07600] -> 0xc1e53200
	[0x556b9db07800] -> 0xc1e53200
	[0x556b9db07a00] -> 0xc1e53200
	[0x556b9db07c00] -> 0xc1e53200
	[0x556b9db07e00] -> 0xc1e53200
	[0x556b9db08000] -> 0xc1e53200
	[0x556b9db08200] -> 0xc1e53200
	[0x556b9db08400] -> 0xc1e53200
	[0x556b9db08600] -> 0xc1e53200
	[0x556b9db08800] -> 0xc1e53200
	[0x556b9db08a00] -> 0xc1e53200
	[0x556b9db08c00] -> 0xc1e53200
	[0x556b9db08e00] -> 0xc1e53200
	[0x556b9db09000] -> 0xc1e53200
	[0x556b9db09200] -> 0xc1e53200
	[0x556b9db09400] -> 0xc1e53200
	[0x556b9db09600] -> 0xc1e53200
	[0x556b9db09800] -> 0xc1e53200
	[0x556b9db09a00] -> 0xc1e53200
	[0x556b9db09c00] -> 0xc1e53200
	[0x556b9db09e00] -> 0xc1e53200
	[0x556b9db0a000] -> 0xc1e53200
	[0x556b9db0a200] -> 0xc1e53200
	[0x556b9db0a400] -> 0xc1e53200
	[0x556b9db0a600] -> 0xc1e53200
	[0x556b9db0a800] -> 0xc1e53200
	[0x556b9db0aa00] -> 0xc1e53200
	[0x556b9db0ac00] -> 0xc1e53200
	[0x556b9db0ae00] -> 0xc1e53200
	[0x556b9db0b000] -> 0xc1e53200
	[0x556b9db0b200] -> 0xc1e53200
	[0x556b9db0b400] -> 0xc1e53200
	[0x556b9db0b600] -> 0xc1e53200
	[0x556b9db0b800] -> 0xc1e53200
	[0x556b9db0ba00] -> 0xc1e53200
	[0x556b9db0bc00] -> 0xc1e53200
	[0x556b9db0be00] -> 0xc1e53200
	[0x556b9db0c000] -> 0xc1e53200
	[0x556b9db0c200] -> 0xc1e53200
	[0x556b9db0c400] -> 0xc1e53200
	[0x556b9db0c600] -> 0xc1e53200
	[0x556b9db0c800] -> 0xc1e53200
	[0x556b9db0ca00] -> 0xc1e53200
	[0x556b9db0cc00] -> 0xc1e53200
	[0x556b9db0ce00] -> 0xc1e53200
	[0x556b9db0d000] -> 0xc1e53200
	[0x556b9db0d200] -> 0xc1e53200
	[0x556b9db0d400] -> 0xc1e53200
	[0x556b9db0d600] -> 0xc1e53200
	[0x556b9db0d800] -> 0xc1e53200
	[0x556b9db0da00] -> 0xc1e53200
	[0x556b9db0dc00] -> 0xc1e53200
	[0x556b9db0de00] -> 0xc1e53200
	[0x556b9db0e000] -> 0xc1e53200
	[0x556b9db0e200] -> 0xc1e53200
	[0x556b9db0e400] -> 0xc1e53200
	[0x556b9db0e600] -> 0xc1e53200
	[0x556b9db0e800] -> 0xc1e53200
	[0x556b9db0ea00] -> 0xc1e53200
	[0x556b9db0ec00] -> 0xc1e53200
	[0x556b9db0ee00] -> 0xc1e53200
	[0x556b9db0f000] -> 0xc1e53200
	[0x556b9db0f200] -> 0xc1e53200
	[0x556b9db0f400] -> 0xc1e53200
	[0x556b9db0f600] -> 0xc1e53200
	[0x556b9db0f800] -> 0xc1e53200
	[0x556b9db0fa00] -> 0xc1e53200
	[0x556b9db0fc00] -> 0xc1e53200
	[0x556b9db0fe00] -> 0xc1e53200
	[0x556b9db10000] -> 0xc1e53200
	[0x556b9db10200] -> 0xc1e53200
	[0x556b9db10400] -> 0xc1e53200
	[0x556b9db10600] -> 0xc1e53200
	[0x556b9db10800] -> 0xc1e53200
	[0x556b9db10a00] -> 0xc1e53200
	[0x556b9db10c00] -> 0xc1e53200
	[0x556b9db10e00] -> 0xc1e53200
	[0x556b9db11000] -> 0xc1e53200
	[0x556b9db11200] -> 0xc1e53200
	[0x556b9db11400] -> 0xc1e53200
	[0x556b9db11600] -> 0xc1e53200
	[0x556b9db11800] -> 0xc1e53200
	[0x556b9db11a00] -> 0xc1e53200
	[0x556b9db11c00] -> 0xc1e53200
	[0x556b9db11e00] -> 0xc1e53200
	[0x556b9db12000] -> 0xc1e53200
	[0x556b9db12200] -> 0xc1e53200
	[0x556b9db12400] -> 0xc1e53200
	[0x556b9db12600] -> 0xc1e53200
	[0x556b9db12800] -> 0xc1e53200
	[0x556b9db12a00] -> 0xc1e53200
	[0x556b9db12c00] -> 0xc1e53200
	[0x556b9db12e00] -> 0xc1e53200
	[0x556b9db13000] -> 0xc1e53200
	[0x556b9db13200] -> 0xc1e53200
	[0x556b9db13400] -> 0xc1e53200
	[0x556b9db13600] -> 0xc1e53200
	[0x556b9db13800] -> 0xc1e53200
	[0x556b9db13a00] -> 0xc1e53200
	[0x556b9db13c00] -> 0xc1e53200
	[0x556b9db13e00] -> 0xc1e53200
	[0x556b9db14000] -> 0xc1e53200
	[0x556b9db14200] -> 0xc1e53200
	[0x556b9db14400] -> 0xc1e53200
	[0x556b9db14600] -> 0xc1e53200
	[0x556b9db14800] -> 0xc1e53200
	[0x556b9db14a00] -> 0xc1e53200
	[0x556b9db14c00] -> 0xc1e53200
	[0x556b9db14e00] -> 0xc1e53200
	[0x556b9db15000] -> 0xc1e53200
	[0x556b9db15200] -> 0xc1e53200
	[0x556b9db15400] -> 0xc1e53200
	[0x556b9db15600] -> 0xc1e53200
	[0x556b9db15800] -> 0xc1e53200
	[0x556b9db15a00] -> 0xc1e53200
	[0x556b9db15c00] -> 0xc1e53200
	[0x556b9db15e00] -> 0xc1e53200
	[0x556b9db16000] -> 0xc1e53200
	[0x556b9db16200] -> 0xc1e53200
	[0x556b9db16400] -> 0xc1e53200
	[0x556b9db16600] -> 0xc1e53200
	[0x556b9db16800] -> 0xc1e53200
	[0x556b9db16a00] -> 0xc1e53200
	[0x556b9db16c00] -> 0xc1e53200
	[0x556b9db16e00] -> 0xc1e53200
	[0x556b9db17000] -> 0xc1e53200
	[0x556b9db17200] -> 0xc1e53200
	[0x556b9db17400] -> 0xc1e53200
	[0x556b9db17600] -> 0xc1e53200
	[0x556b9db17800] -> 0xc1e53200
	[0x556b9db17a00] -> 0xc1e53200
	[0x556b9db17c00] -> 0xc1e53200
	[0x556b9db17e00] -> 0xc1e53200
	[0x556b9db18000] -> 0xc1e53200
	[0x556b9db18200] -> 0xc1e53200
	[0x556b9db18400] -> 0xc1e53200
	[0x556b9db18600] -> 0xc1e53200
	[0x556b9db18800] -> 0xc1e53200
	[0x556b9db18a00] -> 0xc1e53200
	[0x556b9db18c00] -> 0xc1e53200
	[0x556b9db18e00] -> 0xc1e53200
	[0x556b9db19000] -> 0xc1e53200
	[0x556b9db19200] -> 0xc1e53200
	[0x556b9db19400] -> 0xc1e53200
	[0x556b9db19600] -> 0xc1e53200
	[0x556b9db19800] -> 0xc1e53200
	[0x556b9db19a00] -> 0xc1e53200
	[0x556b9db19c00] -> 0xc1e53200
	[0x556b9db19e00] -> 0xc1e53200
	[0x556b9db1a000] -> 0xc1e53200
	[0x556b9db1a200] -> 0xc1e53200
	[0x556b9db1a400] -> 0xc1e53200
	[0x556b9db1a600] -> 0xc1e53200
	[0x556b9db1a800] -> 0xc1e53200
	[0x556b9db1aa00] -> 0xc1e53200
	[0x556b9db1ac00] -> 0xc1e53200
	[0x556b9db1ae00] -> 0xc1e53200
	[0x556b9db1b000] -> 0xc1e53200
	[0x556b9db1b200] -> 0xc1e53200
	[0x556b9db1b400] -> 0xc1e53200
	[0x556b9db1b600] -> 0xc1e53200
	[0x556b9db1b800] -> 0xc1e53200
	[0x556b9db1ba00] -> 0xc1e53200
	[0x556b9db1bc00] -> 0xc1e53200
	[0x556b9db1be00] -> 0xc1e53200
	[0x556b9db1c000] -> 0xc1e53200
	[0x556b9db1c200] -> 0xc1e53200
	[0x556b9db1c400] -> 0xc1e53200
	[0x556b9db1c600] -> 0xc1e53200
	[0x556b9db1c800] -> 0xc1e53200
	[0x556b9db1ca00] -> 0xc1e53200
	[0x556b9db1cc00] -> 0xc1e53200
	[0x556b9db1ce00] -> 0xc1e53200
	[0x556b9db1d000] -> 0xc1e53200
	[0x556b9db1d200] -> 0xc1e53200
	[0x556b9db1d400] -> 0xc1e53200
	[0x556b9db1d600] -> 0xc1e53200
	[0x556b9db1d800] -> 0xc1e53200
	[0x556b9db1da00] -> 0xc1e53200
	[0x556b9db1dc00] -> 0xc1e53200
	[0x556b9db1de00] -> 0xc1e53200
	[0x556b9db1e000] -> 0xc1e53200
	[0x556b9db1e200] -> 0xc1e53200
	[0x556b9db1e400] -> 0xc1e53200
	[0x556b9db1e600] -> 0xc1e53200
	[0x556b9db1e800] -> 0xc1e53200
	[0x556b9db1ea00] -> 0xc1e53200
	[0x556b9db1ec00] -> 0xc1e53200
	[0x556b9db1ee00] -> 0xc1e53200
	[0x556b9db1f000] -> 0xc1e53200
	[0x556b9db1f200] -> 0xc1e53200
	[0x556b9db1f400] -> 0xc1e53200
	[0x556b9db1f600] -> 0xc1e53200
	[0x556b9db1f800] -> 0xc1e53200
	[0x556b9db1fa00] -> 0xc1e53200
	[0x556b9db1fc00] -> 0xc1e53200
	[0x556b9db1fe00] -> 0xc1e53200
	[0x556b9db20000] -> 0xc1e53200
	[0x556b9db20200] -> 0xc1e53200
	[0x556b9db20400] -> 0xc1e53200
	[0x556b9db20600] -> 0xc1e53200
	[0x556b9db20800] -> 0xc1e53200
	[0x556b9db20a00] -> 0xc1e53200
	[0x556b9db20c00] -> 0xc1e53200
	[0x556b9db20e00] -> 0xc1e53200
	[0x556b9db21000] -> 0xc1e53200
	[0x556b9db21200] -> 0xc1e53200
	[0x556b9db21400] -> 0xc1e53200
	[0x556b9db21600] -> 0xc1e53200
	[0x556b9db21800] -> 0xc1e53200
	[0x556b9db21a00] -> 0xc1e53200
	[0x556b9db21c00] -> 0xc1e53200
	[0x556b9db21e00] -> 0xc1e53200
	[0x556b9db22000] -> 0xc1e53200
	[0x556b9db22200] -> 0xc1e53200
	[0x556b9db22400] -> 0xc1e53200
	[0x556b9db22600] -> 0xc1e53200
	[0x556b9db22800] -> 0xc1e53200
	[0x556b9db22a00] -> 0xc1e53200
	[0x556b9db22c00] -> 0xc1e53200
	[0x556b9db22e00] -> 0xc1e53200
	[0x556b9db23000] -> 0xc1e53200
	[0x556b9db23200] -> 0xc1e53200
	[0x556b9db23400] -> 0xc1e53200
	[0x556b9db23600] -> 0xc1e53200
	[0x556b9db23800] -> 0xc1e53200
	[0x556b9db23a00] -> 0xc1e53200
	[0x556b9db23c00] -> 0xc1e53200
	[0x556b9db23e00] -> 0xc1e53200
	[0x556b9db24000] -> 0xc1e53200
	[0x556b9db24200] -> 0xc1e53200
	[0x556b9db24400] -> 0xc1e53200
	[0x556b9db24600] -> 0xc1e53200
	[0x556b9db24800] -> 0xc1e53200
	[0x556b9db24a00] -> 0xc1e53200
	[0x556b9db24c00] -> 0xc1e53200
	[0x556b9db24e00] -> 0xc1e53200
	[0x556b9db25000] -> 0xc1e53200
	[0x556b9db25200] -> 0xc1e53200
	[0x556b9db25400] -> 0xc1e53200
	[0x556b9db25600] -> 0xc1e53200
	[0x556b9db25800] -> 0xc1e53200
	[0x556b9db25a00] -> 0xc1e53200
	[0x556b9db25c00] -> 0xc1e53200
	[0x556b9db25e00] -> 0xc1e53200
	[0x556b9db26000] -> 0xc1e53200
	[0x556b9db26200] -> 0xc1e53200
	[0x556b9db26400] -> 0xc1e53200
	[0x556b9db26600] -> 0xc1e53200
	[0x556b9db26800] -> 0xc1e53200
	[0x556b9db26a00] -> 0xc1e53200
	[0x556b9db26c00] -> 0xc1e53200
	[0x556b9db26e00] -> 0xc1e53200
	[0x556b9db27000] -> 0xc1e53200
	[0x556b9db27200] -> 0xc1e53200
	[0x556b9db27400] -> 0xc1e53200
	[0x556b9db27600] -> 0xc1e53200
	[0x556b9db27800] -> 0xc1e53200
	[0x556b9db27a00] -> 0xc1e53200
	[0x556b9db27c00] -> 0xc1e53200
	[0x556b9db27e00] -> 0xc1e53200
	[0x556b9db28000] -> 0xc1e53200
	[0x556b9db28200] -> 0xc1e53200
	[0x556b9db28400] -> 0xc1e53200
	[0x556b9db28600] -> 0xc1e53200
	[0x556b9db28800] -> 0xc1e53200
	[0x556b9db28a00] -> 0xc1e53200
	[0x556b9db28c00] -> 0xc1e53200
	[0x556b9db28e00] -> 0xc1e53200
	[0x556b9db29000] -> 0xc1e53200
	[0x556b9db29200] -> 0xc1e53200
	[0x556b9db29400] -> 0xc1e53200
	[0x556b9db29600] -> 0xc1e53200
	[0x556b9db29800] -> 0xc1e53200
	[0x556b9db29a00] -> 0xc1e53200
	[0x556b9db29c00] -> 0xc1e53200
	[0x556b9db29e00] -> 0xc1e53200
	[0x556b9db2a000] -> 0xc1e53200
	[0x556b9db2a200] -> 0xc1e53200
	[0x556b9db2a400] -> 0xc1e53200
	[0x556b9db2a600] -> 0xc1e53200
	[0x556b9db2a800] -> 0xc1e53200
	[0x556b9db2aa00] -> 0xc1e53200
	[0x556b9db2ac00] -> 0xc1e53200
	[0x556b9db2ae00] -> 0xc1e53200
	[0x556b9db2b000] -> 0xc1e53200
	[0x556b9db2b200] -> 0xc1e53200
	[0x556b9db2b400] -> 0xc1e53200
	[0x556b9db2b600] -> 0xc1e53200
	[0x556b9db2b800] -> 0xc1e53200
	[0x556b9db2ba00] -> 0xc1e53200
	[0x556b9db2bc00] -> 0xc1e53200
	[0x556b9db2be00] -> 0xc1e53200
	[0x556b9db2c000] -> 0xc1e53200
	[0x556b9db2c200] -> 0xc1e53200
	[0x556b9db2c400] -> 0xc1e53200
	[0x556b9db2c600] -> 0xc1e53200
	[0x556b9db2c800] -> 0xc1e53200
	[0x556b9db2ca00] -> 0xc1e53200
	[0x556b9db2cc00] -> 0xc1e53200
	[0x556b9db2ce00] -> 0xc1e53200
	[0x556b9db2d000] -> 0xc1e53200
	[0x556b9db2d200] -> 0xc1e53200
	[0x556b9db2d400] -> 0xc1e53200
	[0x556b9db2d600] -> 0xc1e53200
	[0x556b9db2d800] -> 0xc1e53200
	[0x556b9db2da00] -> 0xc1e53200
	[0x556b9db2dc00] -> 0xc1e53200
	[0x556b9db2de00] -> 0xc1e53200
	[0x556b9db2e000] -> 0xc1e53200
	[0x556b9db2e200] -> 0xc1e53200
	[0x556b9db2e400] -> 0xc1e53200
	[0x556b9db2e600] -> 0xc1e53200
	[0x556b9db2e800] -> 0xc1e53200
	[0x556b9db2ea00] -> 0xc1e53200
	[0x556b9db2ec00] -> 0xc1e53200
	[0x556b9db2ee00] -> 0xc1e53200
	[0x556b9db2f000] -> 0xc1e53200
	[0x556b9db2f200] -> 0xc1e53200
	[0x556b9db2f400] -> 0xc1e53200
	[0x556b9db2f600] -> 0xc1e53200
	[0x556b9db2f800] -> 0xc1e53200
	[0x556b9db2fa00] -> 0xc1e53200
	[0x556b9db2fc00] -> 0xc1e53200
	[0x556b9db2fe00] -> 0xc1e53200
	[0x556b9db30000] -> 0xc1e53200
	[0x556b9db30200] -> 0xc1e53200
	[0x556b9db30400] -> 0xc1e53200
	[0x556b9db30600] -> 0xc1e53200
	[0x556b9db30800] -> 0xc1e53200
	[0x556b9db30a00] -> 0xc1e53200
	[0x556b9db30c00] -> 0xc1e53200
	[0x556b9db30e00] -> 0xc1e53200
	[0x556b9db31000] -> 0xc1e53200
	[0x556b9db31200] -> 0xc1e53200
	[0x556b9db31400] -> 0xc1e53200
	[0x556b9db31600] -> 0xc1e53200
	[0x556b9db31800] -> 0xc1e53200
	[0x556b9db31a00] -> 0xc1e53200
	[0x556b9db31c00] -> 0xc1e53200
	[0x556b9db31e00] -> 0xc1e53200
	[0x556b9db32000] -> 0xc1e53200
	[0x556b9db32200] -> 0xc1e53200
	[0x556b9db32400] -> 0xc1e53200
	[0x556b9db32600] -> 0xc1e53200
	[0x556b9db32800] -> 0xc1e53200
	[0x556b9db32a00] -> 0xc1e53200
	[0x556b9db32c00] -> 0xc1e53200
gpgpusim: tlas address 0xc1eae800
Streaming cache with 8192 mshr
GPGPU-Sim uArch: Shader 0 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: CTA/core = 16, limited by: cta_limit
GPGPU-Sim uArch: Shader 1 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
Loaded coordinates in file: /home/ggc/ray_tracing/Predictor/data/coordinates//chunk_2_1.coords
GPGPU-Sim PTX: WARNING (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:106) ** reading undefined register '%const1_f32' (cuid:0). Setting to 0X00000000. This is okay if you are simulating the native ISA
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_INTERSECTION_func6_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_INTERSECTION_func6_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_INTERSECTION_func6_main'...
Printing basic blocks for function 'MESA_SHADER_INTERSECTION_func6_main':
bb_00	:  PC=0x80a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:12) rt_alloc_mem %Sphere, 64, 64; // decl_var ray_hit_attrib INTERP_MODE_NONE vec4 Sphere
bb_00	:  PC=0x80b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:20) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x80b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:23) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x80c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:26) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x80c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:29) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x80d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:34) mov.f32 %ssa_0, 0F00000000; // vec1 32 ssa_0 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x80d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:36) mov.b32 %ssa_0_bits, 0F00000000;
bb_00	:  PC=0x80e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:39) load_ray_instance_custom_index %ssa_1;// vec1 32 ssa_1 = intrinsic load_ray_instance_custom_index () ()
bb_00	:  PC=0x80e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:42) load_vulkan_descriptor %ssa_2, 0, 9, 7; // vec2 32 ssa_2 = intrinsic vulkan_resource_index (%ssa_0) (0, 9, 7) /* desc_set=0 */ /* binding=9 */ /* desc_type=SSBO */
bb_00	:  PC=0x80f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:45) mov.b64 %ssa_3, %ssa_2; // vec2 32 ssa_3 = intrinsic load_vulkan_descriptor (%ssa_2) (7) /* desc_type=SSBO */
bb_00	:  PC=0x80f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:48) mov.b64 %ssa_4, %ssa_3; // vec2 32 ssa_4 = deref_cast (SphereArray *)ssa_3 (ssbo SphereArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x8100 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:51) add.u64 %ssa_5, %ssa_4, 0; // vec2 32 ssa_5 = deref_struct &ssa_4->Spheres (ssbo vec4[]) /* &((SphereArray *)ssa_3)->Spheres */
bb_00	:  PC=0x8108 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:56) mov.u32 %ssa_6_array_index_32, %ssa_1;
bb_00	:  PC=0x8110 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:57) mul.wide.u32 %ssa_6_array_index_64, %ssa_6_array_index_32, 16;
bb_00	:  PC=0x8118 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:58) add.u64 %ssa_6, %ssa_5, %ssa_6_array_index_64; // vec2 32 ssa_6 = deref_array &(*ssa_5)[ssa_1] (ssbo vec4) /* &((SphereArray *)ssa_3)->Spheres[ssa_1] */
bb_00	:  PC=0x8120 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:64) ld.global.f32 %ssa_7_0, [%ssa_6 + 0];
bb_00	:  PC=0x8128 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:65) ld.global.f32 %ssa_7_1, [%ssa_6 + 4];
bb_00	:  PC=0x8130 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:66) ld.global.f32 %ssa_7_2, [%ssa_6 + 8];
bb_00	:  PC=0x8138 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:67) ld.global.f32 %ssa_7_3, [%ssa_6 + 12];
bb_00	:  PC=0x8140 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:76) load_ray_world_origin %ssa_8_address; // vec3 32 ssa_8 = intrinsic load_ray_world_origin () ()
bb_00	:  PC=0x8148 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:77) ld.global.f32 %ssa_8_0, [%ssa_8_address + 0];
bb_00	:  PC=0x8150 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:78) ld.global.f32 %ssa_8_1, [%ssa_8_address + 4];
bb_00	:  PC=0x8158 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:79) ld.global.f32 %ssa_8_2, [%ssa_8_address + 8];
bb_00	:  PC=0x8160 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:80) ld.global.f32 %ssa_8_3, [%ssa_8_address + 12];
bb_00	:  PC=0x8168 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:87) load_ray_world_direction %ssa_9_address; // vec3 32 ssa_9 = intrinsic load_ray_world_direction () ()
bb_00	:  PC=0x8170 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:88) ld.global.f32 %ssa_9_0, [%ssa_9_address + 0];
bb_00	:  PC=0x8178 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:89) ld.global.f32 %ssa_9_1, [%ssa_9_address + 4];
bb_00	:  PC=0x8180 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:90) ld.global.f32 %ssa_9_2, [%ssa_9_address + 8];
bb_00	:  PC=0x8188 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:91) ld.global.f32 %ssa_9_3, [%ssa_9_address + 12];
bb_00	:  PC=0x8190 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:94) load_ray_t_min %ssa_10;// vec1 32 ssa_10 = intrinsic load_ray_t_min () ()
bb_00	:  PC=0x8198 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:97) load_ray_t_max %ssa_11;// vec1 32 ssa_11 = intrinsic load_ray_t_max () ()
bb_00	:  PC=0x81a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:100) neg.f32 %ssa_12, %ssa_7_0; // vec1 32 ssa_12 = fneg ssa_7.x
bb_00	:  PC=0x81a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:103) neg.f32 %ssa_13, %ssa_7_1; // vec1 32 ssa_13 = fneg ssa_7.y
bb_00	:  PC=0x81b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:106) neg.f32 %ssa_14, %ssa_7_2; // vec1 32 ssa_14 = fneg ssa_7.z
bb_00	:  PC=0x81b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:109) add.f32 %ssa_15, %ssa_8_0, %ssa_12; // vec1 32 ssa_15 = fadd ssa_8.x, ssa_12
bb_00	:  PC=0x81c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:112) add.f32 %ssa_16, %ssa_8_1, %ssa_13; // vec1 32 ssa_16 = fadd ssa_8.y, ssa_13
bb_00	:  PC=0x81c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:115) add.f32 %ssa_17, %ssa_8_2, %ssa_14; // vec1 32 ssa_17 = fadd ssa_8.z, ssa_14
bb_00	:  PC=0x81d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:118) mul.f32 %ssa_18, %ssa_9_0, %ssa_9_0; // vec1 32 ssa_18 = fmul ssa_9.x, ssa_9.x
bb_00	:  PC=0x81d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:121) mul.f32 %ssa_19, %ssa_9_1, %ssa_9_1; // vec1 32 ssa_19 = fmul ssa_9.y, ssa_9.y
bb_00	:  PC=0x81e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:124) mul.f32 %ssa_20, %ssa_9_2, %ssa_9_2; // vec1 32 ssa_20 = fmul ssa_9.z, ssa_9.z
bb_00	:  PC=0x81e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:130) mov.f32 %ssa_21_0, %ssa_18;
bb_00	:  PC=0x81f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:131) mov.f32 %ssa_21_1, %ssa_19;
bb_00	:  PC=0x81f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:132) mov.f32 %ssa_21_2, %ssa_20; // vec3 32 ssa_21 = vec3 ssa_18, ssa_19, ssa_20
bb_00	:  PC=0x8200 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:135) add.f32 %ssa_22, %ssa_21_0, %ssa_21_1;
bb_00	:  PC=0x8208 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:136) add.f32 %ssa_22, %ssa_22, %ssa_21_2; // vec1 32 ssa_22 = fsum3 ssa_21
bb_00	:  PC=0x8210 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:139) mul.f32 %ssa_23, %ssa_15, %ssa_9_0; // vec1 32 ssa_23 = fmul ssa_15, ssa_9.x
bb_00	:  PC=0x8218 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:142) mul.f32 %ssa_24, %ssa_16, %ssa_9_1; // vec1 32 ssa_24 = fmul ssa_16, ssa_9.y
bb_00	:  PC=0x8220 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:145) mul.f32 %ssa_25, %ssa_17, %ssa_9_2; // vec1 32 ssa_25 = fmul ssa_17, ssa_9.z
bb_00	:  PC=0x8228 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:151) mov.f32 %ssa_26_0, %ssa_23;
bb_00	:  PC=0x8230 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:152) mov.f32 %ssa_26_1, %ssa_24;
bb_00	:  PC=0x8238 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:153) mov.f32 %ssa_26_2, %ssa_25; // vec3 32 ssa_26 = vec3 ssa_23, ssa_24, ssa_25
bb_00	:  PC=0x8240 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:156) add.f32 %ssa_27, %ssa_26_0, %ssa_26_1;
bb_00	:  PC=0x8248 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:157) add.f32 %ssa_27, %ssa_27, %ssa_26_2; // vec1 32 ssa_27 = fsum3 ssa_26
bb_00	:  PC=0x8250 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:160) mul.f32 %ssa_28, %ssa_15, %ssa_15;// vec1 32 ssa_28 = fmul ssa_15, ssa_15
bb_00	:  PC=0x8258 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:163) mul.f32 %ssa_29, %ssa_16, %ssa_16;// vec1 32 ssa_29 = fmul ssa_16, ssa_16
bb_00	:  PC=0x8260 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:166) mul.f32 %ssa_30, %ssa_17, %ssa_17;// vec1 32 ssa_30 = fmul ssa_17, ssa_17
bb_00	:  PC=0x8268 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:172) mov.f32 %ssa_31_0, %ssa_28;
bb_00	:  PC=0x8270 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:173) mov.f32 %ssa_31_1, %ssa_29;
bb_00	:  PC=0x8278 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:174) mov.f32 %ssa_31_2, %ssa_30; // vec3 32 ssa_31 = vec3 ssa_28, ssa_29, ssa_30
bb_00	:  PC=0x8280 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:177) add.f32 %ssa_32, %ssa_31_0, %ssa_31_1;
bb_00	:  PC=0x8288 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:178) add.f32 %ssa_32, %ssa_32, %ssa_31_2; // vec1 32 ssa_32 = fsum3 ssa_31
bb_00	:  PC=0x8290 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:181) mul.f32 %ssa_33, %ssa_7_3, %ssa_7_3; // vec1 32 ssa_33 = fmul ssa_7.w, ssa_7.w
bb_00	:  PC=0x8298 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:184) neg.f32 %ssa_34, %ssa_33;// vec1 32 ssa_34 = fneg ssa_33
bb_00	:  PC=0x82a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:187) add.f32 %ssa_35, %ssa_32, %ssa_34;// vec1 32 ssa_35 = fadd ssa_32, ssa_34
bb_00	:  PC=0x82a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:190) mul.f32 %ssa_36, %ssa_27, %ssa_27;// vec1 32 ssa_36 = fmul ssa_27, ssa_27
bb_00	:  PC=0x82b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:193) mul.f32 %ssa_37, %ssa_22, %ssa_35;// vec1 32 ssa_37 = fmul ssa_22, ssa_35
bb_00	:  PC=0x82b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:196) neg.f32 %ssa_38, %ssa_37;// vec1 32 ssa_38 = fneg ssa_37
bb_00	:  PC=0x82c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:199) add.f32 %ssa_39, %ssa_36, %ssa_38;// vec1 32 ssa_39 = fadd ssa_36, ssa_38
bb_00	:  PC=0x82c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:202) setp.ge.f32 %ssa_40, %ssa_39, %ssa_0;// vec1  1 ssa_40 = fge! ssa_39, ssa_0
bb_00	:  PC=0x82d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:207) @!%ssa_40 bra else_43;

bb_01	:  PC=0x82d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:212) neg.f32 %ssa_41, %ssa_27;// vec1 32 ssa_41 = fneg ssa_27
bb_01	:  PC=0x82e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:215) sqrt.approx.f32 %ssa_42, %ssa_39;// vec1 32 ssa_42 = fsqrt ssa_39
bb_01	:  PC=0x82e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:218) neg.f32 %ssa_43, %ssa_42;// vec1 32 ssa_43 = fneg ssa_42
bb_01	:  PC=0x82f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:221) add.f32 %ssa_44, %ssa_41, %ssa_43;// vec1 32 ssa_44 = fadd ssa_41, ssa_43
bb_01	:  PC=0x82f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:224) rcp.approx.f32 %ssa_45, %ssa_22;// vec1 32 ssa_45 = frcp ssa_22
bb_01	:  PC=0x8300 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:227) mul.f32 %ssa_46, %ssa_44, %ssa_45;// vec1 32 ssa_46 = fmul ssa_44, ssa_45
bb_01	:  PC=0x8308 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:230) add.f32 %ssa_47, %ssa_41, %ssa_42;// vec1 32 ssa_47 = fadd ssa_41, ssa_42
bb_01	:  PC=0x8310 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:233) mul.f32 %ssa_48, %ssa_47, %ssa_45;// vec1 32 ssa_48 = fmul ssa_47, ssa_45
bb_01	:  PC=0x8318 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:236) setp.ge.f32 %ssa_49, %ssa_46, %ssa_10;// vec1  1 ssa_49 = fge! ssa_46, ssa_10
bb_01	:  PC=0x8320 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:239) setp.lt.f32 %ssa_50, %ssa_46, %ssa_11;// vec1  1 ssa_50 = flt! ssa_46, ssa_11
bb_01	:  PC=0x8328 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:242) and.pred %ssa_51, %ssa_49, %ssa_50;// vec1  1 ssa_51 = iand ssa_49, ssa_50
bb_01	:  PC=0x8330 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:245) setp.ge.f32 %ssa_52, %ssa_48, %ssa_10;// vec1  1 ssa_52 = fge! ssa_48, ssa_10
bb_01	:  PC=0x8338 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:248) setp.lt.f32 %ssa_53, %ssa_48, %ssa_11;// vec1  1 ssa_53 = flt! ssa_48, ssa_11
bb_01	:  PC=0x8340 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:251) and.pred %ssa_54, %ssa_52, %ssa_53;// vec1  1 ssa_54 = iand ssa_52, ssa_53
bb_01	:  PC=0x8348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:254) or.pred %ssa_55, %ssa_51, %ssa_54;// vec1  1 ssa_55 = ior ssa_51, ssa_54
bb_01	:  PC=0x8350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:259) @!%ssa_55 bra else_44;

bb_02	:  PC=0x8358 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:264) mov.b64 %ssa_56, %Sphere; // vec1 32 ssa_56 = deref_var &Sphere (ray_hit_attrib vec4) 
bb_02	:  PC=0x8360 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:266) st.global.f32 [%ssa_56 + 0], %ssa_7_0;
bb_02	:  PC=0x8368 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:267) st.global.f32 [%ssa_56 + 4], %ssa_7_1;
bb_02	:  PC=0x8370 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:268) st.global.f32 [%ssa_56 + 8], %ssa_7_2;
bb_02	:  PC=0x8378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:269) st.global.f32 [%ssa_56 + 12], %ssa_7_3;
bb_02	:  PC=0x8380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:274) selp.f32 %ssa_57, %ssa_46, %ssa_48, %ssa_51; // vec1 32 ssa_57 = bcsel ssa_51, ssa_46, ssa_48
bb_02	:  PC=0x8388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:277) report_ray_intersection.pred %ssa_58, %ssa_57, %ssa_0;// vec1  1 ssa_58 = intrinsic report_ray_intersection (%ssa_57, %ssa_0) ()
bb_02	:  PC=0x8390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:281) bra end_if_44;

bb_03	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:288) end_if_44:
bb_03	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:293) bra end_if_43;
bb_03	:  PC=0x8398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:293) bra end_if_43;

bb_04	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:300) end_if_43:
bb_04	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:306) shader_exit:
bb_04	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:307) ret ;
bb_04	:  PC=0x83a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:307) ret ;

Summary of basic blocks for 'MESA_SHADER_INTERSECTION_func6_main':
bb_00	: first: rt_alloc_mem	 last: bra	
bb_01	: first: neg	 last: bra	
bb_02	: first: mov	 last: bra	
bb_03	: first: bra	 last: bra	
bb_04	: first: ret	 last: ret	
bb_05	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_INTERSECTION_func6_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_INTERSECTION_func6_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_INTERSECTION_func6_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_INTERSECTION_func6_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x82d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:207) @!%ssa_40 bra else_43;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x83a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:307) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x8350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:259) @!%ssa_55 bra else_44;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x8398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:293) bra end_if_43;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x8390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:281) bra end_if_44;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x8398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:293) bra end_if_43;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x8398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:293) bra end_if_43;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x83a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx:307) ret ;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_INTERSECTION_func6_main
Operand information not set. load_vulkan_descriptor %ssa_2, 0, 9, 7; // vec2 32 ssa_2 = intrinsic vulkan_resource_index (%ssa_0) (0, 9, 7) /* desc_set=0 */ /* binding=9 */ /* desc_type=SSBO */
Operand information not set. report_ray_intersection.pred %ssa_58, %ssa_57, %ssa_0;// vec1  1 ssa_58 = intrinsic report_ray_intersection (%ssa_57, %ssa_0) ()
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_INTERSECTION_func6_main'.
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_CLOSEST_HIT_func3_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_CLOSEST_HIT_func3_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_CLOSEST_HIT_func3_main'...
Printing basic blocks for function 'MESA_SHADER_CLOSEST_HIT_func3_main':
bb_00	:  PC=0x3cc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:96) load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
bb_00	:  PC=0x3cd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:98) rt_alloc_mem %Ray, 48, 32; // decl_var shader_call_data INTERP_MODE_NONE RayPayload Ray
bb_00	:  PC=0x3cd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:106) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x3ce0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:109) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x3ce8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:112) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x3cf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:115) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x3cf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:120) load_ray_instance_custom_index %ssa_0;// vec1 32 ssa_0 = intrinsic load_ray_instance_custom_index () ()
bb_00	:  PC=0x3d00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:123) mov.f32 %ssa_1, 0F00000000; // vec1 32 ssa_1 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x3d08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:125) mov.b32 %ssa_1_bits, 0F00000000;
bb_00	:  PC=0x3d10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:128) load_vulkan_descriptor %ssa_2, 0, 7, 7; // vec2 32 ssa_2 = intrinsic vulkan_resource_index (%ssa_1) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
bb_00	:  PC=0x3d18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:131) mov.b64 %ssa_3, %ssa_2; // vec2 32 ssa_3 = intrinsic load_vulkan_descriptor (%ssa_2) (7) /* desc_type=SSBO */
bb_00	:  PC=0x3d20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:134) mov.b64 %ssa_4, %ssa_3; // vec2 32 ssa_4 = deref_cast (OffsetArray *)ssa_3 (ssbo OffsetArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x3d28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:137) add.u64 %ssa_5, %ssa_4, 0; // vec2 32 ssa_5 = deref_struct &ssa_4->Offsets (ssbo uvec2[]) /* &((OffsetArray *)ssa_3)->Offsets */
bb_00	:  PC=0x3d30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:142) mov.u32 %ssa_6_array_index_32, %ssa_0;
bb_00	:  PC=0x3d38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:143) mul.wide.u32 %ssa_6_array_index_64, %ssa_6_array_index_32, 8;
bb_00	:  PC=0x3d40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:144) add.u64 %ssa_6, %ssa_5, %ssa_6_array_index_64; // vec2 32 ssa_6 = deref_array &(*ssa_5)[ssa_0] (ssbo uvec2) /* &((OffsetArray *)ssa_3)->Offsets[ssa_0] */
bb_00	:  PC=0x3d48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:148) ld.global.u32 %ssa_7_0, [%ssa_6 + 0];
bb_00	:  PC=0x3d50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:149) ld.global.u32 %ssa_7_1, [%ssa_6 + 4];
bb_00	:  PC=0x3d58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:154) mov.u32 %ssa_8, %ssa_7_0; // vec1 32 ssa_8 = mov ssa_7.x
bb_00	:  PC=0x3d60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:157) load_vulkan_descriptor %ssa_9, 0, 5, 7; // vec2 32 ssa_9 = intrinsic vulkan_resource_index (%ssa_1) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
bb_00	:  PC=0x3d68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:160) mov.b64 %ssa_10, %ssa_9; // vec2 32 ssa_10 = intrinsic load_vulkan_descriptor (%ssa_9) (7) /* desc_type=SSBO */
bb_00	:  PC=0x3d70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:163) mov.b64 %ssa_11, %ssa_10; // vec2 32 ssa_11 = deref_cast (IndexArray *)ssa_10 (ssbo IndexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x3d78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:166) add.u64 %ssa_12, %ssa_11, 0; // vec2 32 ssa_12 = deref_struct &ssa_11->Indices (ssbo uint[]) /* &((IndexArray *)ssa_10)->Indices */
bb_00	:  PC=0x3d80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:171) mov.u32 %ssa_13_array_index_32, %ssa_8;
bb_00	:  PC=0x3d88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:172) mul.wide.u32 %ssa_13_array_index_64, %ssa_13_array_index_32, 4;
bb_00	:  PC=0x3d90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:173) add.u64 %ssa_13, %ssa_12, %ssa_13_array_index_64; // vec2 32 ssa_13 = deref_array &(*ssa_12)[ssa_8] (ssbo uint) /* &((IndexArray *)ssa_10)->Indices[ssa_8] */
bb_00	:  PC=0x3d98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:176) ld.global.u32 %ssa_14, [%ssa_13]; // vec1 32 ssa_14 = intrinsic load_deref (%ssa_13) (16) /* access=16 */
bb_00	:  PC=0x3da0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:179) add.s32 %ssa_15, %ssa_7_1, %ssa_14; // vec1 32 ssa_15 = iadd ssa_7.y, ssa_14
bb_00	:  PC=0x3da8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:182) mov.f32 %ssa_16, 0F00000008; // vec1 32 ssa_16 = load_const (0x00000008 /* 0.000000 */)
bb_00	:  PC=0x3db0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:184) mov.b32 %ssa_16_bits, 0F00000008;
bb_00	:  PC=0x3db8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:187) mov.f32 %ssa_17, 0F00000009; // vec1 32 ssa_17 = load_const (0x00000009 /* 0.000000 */)
bb_00	:  PC=0x3dc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:189) mov.b32 %ssa_17_bits, 0F00000009;
bb_00	:  PC=0x3dc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:192) mul.lo.s32 %ssa_18, %ssa_15, %ssa_17_bits; // vec1 32 ssa_18 = imul ssa_15, ssa_17
bb_00	:  PC=0x3dd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:195) add.s32 %ssa_19, %ssa_18, %ssa_16_bits; // vec1 32 ssa_19 = iadd ssa_18, ssa_16
bb_00	:  PC=0x3dd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:198) load_vulkan_descriptor %ssa_20, 0, 4, 7; // vec2 32 ssa_20 = intrinsic vulkan_resource_index (%ssa_1) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
bb_00	:  PC=0x3de0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:201) mov.b64 %ssa_21, %ssa_20; // vec2 32 ssa_21 = intrinsic load_vulkan_descriptor (%ssa_20) (7) /* desc_type=SSBO */
bb_00	:  PC=0x3de8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:204) mov.b64 %ssa_22, %ssa_21; // vec2 32 ssa_22 = deref_cast (VertexArray *)ssa_21 (ssbo VertexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x3df0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:207) add.u64 %ssa_23, %ssa_22, 0; // vec2 32 ssa_23 = deref_struct &ssa_22->Vertices (ssbo float[]) /* &((VertexArray *)ssa_21)->Vertices */
bb_00	:  PC=0x3df8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:212) cvt.u32.s32 %ssa_24_array_index_32, %ssa_19;
bb_00	:  PC=0x3e00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:213) mul.wide.u32 %ssa_24_array_index_64, %ssa_24_array_index_32, 4;
bb_00	:  PC=0x3e08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:214) add.u64 %ssa_24, %ssa_23, %ssa_24_array_index_64; // vec2 32 ssa_24 = deref_array &(*ssa_23)[ssa_19] (ssbo float) /* &((VertexArray *)ssa_21)->Vertices[ssa_19] */
bb_00	:  PC=0x3e10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:217) ld.global.f32 %ssa_25, [%ssa_24]; // vec1 32 ssa_25 = intrinsic load_deref (%ssa_24) (16) /* access=16 */
bb_00	:  PC=0x3e18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:220) load_vulkan_descriptor %ssa_26, 0, 6, 7; // vec2 32 ssa_26 = intrinsic vulkan_resource_index (%ssa_1) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
bb_00	:  PC=0x3e20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:223) mov.b64 %ssa_27, %ssa_26; // vec2 32 ssa_27 = intrinsic load_vulkan_descriptor (%ssa_26) (7) /* desc_type=SSBO */
bb_00	:  PC=0x3e28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:226) mov.b64 %ssa_28, %ssa_27; // vec2 32 ssa_28 = deref_cast (MaterialArray *)ssa_27 (ssbo MaterialArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x3e30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:229) add.u64 %ssa_29, %ssa_28, 0; // vec2 32 ssa_29 = deref_struct &ssa_28->Materials (ssbo Material[]) /* &((MaterialArray *)ssa_27)->Materials */
bb_00	:  PC=0x3e38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:234) mov.b32 %ssa_30_array_index_32, %ssa_25;
bb_00	:  PC=0x3e40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:235) mul.wide.u32 %ssa_30_array_index_64, %ssa_30_array_index_32, 32;
bb_00	:  PC=0x3e48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:236) add.u64 %ssa_30, %ssa_29, %ssa_30_array_index_64; // vec2 32 ssa_30 = deref_array &(*ssa_29)[ssa_25] (ssbo Material) /* &((MaterialArray *)ssa_27)->Materials[ssa_25] */
bb_00	:  PC=0x3e50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:239) add.u64 %ssa_31, %ssa_30, 0; // vec2 32 ssa_31 = deref_struct &ssa_30->Diffuse (ssbo vec4) /* &((MaterialArray *)ssa_27)->Materials[ssa_25].Diffuse */
bb_00	:  PC=0x3e58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:245) ld.global.f32 %ssa_32_0, [%ssa_31 + 0];
bb_00	:  PC=0x3e60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:246) ld.global.f32 %ssa_32_1, [%ssa_31 + 4];
bb_00	:  PC=0x3e68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:247) ld.global.f32 %ssa_32_2, [%ssa_31 + 8];
bb_00	:  PC=0x3e70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:248) ld.global.f32 %ssa_32_3, [%ssa_31 + 12];
bb_00	:  PC=0x3e78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:253) add.u64 %ssa_33, %ssa_30, 16; // vec2 32 ssa_33 = deref_struct &ssa_30->DiffuseTextureId (ssbo int) /* &((MaterialArray *)ssa_27)->Materials[ssa_25].DiffuseTextureId */
bb_00	:  PC=0x3e80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:256) ld.global.s32 %ssa_34, [%ssa_33]; // vec1 32 ssa_34 = intrinsic load_deref (%ssa_33) (16) /* access=16 */
bb_00	:  PC=0x3e88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:259) add.u64 %ssa_35, %ssa_30, 20; // vec2 32 ssa_35 = deref_struct &ssa_30->Fuzziness (ssbo float) /* &((MaterialArray *)ssa_27)->Materials[ssa_25].Fuzziness */
bb_00	:  PC=0x3e90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:262) ld.global.f32 %ssa_36, [%ssa_35]; // vec1 32 ssa_36 = intrinsic load_deref (%ssa_35) (16) /* access=16 */
bb_00	:  PC=0x3e98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:265) add.u64 %ssa_37, %ssa_30, 24; // vec2 32 ssa_37 = deref_struct &ssa_30->RefractionIndex (ssbo float) /* &((MaterialArray *)ssa_27)->Materials[ssa_25].RefractionIndex */
bb_00	:  PC=0x3ea0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:268) ld.global.f32 %ssa_38, [%ssa_37]; // vec1 32 ssa_38 = intrinsic load_deref (%ssa_37) (16) /* access=16 */
bb_00	:  PC=0x3ea8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:271) add.u64 %ssa_39, %ssa_30, 28; // vec2 32 ssa_39 = deref_struct &ssa_30->MaterialModel (ssbo uint) /* &((MaterialArray *)ssa_27)->Materials[ssa_25].MaterialModel */
bb_00	:  PC=0x3eb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:274) ld.global.u32 %ssa_40, [%ssa_39]; // vec1 32 ssa_40 = intrinsic load_deref (%ssa_39) (16) /* access=16 */
bb_00	:  PC=0x3eb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:277) load_vulkan_descriptor %ssa_41, 0, 9, 7; // vec2 32 ssa_41 = intrinsic vulkan_resource_index (%ssa_1) (0, 9, 7) /* desc_set=0 */ /* binding=9 */ /* desc_type=SSBO */
bb_00	:  PC=0x3ec0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:280) mov.b64 %ssa_42, %ssa_41; // vec2 32 ssa_42 = intrinsic load_vulkan_descriptor (%ssa_41) (7) /* desc_type=SSBO */
bb_00	:  PC=0x3ec8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:283) mov.b64 %ssa_43, %ssa_42; // vec2 32 ssa_43 = deref_cast (SphereArray *)ssa_42 (ssbo SphereArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x3ed0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:286) add.u64 %ssa_44, %ssa_43, 0; // vec2 32 ssa_44 = deref_struct &ssa_43->Spheres (ssbo vec4[]) /* &((SphereArray *)ssa_42)->Spheres */
bb_00	:  PC=0x3ed8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:291) mov.u32 %ssa_45_array_index_32, %ssa_0;
bb_00	:  PC=0x3ee0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:292) mul.wide.u32 %ssa_45_array_index_64, %ssa_45_array_index_32, 16;
bb_00	:  PC=0x3ee8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:293) add.u64 %ssa_45, %ssa_44, %ssa_45_array_index_64; // vec2 32 ssa_45 = deref_array &(*ssa_44)[ssa_0] (ssbo vec4) /* &((SphereArray *)ssa_42)->Spheres[ssa_0] */
bb_00	:  PC=0x3ef0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:299) ld.global.f32 %ssa_46_0, [%ssa_45 + 0];
bb_00	:  PC=0x3ef8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:300) ld.global.f32 %ssa_46_1, [%ssa_45 + 4];
bb_00	:  PC=0x3f00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:301) ld.global.f32 %ssa_46_2, [%ssa_45 + 8];
bb_00	:  PC=0x3f08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:302) ld.global.f32 %ssa_46_3, [%ssa_45 + 12];
bb_00	:  PC=0x3f10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:311) load_ray_world_origin %ssa_47_address; // vec3 32 ssa_47 = intrinsic load_ray_world_origin () ()
bb_00	:  PC=0x3f18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:312) ld.global.f32 %ssa_47_0, [%ssa_47_address + 0];
bb_00	:  PC=0x3f20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:313) ld.global.f32 %ssa_47_1, [%ssa_47_address + 4];
bb_00	:  PC=0x3f28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:314) ld.global.f32 %ssa_47_2, [%ssa_47_address + 8];
bb_00	:  PC=0x3f30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:315) ld.global.f32 %ssa_47_3, [%ssa_47_address + 12];
bb_00	:  PC=0x3f38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:318) load_ray_t_max %ssa_48;// vec1 32 ssa_48 = intrinsic load_ray_t_max () ()
bb_00	:  PC=0x3f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:325) load_ray_world_direction %ssa_49_address; // vec3 32 ssa_49 = intrinsic load_ray_world_direction () ()
bb_00	:  PC=0x3f48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:326) ld.global.f32 %ssa_49_0, [%ssa_49_address + 0];
bb_00	:  PC=0x3f50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:327) ld.global.f32 %ssa_49_1, [%ssa_49_address + 4];
bb_00	:  PC=0x3f58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:328) ld.global.f32 %ssa_49_2, [%ssa_49_address + 8];
bb_00	:  PC=0x3f60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:329) ld.global.f32 %ssa_49_3, [%ssa_49_address + 12];
bb_00	:  PC=0x3f68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:332) mul.f32 %ssa_50, %ssa_49_0, %ssa_48; // vec1 32 ssa_50 = fmul ssa_49.x, ssa_48
bb_00	:  PC=0x3f70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:335) mul.f32 %ssa_51, %ssa_49_1, %ssa_48; // vec1 32 ssa_51 = fmul ssa_49.y, ssa_48
bb_00	:  PC=0x3f78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:338) mul.f32 %ssa_52, %ssa_49_2, %ssa_48; // vec1 32 ssa_52 = fmul ssa_49.z, ssa_48
bb_00	:  PC=0x3f80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:341) add.f32 %ssa_53, %ssa_47_0, %ssa_50; // vec1 32 ssa_53 = fadd ssa_47.x, ssa_50
bb_00	:  PC=0x3f88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:344) add.f32 %ssa_54, %ssa_47_1, %ssa_51; // vec1 32 ssa_54 = fadd ssa_47.y, ssa_51
bb_00	:  PC=0x3f90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:347) add.f32 %ssa_55, %ssa_47_2, %ssa_52; // vec1 32 ssa_55 = fadd ssa_47.z, ssa_52
bb_00	:  PC=0x3f98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:350) neg.f32 %ssa_56, %ssa_46_0; // vec1 32 ssa_56 = fneg ssa_46.x
bb_00	:  PC=0x3fa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:353) neg.f32 %ssa_57, %ssa_46_1; // vec1 32 ssa_57 = fneg ssa_46.y
bb_00	:  PC=0x3fa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:356) neg.f32 %ssa_58, %ssa_46_2; // vec1 32 ssa_58 = fneg ssa_46.z
bb_00	:  PC=0x3fb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:359) add.f32 %ssa_59, %ssa_53, %ssa_56;// vec1 32 ssa_59 = fadd ssa_53, ssa_56
bb_00	:  PC=0x3fb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:362) add.f32 %ssa_60, %ssa_54, %ssa_57;// vec1 32 ssa_60 = fadd ssa_54, ssa_57
bb_00	:  PC=0x3fc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:365) add.f32 %ssa_61, %ssa_55, %ssa_58;// vec1 32 ssa_61 = fadd ssa_55, ssa_58
bb_00	:  PC=0x3fc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:368) rcp.approx.f32 %ssa_62, %ssa_46_3; // vec1 32 ssa_62 = frcp ssa_46.w
bb_00	:  PC=0x3fd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:371) mul.f32 %ssa_63, %ssa_59, %ssa_62;// vec1 32 ssa_63 = fmul ssa_59, ssa_62
bb_00	:  PC=0x3fd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:374) mul.f32 %ssa_64, %ssa_60, %ssa_62;// vec1 32 ssa_64 = fmul ssa_60, ssa_62
bb_00	:  PC=0x3fe0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:377) mul.f32 %ssa_65, %ssa_61, %ssa_62;// vec1 32 ssa_65 = fmul ssa_61, ssa_62
bb_00	:  PC=0x3fe8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:383) mov.f32 %ssa_66_0, %ssa_63;
bb_00	:  PC=0x3ff0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:384) mov.f32 %ssa_66_1, %ssa_64;
bb_00	:  PC=0x3ff8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:385) mov.f32 %ssa_66_2, %ssa_65; // vec3 32 ssa_66 = vec3 ssa_63, ssa_64, ssa_65
bb_00	:  PC=0x4000 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:388) mov.f32 %ssa_67, 0F3f800000; // vec1 32 ssa_67 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x4008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:390) mov.b32 %ssa_67_bits, 0F3f800000;
bb_00	:  PC=0x4010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:393) mov.f32 %ssa_68, 0F3fc90fdb; // vec1 32 ssa_68 = load_const (0x3fc90fdb /* 1.570796 */)
bb_00	:  PC=0x4018 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:395) mov.b32 %ssa_68_bits, 0F3fc90fdb;
bb_00	:  PC=0x4020 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:398) mov.f32 %ssa_69, 0F40490fdb; // vec1 32 ssa_69 = load_const (0x40490fdb /* 3.141593 */)
bb_00	:  PC=0x4028 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:400) mov.b32 %ssa_69_bits, 0F40490fdb;
bb_00	:  PC=0x4030 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:403) setp.ge.f32 %ssa_70, %ssa_1, %ssa_65;// vec1  1 ssa_70 = fge ssa_1, ssa_65
bb_00	:  PC=0x4038 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:406) abs.f32 %ssa_71, %ssa_65;// vec1 32 ssa_71 = fabs ssa_65
bb_00	:  PC=0x4040 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:409) selp.f32 %ssa_72, %ssa_71, %ssa_63, %ssa_70; // vec1 32 ssa_72 = bcsel ssa_70, ssa_71, ssa_63
bb_00	:  PC=0x4048 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:412) selp.f32 %ssa_73, %ssa_63, %ssa_71, %ssa_70; // vec1 32 ssa_73 = bcsel ssa_70, ssa_63, ssa_71
bb_00	:  PC=0x4050 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:415) mov.f32 %ssa_74, 0F3e800000; // vec1 32 ssa_74 = load_const (0x3e800000 /* 0.250000 */)
bb_00	:  PC=0x4058 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:417) mov.b32 %ssa_74_bits, 0F3e800000;
bb_00	:  PC=0x4060 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:420) abs.f32 %ssa_75, %ssa_73;// vec1 32 ssa_75 = fabs ssa_73
bb_00	:  PC=0x4068 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:423) mov.f32 %ssa_76, 0F5d5e0b6b; // vec1 32 ssa_76 = load_const (0x5d5e0b6b /* 999999984306749440.000000 */)
bb_00	:  PC=0x4070 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:425) mov.b32 %ssa_76_bits, 0F5d5e0b6b;
bb_00	:  PC=0x4078 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:428) setp.ge.f32 %ssa_77, %ssa_75, %ssa_76;// vec1  1 ssa_77 = fge ssa_75, ssa_76
bb_00	:  PC=0x4080 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:431) selp.f32 %ssa_78, %ssa_74_bits, %ssa_67_bits, %ssa_77; // vec1 32 ssa_78 = bcsel ssa_77, ssa_74, ssa_67
bb_00	:  PC=0x4088 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:434) mul.f32 %ssa_79, %ssa_73, %ssa_78;// vec1 32 ssa_79 = fmul ssa_73, ssa_78
bb_00	:  PC=0x4090 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:437) rcp.approx.f32 %ssa_80, %ssa_79;// vec1 32 ssa_80 = frcp ssa_79
bb_00	:  PC=0x4098 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:440) mul.f32 %ssa_81, %ssa_72, %ssa_78;// vec1 32 ssa_81 = fmul ssa_72, ssa_78
bb_00	:  PC=0x40a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:443) mul.f32 %ssa_82, %ssa_81, %ssa_80;// vec1 32 ssa_82 = fmul ssa_81, ssa_80
bb_00	:  PC=0x40a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:446) abs.f32 %ssa_83, %ssa_82;// vec1 32 ssa_83 = fabs ssa_82
bb_00	:  PC=0x40b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:449) abs.f32 %ssa_84, %ssa_63;// vec1 32 ssa_84 = fabs ssa_63
bb_00	:  PC=0x40b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:452) setp.eq.f32 %ssa_85, %ssa_71, %ssa_84;// vec1  1 ssa_85 = feq ssa_71, ssa_84
bb_00	:  PC=0x40c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:455) selp.f32 %ssa_86, %ssa_67_bits, %ssa_83, %ssa_85; // vec1 32 ssa_86 = bcsel ssa_85, ssa_67, ssa_83
bb_00	:  PC=0x40c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:458) max.f32 %ssa_87, %ssa_86, %ssa_67;// vec1 32 ssa_87 = fmax ssa_86, ssa_67
bb_00	:  PC=0x40d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:461) min.f32 %ssa_88, %ssa_86, %ssa_67;// vec1 32 ssa_88 = fmin ssa_86, ssa_67
bb_00	:  PC=0x40d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:464) rcp.approx.f32 %ssa_89, %ssa_87;// vec1 32 ssa_89 = frcp ssa_87
bb_00	:  PC=0x40e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:467) mul.f32 %ssa_90, %ssa_88, %ssa_89;// vec1 32 ssa_90 = fmul ssa_88, ssa_89
bb_00	:  PC=0x40e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:470) mul.f32 %ssa_91, %ssa_90, %ssa_90;// vec1 32 ssa_91 = fmul ssa_90, ssa_90
bb_00	:  PC=0x40f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:473) mul.f32 %ssa_92, %ssa_91, %ssa_90;// vec1 32 ssa_92 = fmul ssa_91, ssa_90
bb_00	:  PC=0x40f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:476) mul.f32 %ssa_93, %ssa_92, %ssa_91;// vec1 32 ssa_93 = fmul ssa_92, ssa_91
bb_00	:  PC=0x4100 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:479) mul.f32 %ssa_94, %ssa_93, %ssa_91;// vec1 32 ssa_94 = fmul ssa_93, ssa_91
bb_00	:  PC=0x4108 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:482) mul.f32 %ssa_95, %ssa_94, %ssa_91;// vec1 32 ssa_95 = fmul ssa_94, ssa_91
bb_00	:  PC=0x4110 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:485) mov.f32 %ssa_96, 0F3f7ffea5; // vec1 32 ssa_96 = load_const (0x3f7ffea5 /* 0.999979 */)
bb_00	:  PC=0x4118 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:487) mov.b32 %ssa_96_bits, 0F3f7ffea5;
bb_00	:  PC=0x4120 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:490) mul.f32 %ssa_97, %ssa_90, %ssa_96;// vec1 32 ssa_97 = fmul ssa_90, ssa_96
bb_00	:  PC=0x4128 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:493) mov.f32 %ssa_98, 0Fbeaa5476; // vec1 32 ssa_98 = load_const (0xbeaa5476 /* -0.332676 */)
bb_00	:  PC=0x4130 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:495) mov.b32 %ssa_98_bits, 0Fbeaa5476;
bb_00	:  PC=0x4138 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:498) mul.f32 %ssa_99, %ssa_92, %ssa_98;// vec1 32 ssa_99 = fmul ssa_92, ssa_98
bb_00	:  PC=0x4140 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:501) mov.f32 %ssa_100, 0F3e468bc1; // vec1 32 ssa_100 = load_const (0x3e468bc1 /* 0.193892 */)
bb_00	:  PC=0x4148 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:503) mov.b32 %ssa_100_bits, 0F3e468bc1;
bb_00	:  PC=0x4150 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:506) mul.f32 %ssa_101, %ssa_93, %ssa_100;// vec1 32 ssa_101 = fmul ssa_93, ssa_100
bb_00	:  PC=0x4158 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:509) mov.f32 %ssa_102, 0Fbdf0555d; // vec1 32 ssa_102 = load_const (0xbdf0555d /* -0.117350 */)
bb_00	:  PC=0x4160 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:511) mov.b32 %ssa_102_bits, 0Fbdf0555d;
bb_00	:  PC=0x4168 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:514) mul.f32 %ssa_103, %ssa_94, %ssa_102;// vec1 32 ssa_103 = fmul ssa_94, ssa_102
bb_00	:  PC=0x4170 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:517) mov.f32 %ssa_104, 0F3d5be101; // vec1 32 ssa_104 = load_const (0x3d5be101 /* 0.053681 */)
bb_00	:  PC=0x4178 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:519) mov.b32 %ssa_104_bits, 0F3d5be101;
bb_00	:  PC=0x4180 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:522) mul.f32 %ssa_105, %ssa_95, %ssa_104;// vec1 32 ssa_105 = fmul ssa_95, ssa_104
bb_00	:  PC=0x4188 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:525) mov.f32 %ssa_106, 0Fbc46c6a5; // vec1 32 ssa_106 = load_const (0xbc46c6a5 /* -0.012132 */)
bb_00	:  PC=0x4190 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:527) mov.b32 %ssa_106_bits, 0Fbc46c6a5;
bb_00	:  PC=0x4198 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:530) mul.f32 %ssa_107, %ssa_95, %ssa_106;// vec1 32 ssa_107 = fmul ssa_95, ssa_106
bb_00	:  PC=0x41a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:533) mul.f32 %ssa_108, %ssa_107, %ssa_91;// vec1 32 ssa_108 = fmul ssa_107, ssa_91
bb_00	:  PC=0x41a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:536) add.f32 %ssa_109, %ssa_97, %ssa_99;// vec1 32 ssa_109 = fadd ssa_97, ssa_99
bb_00	:  PC=0x41b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:539) add.f32 %ssa_110, %ssa_109, %ssa_101;// vec1 32 ssa_110 = fadd ssa_109, ssa_101
bb_00	:  PC=0x41b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:542) add.f32 %ssa_111, %ssa_110, %ssa_103;// vec1 32 ssa_111 = fadd ssa_110, ssa_103
bb_00	:  PC=0x41c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:545) add.f32 %ssa_112, %ssa_111, %ssa_105;// vec1 32 ssa_112 = fadd ssa_111, ssa_105
bb_00	:  PC=0x41c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:548) add.f32 %ssa_113, %ssa_112, %ssa_108;// vec1 32 ssa_113 = fadd ssa_112, ssa_108
bb_00	:  PC=0x41d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:551) mov.f32 %ssa_114, 0Fc0000000; // vec1 32 ssa_114 = load_const (0xc0000000 /* -2.000000 */)
bb_00	:  PC=0x41d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:553) mov.b32 %ssa_114_bits, 0Fc0000000;
bb_00	:  PC=0x41e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:556) mul.f32 %ssa_115, %ssa_113, %ssa_114;// vec1 32 ssa_115 = fmul ssa_113, ssa_114
bb_00	:  PC=0x41e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:559) add.f32 %ssa_116, %ssa_115, %ssa_68;// vec1 32 ssa_116 = fadd ssa_115, ssa_68
bb_00	:  PC=0x41f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:562) setp.lt.f32 %ssa_117, %ssa_67, %ssa_86;// vec1  1 ssa_117 = flt ssa_67, ssa_86
bb_00	:  PC=0x41f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:565) selp.f32 %ssa_118, 0F3f800000, 0F00000000, %ssa_117; // vec1 32 ssa_118 = b2f32 ssa_117
bb_00	:  PC=0x4200 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:568) mul.f32 %ssa_119, %ssa_118, %ssa_116;// vec1 32 ssa_119 = fmul ssa_118, ssa_116
bb_00	:  PC=0x4208 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:571) add.f32 %ssa_120, %ssa_119, %ssa_113;// vec1 32 ssa_120 = fadd ssa_119, ssa_113
bb_00	:  PC=0x4210 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:574) mov.f32 %ssa_121, 0F3f800000;
bb_00	:  PC=0x4218 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:575) copysignf %ssa_121, %ssa_86; // vec1 32 ssa_121 = fsign ssa_86
bb_00	:  PC=0x4220 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:578) mul.f32 %ssa_122, %ssa_120, %ssa_121;// vec1 32 ssa_122 = fmul ssa_120, ssa_121
bb_00	:  PC=0x4228 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:581) selp.f32 %ssa_123, 0F3f800000, 0F00000000, %ssa_70; // vec1 32 ssa_123 = b2f32 ssa_70
bb_00	:  PC=0x4230 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:584) mul.f32 %ssa_124, %ssa_123, %ssa_68;// vec1 32 ssa_124 = fmul ssa_123, ssa_68
bb_00	:  PC=0x4238 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:587) add.f32 %ssa_125, %ssa_124, %ssa_122;// vec1 32 ssa_125 = fadd ssa_124, ssa_122
bb_00	:  PC=0x4240 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:590) neg.f32 %ssa_126, %ssa_125;// vec1 32 ssa_126 = fneg ssa_125
bb_00	:  PC=0x4248 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:593) min.f32 %ssa_127, %ssa_63, %ssa_80;// vec1 32 ssa_127 = fmin ssa_63, ssa_80
bb_00	:  PC=0x4250 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:596) setp.lt.f32 %ssa_128, %ssa_127, %ssa_1;// vec1  1 ssa_128 = flt ssa_127, ssa_1
bb_00	:  PC=0x4258 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:599) selp.f32 %ssa_129, %ssa_126, %ssa_125, %ssa_128; // vec1 32 ssa_129 = bcsel ssa_128, ssa_126, ssa_125
bb_00	:  PC=0x4260 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:602) mov.f32 %ssa_130, 0F3f000000; // vec1 32 ssa_130 = load_const (0x3f000000 /* 0.500000 */)
bb_00	:  PC=0x4268 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:604) mov.b32 %ssa_130_bits, 0F3f000000;
bb_00	:  PC=0x4270 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:607) abs.f32 %ssa_131, %ssa_64;// vec1 32 ssa_131 = fabs ssa_64
bb_00	:  PC=0x4278 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:610) mov.f32 %ssa_132, 0F3db149e5; // vec1 32 ssa_132 = load_const (0x3db149e5 /* 0.086567 */)
bb_00	:  PC=0x4280 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:612) mov.b32 %ssa_132_bits, 0F3db149e5;
bb_00	:  PC=0x4288 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:615) mov.f32 %ssa_133, 0Fbcfe31af; // vec1 32 ssa_133 = load_const (0xbcfe31af /* -0.031030 */)
bb_00	:  PC=0x4290 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:617) mov.b32 %ssa_133_bits, 0Fbcfe31af;
bb_00	:  PC=0x4298 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:620) mul.f32 %ssa_134, %ssa_131, %ssa_133;// vec1 32 ssa_134 = fmul ssa_131, ssa_133
bb_00	:  PC=0x42a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:623) add.f32 %ssa_135, %ssa_134, %ssa_132;// vec1 32 ssa_135 = fadd ssa_134, ssa_132
bb_00	:  PC=0x42a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:626) mov.f32 %ssa_136, 0Fbe5bc094; // vec1 32 ssa_136 = load_const (0xbe5bc094 /* -0.214602 */)
bb_00	:  PC=0x42b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:628) mov.b32 %ssa_136_bits, 0Fbe5bc094;
bb_00	:  PC=0x42b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:631) mul.f32 %ssa_137, %ssa_131, %ssa_135;// vec1 32 ssa_137 = fmul ssa_131, ssa_135
bb_00	:  PC=0x42c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:634) add.f32 %ssa_138, %ssa_137, %ssa_136;// vec1 32 ssa_138 = fadd ssa_137, ssa_136
bb_00	:  PC=0x42c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:637) mul.f32 %ssa_139, %ssa_131, %ssa_138;// vec1 32 ssa_139 = fmul ssa_131, ssa_138
bb_00	:  PC=0x42d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:640) add.f32 %ssa_140, %ssa_139, %ssa_68;// vec1 32 ssa_140 = fadd ssa_139, ssa_68
bb_00	:  PC=0x42d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:643) neg.f32 %ssa_141, %ssa_131;// vec1 32 ssa_141 = fneg ssa_131
bb_00	:  PC=0x42e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:646) add.f32 %ssa_142, %ssa_67, %ssa_141;// vec1 32 ssa_142 = fadd ssa_67, ssa_141
bb_00	:  PC=0x42e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:649) sqrt.approx.f32 %ssa_143, %ssa_142;// vec1 32 ssa_143 = fsqrt ssa_142
bb_00	:  PC=0x42f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:652) mul.f32 %ssa_144, %ssa_143, %ssa_140;// vec1 32 ssa_144 = fmul ssa_143, ssa_140
bb_00	:  PC=0x42f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:655) neg.f32 %ssa_145, %ssa_144;// vec1 32 ssa_145 = fneg ssa_144
bb_00	:  PC=0x4300 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:658) add.f32 %ssa_146, %ssa_145, %ssa_68;// vec1 32 ssa_146 = fadd ssa_145, ssa_68
bb_00	:  PC=0x4308 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:661) mov.f32 %ssa_147, 0F3f800000;
bb_00	:  PC=0x4310 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:662) copysignf %ssa_147, %ssa_64; // vec1 32 ssa_147 = fsign ssa_64
bb_00	:  PC=0x4318 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:665) mul.f32 %ssa_148, %ssa_147, %ssa_146;// vec1 32 ssa_148 = fmul ssa_147, ssa_146
bb_00	:  PC=0x4320 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:668) mul.f32 %ssa_149, %ssa_64, %ssa_64;// vec1 32 ssa_149 = fmul ssa_64, ssa_64
bb_00	:  PC=0x4328 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:671) mov.f32 %ssa_150, 0Fbd2f13ba; // vec1 32 ssa_150 = load_const (0xbd2f13ba /* -0.042743 */)
bb_00	:  PC=0x4330 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:673) mov.b32 %ssa_150_bits, 0Fbd2f13ba;
bb_00	:  PC=0x4338 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:676) mov.f32 %ssa_151, 0Fbc0dd36b; // vec1 32 ssa_151 = load_const (0xbc0dd36b /* -0.008656 */)
bb_00	:  PC=0x4340 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:678) mov.b32 %ssa_151_bits, 0Fbc0dd36b;
bb_00	:  PC=0x4348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:681) mul.f32 %ssa_152, %ssa_149, %ssa_151;// vec1 32 ssa_152 = fmul ssa_149, ssa_151
bb_00	:  PC=0x4350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:684) add.f32 %ssa_153, %ssa_152, %ssa_150;// vec1 32 ssa_153 = fadd ssa_152, ssa_150
bb_00	:  PC=0x4358 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:687) mov.f32 %ssa_154, 0F3e2aaa75; // vec1 32 ssa_154 = load_const (0x3e2aaa75 /* 0.166666 */)
bb_00	:  PC=0x4360 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:689) mov.b32 %ssa_154_bits, 0F3e2aaa75;
bb_00	:  PC=0x4368 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:692) mul.f32 %ssa_155, %ssa_149, %ssa_153;// vec1 32 ssa_155 = fmul ssa_149, ssa_153
bb_00	:  PC=0x4370 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:695) add.f32 %ssa_156, %ssa_155, %ssa_154;// vec1 32 ssa_156 = fadd ssa_155, ssa_154
bb_00	:  PC=0x4378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:698) mul.f32 %ssa_157, %ssa_149, %ssa_156;// vec1 32 ssa_157 = fmul ssa_149, ssa_156
bb_00	:  PC=0x4380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:701) mov.f32 %ssa_158, 0Fbf34e5ae; // vec1 32 ssa_158 = load_const (0xbf34e5ae /* -0.706630 */)
bb_00	:  PC=0x4388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:703) mov.b32 %ssa_158_bits, 0Fbf34e5ae;
bb_00	:  PC=0x4390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:706) mul.f32 %ssa_159, %ssa_149, %ssa_158;// vec1 32 ssa_159 = fmul ssa_149, ssa_158
bb_00	:  PC=0x4398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:709) add.f32 %ssa_160, %ssa_159, %ssa_67;// vec1 32 ssa_160 = fadd ssa_159, ssa_67
bb_00	:  PC=0x43a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:712) rcp.approx.f32 %ssa_161, %ssa_160;// vec1 32 ssa_161 = frcp ssa_160
bb_00	:  PC=0x43a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:715) mul.f32 %ssa_162, %ssa_157, %ssa_161;// vec1 32 ssa_162 = fmul ssa_157, ssa_161
bb_00	:  PC=0x43b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:718) mul.f32 %ssa_163, %ssa_64, %ssa_162;// vec1 32 ssa_163 = fmul ssa_64, ssa_162
bb_00	:  PC=0x43b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:721) add.f32 %ssa_164, %ssa_163, %ssa_64;// vec1 32 ssa_164 = fadd ssa_163, ssa_64
bb_00	:  PC=0x43c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:724) setp.lt.f32 %ssa_165, %ssa_131, %ssa_130;// vec1  1 ssa_165 = flt ssa_131, ssa_130
bb_00	:  PC=0x43c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:727) selp.f32 %ssa_166, %ssa_164, %ssa_148, %ssa_165; // vec1 32 ssa_166 = bcsel ssa_165, ssa_164, ssa_148
bb_00	:  PC=0x43d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:730) add.f32 %ssa_167, %ssa_129, %ssa_69;// vec1 32 ssa_167 = fadd ssa_129, ssa_69
bb_00	:  PC=0x43d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:733) mov.f32 %ssa_168, 0F3e22f983; // vec1 32 ssa_168 = load_const (0x3e22f983 /* 0.159155 */)
bb_00	:  PC=0x43e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:735) mov.b32 %ssa_168_bits, 0F3e22f983;
bb_00	:  PC=0x43e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:738) mul.f32 %ssa_169, %ssa_167, %ssa_168;// vec1 32 ssa_169 = fmul ssa_167, ssa_168
bb_00	:  PC=0x43f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:741) add.f32 %ssa_170, %ssa_166, %ssa_68;// vec1 32 ssa_170 = fadd ssa_166, ssa_68
bb_00	:  PC=0x43f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:744) mov.f32 %ssa_171, 0F3ea2f983; // vec1 32 ssa_171 = load_const (0x3ea2f983 /* 0.318310 */)
bb_00	:  PC=0x4400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:746) mov.b32 %ssa_171_bits, 0F3ea2f983;
bb_00	:  PC=0x4408 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:749) mul.f32 %ssa_172, %ssa_170, %ssa_171;// vec1 32 ssa_172 = fmul ssa_170, ssa_171
bb_00	:  PC=0x4410 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:752) neg.f32 %ssa_173, %ssa_172;// vec1 32 ssa_173 = fneg ssa_172
bb_00	:  PC=0x4418 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:755) add.f32 %ssa_174, %ssa_67, %ssa_173;// vec1 32 ssa_174 = fadd ssa_67, ssa_173
bb_00	:  PC=0x4420 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:759) mov.f32 %ssa_175_0, %ssa_169;
bb_00	:  PC=0x4428 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:760) mov.f32 %ssa_175_1, %ssa_174; // vec2 32 ssa_175 = vec2 ssa_169, ssa_174
bb_00	:  PC=0x4430 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:763) mov.b64 %ssa_176, %Ray; // vec1 32 ssa_176 = deref_var &Ray (shader_call_data RayPayload) 
bb_00	:  PC=0x4438 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:766) add.u64 %ssa_177, %ssa_176, 44; // vec1 32 ssa_177 = deref_struct &ssa_176->RandomSeed (shader_call_data uint) /* &Ray.RandomSeed */
bb_00	:  PC=0x4440 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:769) ld.global.u32 %ssa_178, [%ssa_177]; // vec1 32 ssa_178 = intrinsic load_deref (%ssa_177) (0) /* access=0 */
bb_00	:  PC=0x4448 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:772) mul.f32 %ssa_179, %ssa_49_0, %ssa_49_0; // vec1 32 ssa_179 = fmul ssa_49.x, ssa_49.x
bb_00	:  PC=0x4450 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:775) mul.f32 %ssa_180, %ssa_49_1, %ssa_49_1; // vec1 32 ssa_180 = fmul ssa_49.y, ssa_49.y
bb_00	:  PC=0x4458 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:778) mul.f32 %ssa_181, %ssa_49_2, %ssa_49_2; // vec1 32 ssa_181 = fmul ssa_49.z, ssa_49.z
bb_00	:  PC=0x4460 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:784) mov.f32 %ssa_182_0, %ssa_179;
bb_00	:  PC=0x4468 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:785) mov.f32 %ssa_182_1, %ssa_180;
bb_00	:  PC=0x4470 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:786) mov.f32 %ssa_182_2, %ssa_181; // vec3 32 ssa_182 = vec3 ssa_179, ssa_180, ssa_181
bb_00	:  PC=0x4478 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:789) add.f32 %ssa_183, %ssa_182_0, %ssa_182_1;
bb_00	:  PC=0x4480 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:790) add.f32 %ssa_183, %ssa_183, %ssa_182_2; // vec1 32 ssa_183 = fsum3 ssa_182
bb_00	:  PC=0x4488 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:793) rsqrt.approx.f32 %ssa_184, %ssa_183;// vec1 32 ssa_184 = frsq ssa_183
bb_00	:  PC=0x4490 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:796) mul.f32 %ssa_185, %ssa_49_0, %ssa_184; // vec1 32 ssa_185 = fmul ssa_49.x, ssa_184
bb_00	:  PC=0x4498 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:799) mul.f32 %ssa_186, %ssa_49_1, %ssa_184; // vec1 32 ssa_186 = fmul ssa_49.y, ssa_184
bb_00	:  PC=0x44a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:802) mul.f32 %ssa_187, %ssa_49_2, %ssa_184; // vec1 32 ssa_187 = fmul ssa_49.z, ssa_184
bb_00	:  PC=0x44a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:805) setp.eq.s32 %ssa_188, %ssa_40, %ssa_1_bits; // vec1  1 ssa_188 = ieq ssa_40, ssa_1
bb_00	:  PC=0x44b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:810) @!%ssa_188 bra else_16;

bb_01	:  PC=0x44b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:818) mov.f32 %ssa_189_0, 0F3f800000;
bb_01	:  PC=0x44c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:819) mov.f32 %ssa_189_1, 0F3f800000;
bb_01	:  PC=0x44c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:820) mov.f32 %ssa_189_2, 0F3f800000;
bb_01	:  PC=0x44d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:821) mov.f32 %ssa_189_3, 0F3f800000;
bb_01	:  PC=0x44d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:825) mul.f32 %ssa_190, %ssa_185, %ssa_63;// vec1 32 ssa_190 = fmul ssa_185, ssa_63
bb_01	:  PC=0x44e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:828) mul.f32 %ssa_191, %ssa_186, %ssa_64;// vec1 32 ssa_191 = fmul ssa_186, ssa_64
bb_01	:  PC=0x44e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:831) mul.f32 %ssa_192, %ssa_187, %ssa_65;// vec1 32 ssa_192 = fmul ssa_187, ssa_65
bb_01	:  PC=0x44f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:837) mov.f32 %ssa_193_0, %ssa_190;
bb_01	:  PC=0x44f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:838) mov.f32 %ssa_193_1, %ssa_191;
bb_01	:  PC=0x4500 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:839) mov.f32 %ssa_193_2, %ssa_192; // vec3 32 ssa_193 = vec3 ssa_190, ssa_191, ssa_192
bb_01	:  PC=0x4508 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:842) add.f32 %ssa_194, %ssa_193_0, %ssa_193_1;
bb_01	:  PC=0x4510 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:843) add.f32 %ssa_194, %ssa_194, %ssa_193_2; // vec1 32 ssa_194 = fsum3 ssa_193
bb_01	:  PC=0x4518 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:846) setp.lt.f32 %ssa_195, %ssa_194, %ssa_1;// vec1  1 ssa_195 = flt! ssa_194, ssa_1
bb_01	:  PC=0x4520 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:849) setp.ge.s32 %ssa_196, %ssa_34, %ssa_1_bits; // vec1  1 ssa_196 = ige ssa_34, ssa_1
bb_01	:  PC=0x4528 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:854) @!%ssa_196 bra else_17;

bb_02	:  PC=0x4530 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:859) mov.b64 %ssa_197, %TextureSamplers; // vec1 32 ssa_197 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_02	:  PC=0x4538 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:864) cvt.u32.s32 %ssa_198_array_index_32, %ssa_34;
bb_02	:  PC=0x4540 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:865) mul.wide.u32 %ssa_198_array_index_64, %ssa_198_array_index_32, 48;
bb_02	:  PC=0x4548 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:866) add.u64 %ssa_198, %ssa_197, %ssa_198_array_index_64; // vec1 32 ssa_198 = deref_array &(*ssa_197)[ssa_34] (uniform sampler2D) /* &TextureSamplers[ssa_34] */
bb_02	:  PC=0x4550 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:872) txl %ssa_198, %ssa_198, %ssa_199_0, %ssa_199_1, %ssa_199_2, %ssa_199_3, %ssa_175_0, %ssa_175_1, %ssa_1; // vec4 32 ssa_199 = (float32)txl ssa_198 (texture_deref), ssa_198 (sampler_deref), ssa_175 (coord), ssa_1 (lod), texture non-uniform, sampler non-uniform
bb_02	:  PC=0x4558 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:875) mov.f32 %ssa_429, %ssa_199_0; // vec1 32 ssa_429 = mov ssa_199.x
bb_02	:  PC=0x4560 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:878) mov.f32 %ssa_432, %ssa_199_1; // vec1 32 ssa_432 = mov ssa_199.y
bb_02	:  PC=0x4568 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:881) mov.f32 %ssa_435, %ssa_199_2; // vec1 32 ssa_435 = mov ssa_199.z
bb_02	:  PC=0x4570 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:884) mov.f32 %ssa_438, %ssa_199_3; // vec1 32 ssa_438 = mov ssa_199.w
bb_02	:  PC=0x4578 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:886) mov.f32 %ssa_431, %ssa_429; // vec1 32 ssa_431 = phi block_2: ssa_429, block_3: ssa_546
bb_02	:  PC=0x4580 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:887) mov.f32 %ssa_434, %ssa_432; // vec1 32 ssa_434 = phi block_2: ssa_432, block_3: ssa_547
bb_02	:  PC=0x4588 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:888) mov.f32 %ssa_437, %ssa_435; // vec1 32 ssa_437 = phi block_2: ssa_435, block_3: ssa_548
bb_02	:  PC=0x4590 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:889) mov.f32 %ssa_440, %ssa_438; // vec1 32 ssa_440 = phi block_2: ssa_438, block_3: ssa_549
bb_02	:  PC=0x4598 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:892) bra end_if_17;

bb_03	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:897) .reg .f32 %ssa_546;
bb_03	:  PC=0x45a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:898) mov.f32 %ssa_546, 0F3f800000; // vec1 32 ssa_546 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x45a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:900) mov.b32 %ssa_546_bits, 0F3f800000;
bb_03	:  PC=0x45b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:903) mov.f32 %ssa_547, 0F3f800000; // vec1 32 ssa_547 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x45b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:905) mov.b32 %ssa_547_bits, 0F3f800000;
bb_03	:  PC=0x45c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:908) mov.f32 %ssa_548, 0F3f800000; // vec1 32 ssa_548 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x45c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:910) mov.b32 %ssa_548_bits, 0F3f800000;
bb_03	:  PC=0x45d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:913) mov.f32 %ssa_549, 0F3f800000; // vec1 32 ssa_549 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x45d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:915) mov.b32 %ssa_549_bits, 0F3f800000;
bb_03	:  PC=0x45e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:917) mov.f32 %ssa_431, %ssa_546; // vec1 32 ssa_431 = phi block_2: ssa_429, block_3: ssa_546
bb_03	:  PC=0x45e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:918) mov.f32 %ssa_434, %ssa_547; // vec1 32 ssa_434 = phi block_2: ssa_432, block_3: ssa_547
bb_03	:  PC=0x45f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:919) mov.f32 %ssa_437, %ssa_548; // vec1 32 ssa_437 = phi block_2: ssa_435, block_3: ssa_548
bb_03	:  PC=0x45f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:920) mov.f32 %ssa_440, %ssa_549; // vec1 32 ssa_440 = phi block_2: ssa_438, block_3: ssa_549

bb_04	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:930) .reg .b32 %ssa_441_0;
bb_04	:  PC=0x4600 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:934) mov.b32 %ssa_441_0, %ssa_431;
bb_04	:  PC=0x4608 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:935) mov.b32 %ssa_441_1, %ssa_434;
bb_04	:  PC=0x4610 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:936) mov.b32 %ssa_441_2, %ssa_437;
bb_04	:  PC=0x4618 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:937) mov.b32 %ssa_441_3, %ssa_440; // vec4 32 ssa_441 = vec4 ssa_431, ssa_434, ssa_437, ssa_440
bb_04	:  PC=0x4620 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:940) mul.f32 %ssa_201, %ssa_32_0, %ssa_441_0; // vec1 32 ssa_201 = fmul ssa_32.x, ssa_441.x
bb_04	:  PC=0x4628 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:943) mul.f32 %ssa_202, %ssa_32_1, %ssa_441_1; // vec1 32 ssa_202 = fmul ssa_32.y, ssa_441.y
bb_04	:  PC=0x4630 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:946) mul.f32 %ssa_203, %ssa_32_2, %ssa_441_2; // vec1 32 ssa_203 = fmul ssa_32.z, ssa_441.z
bb_04	:  PC=0x4638 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:948) mov.s32 %ssa_204, %ssa_178; // vec1 32 ssa_204 = phi block_4: ssa_178, block_8: ssa_217

bb_05	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:955) .reg .f32 %ssa_205;
bb_05	:  PC=0x4640 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:956) mov.f32 %ssa_205, 0F00ffffff; // vec1 32 ssa_205 = load_const (0x00ffffff /* 0.000000 */)
bb_05	:  PC=0x4648 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:958) mov.b32 %ssa_205_bits, 0F00ffffff;
bb_05	:  PC=0x4650 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:961) mov.f32 %ssa_206, 0F3c6ef35f; // vec1 32 ssa_206 = load_const (0x3c6ef35f /* 0.014584 */)
bb_05	:  PC=0x4658 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:963) mov.b32 %ssa_206_bits, 0F3c6ef35f;
bb_05	:  PC=0x4660 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:966) mov.f32 %ssa_207, 0F0019660d; // vec1 32 ssa_207 = load_const (0x0019660d /* 0.000000 */)
bb_05	:  PC=0x4668 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:968) mov.b32 %ssa_207_bits, 0F0019660d;
bb_05	:  PC=0x4670 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:971) mul.lo.s32 %ssa_208, %ssa_207_bits, %ssa_204; // vec1 32 ssa_208 = imul ssa_207, ssa_204
bb_05	:  PC=0x4678 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:974) add.s32 %ssa_209, %ssa_208, %ssa_206_bits; // vec1 32 ssa_209 = iadd ssa_208, ssa_206
bb_05	:  PC=0x4680 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:977) and.b32 %ssa_210, %ssa_209, %ssa_205;// vec1 32 ssa_210 = iand ssa_209, ssa_205
bb_05	:  PC=0x4688 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:980) cvt.rn.f32.u32 %ssa_211, %ssa_210;// vec1 32 ssa_211 = u2f32 ssa_210
bb_05	:  PC=0x4690 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:983) mul.lo.s32 %ssa_212, %ssa_207_bits, %ssa_209; // vec1 32 ssa_212 = imul ssa_207, ssa_209
bb_05	:  PC=0x4698 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:986) add.s32 %ssa_213, %ssa_212, %ssa_206_bits; // vec1 32 ssa_213 = iadd ssa_212, ssa_206
bb_05	:  PC=0x46a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:989) and.b32 %ssa_214, %ssa_213, %ssa_205;// vec1 32 ssa_214 = iand ssa_213, ssa_205
bb_05	:  PC=0x46a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:992) cvt.rn.f32.u32 %ssa_215, %ssa_214;// vec1 32 ssa_215 = u2f32 ssa_214
bb_05	:  PC=0x46b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:995) mul.lo.s32 %ssa_216, %ssa_207_bits, %ssa_213; // vec1 32 ssa_216 = imul ssa_207, ssa_213
bb_05	:  PC=0x46b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:998) add.s32 %ssa_217, %ssa_216, %ssa_206_bits; // vec1 32 ssa_217 = iadd ssa_216, ssa_206
bb_05	:  PC=0x46c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1001) and.b32 %ssa_218, %ssa_217, %ssa_205;// vec1 32 ssa_218 = iand ssa_217, ssa_205
bb_05	:  PC=0x46c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1004) cvt.rn.f32.u32 %ssa_219, %ssa_218;// vec1 32 ssa_219 = u2f32 ssa_218
bb_05	:  PC=0x46d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1007) mov.f32 %ssa_220, 0F34000000; // vec1 32 ssa_220 = load_const (0x34000000 /* 0.000000 */)
bb_05	:  PC=0x46d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1009) mov.b32 %ssa_220_bits, 0F34000000;
bb_05	:  PC=0x46e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1012) mul.f32 %ssa_221, %ssa_220, %ssa_211;// vec1 32 ssa_221 = fmul ssa_220, ssa_211
bb_05	:  PC=0x46e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1015) mul.f32 %ssa_222, %ssa_220, %ssa_215;// vec1 32 ssa_222 = fmul ssa_220, ssa_215
bb_05	:  PC=0x46f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1018) mul.f32 %ssa_223, %ssa_220, %ssa_219;// vec1 32 ssa_223 = fmul ssa_220, ssa_219
bb_05	:  PC=0x46f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1024) mov.f32 %ssa_224_0, 0Fbf800000;
bb_05	:  PC=0x4700 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1025) mov.f32 %ssa_224_1, 0Fbf800000;
bb_05	:  PC=0x4708 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1026) mov.f32 %ssa_224_2, 0Fbf800000;
bb_05	:  PC=0x4710 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1027) mov.f32 %ssa_224_3, 0F00000000;
bb_05	:  PC=0x4718 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1031) add.f32 %ssa_225, %ssa_221, %ssa_224_0; // vec1 32 ssa_225 = fadd ssa_221, ssa_224.x
bb_05	:  PC=0x4720 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1034) add.f32 %ssa_226, %ssa_222, %ssa_224_1; // vec1 32 ssa_226 = fadd ssa_222, ssa_224.y
bb_05	:  PC=0x4728 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1037) add.f32 %ssa_227, %ssa_223, %ssa_224_2; // vec1 32 ssa_227 = fadd ssa_223, ssa_224.z
bb_05	:  PC=0x4730 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1040) mul.f32 %ssa_228, %ssa_225, %ssa_225;// vec1 32 ssa_228 = fmul ssa_225, ssa_225
bb_05	:  PC=0x4738 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1043) mul.f32 %ssa_229, %ssa_226, %ssa_226;// vec1 32 ssa_229 = fmul ssa_226, ssa_226
bb_05	:  PC=0x4740 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1046) mul.f32 %ssa_230, %ssa_227, %ssa_227;// vec1 32 ssa_230 = fmul ssa_227, ssa_227
bb_05	:  PC=0x4748 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1052) mov.f32 %ssa_231_0, %ssa_228;
bb_05	:  PC=0x4750 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1053) mov.f32 %ssa_231_1, %ssa_229;
bb_05	:  PC=0x4758 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1054) mov.f32 %ssa_231_2, %ssa_230; // vec3 32 ssa_231 = vec3 ssa_228, ssa_229, ssa_230
bb_05	:  PC=0x4760 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1057) add.f32 %ssa_232, %ssa_231_0, %ssa_231_1;
bb_05	:  PC=0x4768 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1058) add.f32 %ssa_232, %ssa_232, %ssa_231_2; // vec1 32 ssa_232 = fsum3 ssa_231
bb_05	:  PC=0x4770 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1061) setp.lt.f32 %ssa_233, %ssa_232, %ssa_67;// vec1  1 ssa_233 = flt! ssa_232, ssa_67
bb_05	:  PC=0x4778 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1066) @!%ssa_233 bra else_18;

bb_06	:  PC=0x4780 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1070) bra loop_5_exit;

bb_07	:  PC=0x4788 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1074) bra end_if_18;

bb_08	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1081) end_if_18:
bb_08	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1084) mov.s32 %ssa_204, %ssa_217; // vec1 32 ssa_204 = phi block_4: ssa_178, block_8: ssa_217
bb_08	:  PC=0x4790 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1084) mov.s32 %ssa_204, %ssa_217; // vec1 32 ssa_204 = phi block_4: ssa_178, block_8: ssa_217
bb_08	:  PC=0x4798 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1087) bra loop_5;

bb_09	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1092) .reg .f32 %ssa_234;
bb_09	:  PC=0x47a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1093) add.f32 %ssa_234, %ssa_63, %ssa_225;// vec1 32 ssa_234 = fadd ssa_63, ssa_225
bb_09	:  PC=0x47a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1096) add.f32 %ssa_235, %ssa_64, %ssa_226;// vec1 32 ssa_235 = fadd ssa_64, ssa_226
bb_09	:  PC=0x47b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1099) add.f32 %ssa_236, %ssa_65, %ssa_227;// vec1 32 ssa_236 = fadd ssa_65, ssa_227
bb_09	:  PC=0x47b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1102) selp.f32 %ssa_237, 0F3f800000, 0F00000000, %ssa_195; // vec1 32 ssa_237 = b2f32 ssa_195
bb_09	:  PC=0x47c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1108) mov.f32 %ssa_238_0, %ssa_201;
bb_09	:  PC=0x47c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1109) mov.f32 %ssa_238_1, %ssa_202;
bb_09	:  PC=0x47d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1110) mov.f32 %ssa_238_2, %ssa_203;
bb_09	:  PC=0x47d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1111) mov.f32 %ssa_238_3, %ssa_48; // vec4 32 ssa_238 = vec4 ssa_201, ssa_202, ssa_203, ssa_48
bb_09	:  PC=0x47e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1117) mov.f32 %ssa_239_0, %ssa_234;
bb_09	:  PC=0x47e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1118) mov.f32 %ssa_239_1, %ssa_235;
bb_09	:  PC=0x47f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1119) mov.f32 %ssa_239_2, %ssa_236;
bb_09	:  PC=0x47f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1120) mov.f32 %ssa_239_3, %ssa_237; // vec4 32 ssa_239 = vec4 ssa_234, ssa_235, ssa_236, ssa_237
bb_09	:  PC=0x4800 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1123) mov.f32 %ssa_520, %ssa_239_0; // vec1 32 ssa_520 = mov ssa_239.x
bb_09	:  PC=0x4808 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1126) mov.f32 %ssa_523, %ssa_239_1; // vec1 32 ssa_523 = mov ssa_239.y
bb_09	:  PC=0x4810 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1129) mov.f32 %ssa_526, %ssa_239_2; // vec1 32 ssa_526 = mov ssa_239.z
bb_09	:  PC=0x4818 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1132) mov.f32 %ssa_529, %ssa_239_3; // vec1 32 ssa_529 = mov ssa_239.w
bb_09	:  PC=0x4820 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1135) mov.f32 %ssa_533, %ssa_238_0; // vec1 32 ssa_533 = mov ssa_238.x
bb_09	:  PC=0x4828 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1138) mov.f32 %ssa_536, %ssa_238_1; // vec1 32 ssa_536 = mov ssa_238.y
bb_09	:  PC=0x4830 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1141) mov.f32 %ssa_539, %ssa_238_2; // vec1 32 ssa_539 = mov ssa_238.z
bb_09	:  PC=0x4838 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1144) mov.f32 %ssa_542, %ssa_238_3; // vec1 32 ssa_542 = mov ssa_238.w
bb_09	:  PC=0x4840 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1146) mov.s32 %ssa_423, %ssa_217; // vec1 32 ssa_423 = phi block_9: ssa_217, block_30: ssa_420
bb_09	:  PC=0x4848 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1147) mov.b32 %ssa_522, %ssa_520; // vec1 32 ssa_522 = phi block_9: ssa_520, block_30: ssa_521
bb_09	:  PC=0x4850 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1148) mov.b32 %ssa_525, %ssa_523; // vec1 32 ssa_525 = phi block_9: ssa_523, block_30: ssa_524
bb_09	:  PC=0x4858 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1149) mov.b32 %ssa_528, %ssa_526; // vec1 32 ssa_528 = phi block_9: ssa_526, block_30: ssa_527
bb_09	:  PC=0x4860 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1150) mov.b32 %ssa_531, %ssa_529; // vec1 32 ssa_531 = phi block_9: ssa_529, block_30: ssa_530
bb_09	:  PC=0x4868 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1151) mov.b32 %ssa_535, %ssa_533; // vec1 32 ssa_535 = phi block_9: ssa_533, block_30: ssa_534
bb_09	:  PC=0x4870 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1152) mov.b32 %ssa_538, %ssa_536; // vec1 32 ssa_538 = phi block_9: ssa_536, block_30: ssa_537
bb_09	:  PC=0x4878 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1153) mov.b32 %ssa_541, %ssa_539; // vec1 32 ssa_541 = phi block_9: ssa_539, block_30: ssa_540
bb_09	:  PC=0x4880 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1154) mov.b32 %ssa_544, %ssa_542; // vec1 32 ssa_544 = phi block_9: ssa_542, block_30: ssa_543
bb_09	:  PC=0x4888 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1157) bra end_if_16;

bb_10	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1162) .reg .f32 %ssa_240;
bb_10	:  PC=0x4890 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1163) mov.f32 %ssa_240, 0F00000001; // vec1 32 ssa_240 = load_const (0x00000001 /* 0.000000 */)
bb_10	:  PC=0x4898 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1165) mov.b32 %ssa_240_bits, 0F00000001;
bb_10	:  PC=0x48a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1168) setp.eq.s32 %ssa_241, %ssa_40, %ssa_240_bits; // vec1  1 ssa_241 = ieq ssa_40, ssa_240
bb_10	:  PC=0x48a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1173) @!%ssa_241 bra else_19;

bb_11	:  PC=0x48b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1181) mov.f32 %ssa_242_0, 0F3f800000;
bb_11	:  PC=0x48b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1182) mov.f32 %ssa_242_1, 0F3f800000;
bb_11	:  PC=0x48c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1183) mov.f32 %ssa_242_2, 0F3f800000;
bb_11	:  PC=0x48c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1184) mov.f32 %ssa_242_3, 0F3f800000;
bb_11	:  PC=0x48d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1188) mov.f32 %ssa_243, 0F40000000; // vec1 32 ssa_243 = load_const (0x40000000 /* 2.000000 */)
bb_11	:  PC=0x48d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1190) mov.b32 %ssa_243_bits, 0F40000000;
bb_11	:  PC=0x48e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1193) mul.f32 %ssa_244, %ssa_185, %ssa_63;// vec1 32 ssa_244 = fmul ssa_185, ssa_63
bb_11	:  PC=0x48e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1196) mul.f32 %ssa_245, %ssa_186, %ssa_64;// vec1 32 ssa_245 = fmul ssa_186, ssa_64
bb_11	:  PC=0x48f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1199) mul.f32 %ssa_246, %ssa_187, %ssa_65;// vec1 32 ssa_246 = fmul ssa_187, ssa_65
bb_11	:  PC=0x48f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1205) mov.f32 %ssa_247_0, %ssa_244;
bb_11	:  PC=0x4900 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1206) mov.f32 %ssa_247_1, %ssa_245;
bb_11	:  PC=0x4908 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1207) mov.f32 %ssa_247_2, %ssa_246; // vec3 32 ssa_247 = vec3 ssa_244, ssa_245, ssa_246
bb_11	:  PC=0x4910 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1210) add.f32 %ssa_248, %ssa_247_0, %ssa_247_1;
bb_11	:  PC=0x4918 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1211) add.f32 %ssa_248, %ssa_248, %ssa_247_2; // vec1 32 ssa_248 = fsum3 ssa_247
bb_11	:  PC=0x4920 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1214) mul.f32 %ssa_249, %ssa_248, %ssa_243;// vec1 32 ssa_249 = fmul ssa_248, ssa_243
bb_11	:  PC=0x4928 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1217) mul.f32 %ssa_250, %ssa_63, %ssa_249;// vec1 32 ssa_250 = fmul ssa_63, ssa_249
bb_11	:  PC=0x4930 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1220) neg.f32 %ssa_251, %ssa_250;// vec1 32 ssa_251 = fneg ssa_250
bb_11	:  PC=0x4938 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1223) mul.f32 %ssa_252, %ssa_64, %ssa_249;// vec1 32 ssa_252 = fmul ssa_64, ssa_249
bb_11	:  PC=0x4940 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1226) neg.f32 %ssa_253, %ssa_252;// vec1 32 ssa_253 = fneg ssa_252
bb_11	:  PC=0x4948 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1229) mul.f32 %ssa_254, %ssa_65, %ssa_249;// vec1 32 ssa_254 = fmul ssa_65, ssa_249
bb_11	:  PC=0x4950 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1232) neg.f32 %ssa_255, %ssa_254;// vec1 32 ssa_255 = fneg ssa_254
bb_11	:  PC=0x4958 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1235) add.f32 %ssa_256, %ssa_251, %ssa_185;// vec1 32 ssa_256 = fadd ssa_251, ssa_185
bb_11	:  PC=0x4960 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1238) add.f32 %ssa_257, %ssa_253, %ssa_186;// vec1 32 ssa_257 = fadd ssa_253, ssa_186
bb_11	:  PC=0x4968 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1241) add.f32 %ssa_258, %ssa_255, %ssa_187;// vec1 32 ssa_258 = fadd ssa_255, ssa_187
bb_11	:  PC=0x4970 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1244) mul.f32 %ssa_259, %ssa_256, %ssa_63;// vec1 32 ssa_259 = fmul ssa_256, ssa_63
bb_11	:  PC=0x4978 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1247) mul.f32 %ssa_260, %ssa_257, %ssa_64;// vec1 32 ssa_260 = fmul ssa_257, ssa_64
bb_11	:  PC=0x4980 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1250) mul.f32 %ssa_261, %ssa_258, %ssa_65;// vec1 32 ssa_261 = fmul ssa_258, ssa_65
bb_11	:  PC=0x4988 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1256) mov.f32 %ssa_262_0, %ssa_259;
bb_11	:  PC=0x4990 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1257) mov.f32 %ssa_262_1, %ssa_260;
bb_11	:  PC=0x4998 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1258) mov.f32 %ssa_262_2, %ssa_261; // vec3 32 ssa_262 = vec3 ssa_259, ssa_260, ssa_261
bb_11	:  PC=0x49a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1261) add.f32 %ssa_263, %ssa_262_0, %ssa_262_1;
bb_11	:  PC=0x49a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1262) add.f32 %ssa_263, %ssa_263, %ssa_262_2; // vec1 32 ssa_263 = fsum3 ssa_262
bb_11	:  PC=0x49b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1265) setp.lt.f32 %ssa_264, %ssa_1, %ssa_263;// vec1  1 ssa_264 = flt! ssa_1, ssa_263
bb_11	:  PC=0x49b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1268) setp.ge.s32 %ssa_265, %ssa_34, %ssa_1_bits; // vec1  1 ssa_265 = ige ssa_34, ssa_1
bb_11	:  PC=0x49c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1273) @!%ssa_265 bra else_20;

bb_12	:  PC=0x49c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1278) mov.b64 %ssa_266, %TextureSamplers; // vec1 32 ssa_266 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_12	:  PC=0x49d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1283) cvt.u32.s32 %ssa_267_array_index_32, %ssa_34;
bb_12	:  PC=0x49d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1284) mul.wide.u32 %ssa_267_array_index_64, %ssa_267_array_index_32, 48;
bb_12	:  PC=0x49e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1285) add.u64 %ssa_267, %ssa_266, %ssa_267_array_index_64; // vec1 32 ssa_267 = deref_array &(*ssa_266)[ssa_34] (uniform sampler2D) /* &TextureSamplers[ssa_34] */
bb_12	:  PC=0x49e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1291) txl %ssa_267, %ssa_267, %ssa_268_0, %ssa_268_1, %ssa_268_2, %ssa_268_3, %ssa_175_0, %ssa_175_1, %ssa_1; // vec4 32 ssa_268 = (float32)txl ssa_267 (texture_deref), ssa_267 (sampler_deref), ssa_175 (coord), ssa_1 (lod), texture non-uniform, sampler non-uniform
bb_12	:  PC=0x49f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1294) mov.f32 %ssa_442, %ssa_268_0; // vec1 32 ssa_442 = mov ssa_268.x
bb_12	:  PC=0x49f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1297) mov.f32 %ssa_445, %ssa_268_1; // vec1 32 ssa_445 = mov ssa_268.y
bb_12	:  PC=0x4a00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1300) mov.f32 %ssa_448, %ssa_268_2; // vec1 32 ssa_448 = mov ssa_268.z
bb_12	:  PC=0x4a08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1303) mov.f32 %ssa_451, %ssa_268_3; // vec1 32 ssa_451 = mov ssa_268.w
bb_12	:  PC=0x4a10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1305) mov.f32 %ssa_444, %ssa_442; // vec1 32 ssa_444 = phi block_12: ssa_442, block_13: ssa_550
bb_12	:  PC=0x4a18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1306) mov.f32 %ssa_447, %ssa_445; // vec1 32 ssa_447 = phi block_12: ssa_445, block_13: ssa_551
bb_12	:  PC=0x4a20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1307) mov.f32 %ssa_450, %ssa_448; // vec1 32 ssa_450 = phi block_12: ssa_448, block_13: ssa_552
bb_12	:  PC=0x4a28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1308) mov.f32 %ssa_453, %ssa_451; // vec1 32 ssa_453 = phi block_12: ssa_451, block_13: ssa_553
bb_12	:  PC=0x4a30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1311) bra end_if_20;

bb_13	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1316) .reg .f32 %ssa_550;
bb_13	:  PC=0x4a38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1317) mov.f32 %ssa_550, 0F3f800000; // vec1 32 ssa_550 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x4a40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1319) mov.b32 %ssa_550_bits, 0F3f800000;
bb_13	:  PC=0x4a48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1322) mov.f32 %ssa_551, 0F3f800000; // vec1 32 ssa_551 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x4a50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1324) mov.b32 %ssa_551_bits, 0F3f800000;
bb_13	:  PC=0x4a58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1327) mov.f32 %ssa_552, 0F3f800000; // vec1 32 ssa_552 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x4a60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1329) mov.b32 %ssa_552_bits, 0F3f800000;
bb_13	:  PC=0x4a68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1332) mov.f32 %ssa_553, 0F3f800000; // vec1 32 ssa_553 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x4a70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1334) mov.b32 %ssa_553_bits, 0F3f800000;
bb_13	:  PC=0x4a78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1336) mov.f32 %ssa_444, %ssa_550; // vec1 32 ssa_444 = phi block_12: ssa_442, block_13: ssa_550
bb_13	:  PC=0x4a80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1337) mov.f32 %ssa_447, %ssa_551; // vec1 32 ssa_447 = phi block_12: ssa_445, block_13: ssa_551
bb_13	:  PC=0x4a88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1338) mov.f32 %ssa_450, %ssa_552; // vec1 32 ssa_450 = phi block_12: ssa_448, block_13: ssa_552
bb_13	:  PC=0x4a90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1339) mov.f32 %ssa_453, %ssa_553; // vec1 32 ssa_453 = phi block_12: ssa_451, block_13: ssa_553

bb_14	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1349) .reg .b32 %ssa_454_0;
bb_14	:  PC=0x4a98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1353) mov.b32 %ssa_454_0, %ssa_444;
bb_14	:  PC=0x4aa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1354) mov.b32 %ssa_454_1, %ssa_447;
bb_14	:  PC=0x4aa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1355) mov.b32 %ssa_454_2, %ssa_450;
bb_14	:  PC=0x4ab0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1356) mov.b32 %ssa_454_3, %ssa_453; // vec4 32 ssa_454 = vec4 ssa_444, ssa_447, ssa_450, ssa_453
bb_14	:  PC=0x4ab8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1359) mul.f32 %ssa_270, %ssa_32_0, %ssa_454_0; // vec1 32 ssa_270 = fmul ssa_32.x, ssa_454.x
bb_14	:  PC=0x4ac0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1362) mul.f32 %ssa_271, %ssa_32_1, %ssa_454_1; // vec1 32 ssa_271 = fmul ssa_32.y, ssa_454.y
bb_14	:  PC=0x4ac8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1365) mul.f32 %ssa_272, %ssa_32_2, %ssa_454_2; // vec1 32 ssa_272 = fmul ssa_32.z, ssa_454.z
bb_14	:  PC=0x4ad0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1367) mov.s32 %ssa_273, %ssa_178; // vec1 32 ssa_273 = phi block_14: ssa_178, block_18: ssa_286

bb_15	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1374) .reg .f32 %ssa_274;
bb_15	:  PC=0x4ad8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1375) mov.f32 %ssa_274, 0F00ffffff; // vec1 32 ssa_274 = load_const (0x00ffffff /* 0.000000 */)
bb_15	:  PC=0x4ae0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1377) mov.b32 %ssa_274_bits, 0F00ffffff;
bb_15	:  PC=0x4ae8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1380) mov.f32 %ssa_275, 0F3c6ef35f; // vec1 32 ssa_275 = load_const (0x3c6ef35f /* 0.014584 */)
bb_15	:  PC=0x4af0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1382) mov.b32 %ssa_275_bits, 0F3c6ef35f;
bb_15	:  PC=0x4af8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1385) mov.f32 %ssa_276, 0F0019660d; // vec1 32 ssa_276 = load_const (0x0019660d /* 0.000000 */)
bb_15	:  PC=0x4b00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1387) mov.b32 %ssa_276_bits, 0F0019660d;
bb_15	:  PC=0x4b08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1390) mul.lo.s32 %ssa_277, %ssa_276_bits, %ssa_273; // vec1 32 ssa_277 = imul ssa_276, ssa_273
bb_15	:  PC=0x4b10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1393) add.s32 %ssa_278, %ssa_277, %ssa_275_bits; // vec1 32 ssa_278 = iadd ssa_277, ssa_275
bb_15	:  PC=0x4b18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1396) and.b32 %ssa_279, %ssa_278, %ssa_274;// vec1 32 ssa_279 = iand ssa_278, ssa_274
bb_15	:  PC=0x4b20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1399) cvt.rn.f32.u32 %ssa_280, %ssa_279;// vec1 32 ssa_280 = u2f32 ssa_279
bb_15	:  PC=0x4b28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1402) mul.lo.s32 %ssa_281, %ssa_276_bits, %ssa_278; // vec1 32 ssa_281 = imul ssa_276, ssa_278
bb_15	:  PC=0x4b30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1405) add.s32 %ssa_282, %ssa_281, %ssa_275_bits; // vec1 32 ssa_282 = iadd ssa_281, ssa_275
bb_15	:  PC=0x4b38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1408) and.b32 %ssa_283, %ssa_282, %ssa_274;// vec1 32 ssa_283 = iand ssa_282, ssa_274
bb_15	:  PC=0x4b40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1411) cvt.rn.f32.u32 %ssa_284, %ssa_283;// vec1 32 ssa_284 = u2f32 ssa_283
bb_15	:  PC=0x4b48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1414) mul.lo.s32 %ssa_285, %ssa_276_bits, %ssa_282; // vec1 32 ssa_285 = imul ssa_276, ssa_282
bb_15	:  PC=0x4b50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1417) add.s32 %ssa_286, %ssa_285, %ssa_275_bits; // vec1 32 ssa_286 = iadd ssa_285, ssa_275
bb_15	:  PC=0x4b58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1420) and.b32 %ssa_287, %ssa_286, %ssa_274;// vec1 32 ssa_287 = iand ssa_286, ssa_274
bb_15	:  PC=0x4b60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1423) cvt.rn.f32.u32 %ssa_288, %ssa_287;// vec1 32 ssa_288 = u2f32 ssa_287
bb_15	:  PC=0x4b68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1426) mov.f32 %ssa_289, 0F34000000; // vec1 32 ssa_289 = load_const (0x34000000 /* 0.000000 */)
bb_15	:  PC=0x4b70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1428) mov.b32 %ssa_289_bits, 0F34000000;
bb_15	:  PC=0x4b78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1431) mul.f32 %ssa_290, %ssa_289, %ssa_280;// vec1 32 ssa_290 = fmul ssa_289, ssa_280
bb_15	:  PC=0x4b80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1434) mul.f32 %ssa_291, %ssa_289, %ssa_284;// vec1 32 ssa_291 = fmul ssa_289, ssa_284
bb_15	:  PC=0x4b88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1437) mul.f32 %ssa_292, %ssa_289, %ssa_288;// vec1 32 ssa_292 = fmul ssa_289, ssa_288
bb_15	:  PC=0x4b90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1443) mov.f32 %ssa_293_0, 0Fbf800000;
bb_15	:  PC=0x4b98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1444) mov.f32 %ssa_293_1, 0Fbf800000;
bb_15	:  PC=0x4ba0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1445) mov.f32 %ssa_293_2, 0Fbf800000;
bb_15	:  PC=0x4ba8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1446) mov.f32 %ssa_293_3, 0F00000000;
bb_15	:  PC=0x4bb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1450) add.f32 %ssa_294, %ssa_290, %ssa_293_0; // vec1 32 ssa_294 = fadd ssa_290, ssa_293.x
bb_15	:  PC=0x4bb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1453) add.f32 %ssa_295, %ssa_291, %ssa_293_1; // vec1 32 ssa_295 = fadd ssa_291, ssa_293.y
bb_15	:  PC=0x4bc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1456) add.f32 %ssa_296, %ssa_292, %ssa_293_2; // vec1 32 ssa_296 = fadd ssa_292, ssa_293.z
bb_15	:  PC=0x4bc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1459) mul.f32 %ssa_297, %ssa_294, %ssa_294;// vec1 32 ssa_297 = fmul ssa_294, ssa_294
bb_15	:  PC=0x4bd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1462) mul.f32 %ssa_298, %ssa_295, %ssa_295;// vec1 32 ssa_298 = fmul ssa_295, ssa_295
bb_15	:  PC=0x4bd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1465) mul.f32 %ssa_299, %ssa_296, %ssa_296;// vec1 32 ssa_299 = fmul ssa_296, ssa_296
bb_15	:  PC=0x4be0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1471) mov.f32 %ssa_300_0, %ssa_297;
bb_15	:  PC=0x4be8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1472) mov.f32 %ssa_300_1, %ssa_298;
bb_15	:  PC=0x4bf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1473) mov.f32 %ssa_300_2, %ssa_299; // vec3 32 ssa_300 = vec3 ssa_297, ssa_298, ssa_299
bb_15	:  PC=0x4bf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1476) add.f32 %ssa_301, %ssa_300_0, %ssa_300_1;
bb_15	:  PC=0x4c00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1477) add.f32 %ssa_301, %ssa_301, %ssa_300_2; // vec1 32 ssa_301 = fsum3 ssa_300
bb_15	:  PC=0x4c08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1480) setp.lt.f32 %ssa_302, %ssa_301, %ssa_67;// vec1  1 ssa_302 = flt! ssa_301, ssa_67
bb_15	:  PC=0x4c10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1485) @!%ssa_302 bra else_21;

bb_16	:  PC=0x4c18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1489) bra loop_6_exit;

bb_17	:  PC=0x4c20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1493) bra end_if_21;

bb_18	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1500) end_if_21:
bb_18	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1503) mov.s32 %ssa_273, %ssa_286; // vec1 32 ssa_273 = phi block_14: ssa_178, block_18: ssa_286
bb_18	:  PC=0x4c28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1503) mov.s32 %ssa_273, %ssa_286; // vec1 32 ssa_273 = phi block_14: ssa_178, block_18: ssa_286
bb_18	:  PC=0x4c30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1506) bra loop_6;

bb_19	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1511) .reg .f32 %ssa_303;
bb_19	:  PC=0x4c38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1512) mul.f32 %ssa_303, %ssa_294, %ssa_36;// vec1 32 ssa_303 = fmul ssa_294, ssa_36
bb_19	:  PC=0x4c40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1515) mul.f32 %ssa_304, %ssa_295, %ssa_36;// vec1 32 ssa_304 = fmul ssa_295, ssa_36
bb_19	:  PC=0x4c48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1518) mul.f32 %ssa_305, %ssa_296, %ssa_36;// vec1 32 ssa_305 = fmul ssa_296, ssa_36
bb_19	:  PC=0x4c50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1521) add.f32 %ssa_306, %ssa_256, %ssa_303;// vec1 32 ssa_306 = fadd ssa_256, ssa_303
bb_19	:  PC=0x4c58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1524) add.f32 %ssa_307, %ssa_257, %ssa_304;// vec1 32 ssa_307 = fadd ssa_257, ssa_304
bb_19	:  PC=0x4c60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1527) add.f32 %ssa_308, %ssa_258, %ssa_305;// vec1 32 ssa_308 = fadd ssa_258, ssa_305
bb_19	:  PC=0x4c68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1530) selp.f32 %ssa_309, 0F3f800000, 0F00000000, %ssa_264; // vec1 32 ssa_309 = b2f32 ssa_264
bb_19	:  PC=0x4c70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1536) mov.f32 %ssa_310_0, %ssa_270;
bb_19	:  PC=0x4c78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1537) mov.f32 %ssa_310_1, %ssa_271;
bb_19	:  PC=0x4c80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1538) mov.f32 %ssa_310_2, %ssa_272;
bb_19	:  PC=0x4c88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1539) mov.f32 %ssa_310_3, %ssa_48; // vec4 32 ssa_310 = vec4 ssa_270, ssa_271, ssa_272, ssa_48
bb_19	:  PC=0x4c90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1545) mov.f32 %ssa_311_0, %ssa_306;
bb_19	:  PC=0x4c98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1546) mov.f32 %ssa_311_1, %ssa_307;
bb_19	:  PC=0x4ca0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1547) mov.f32 %ssa_311_2, %ssa_308;
bb_19	:  PC=0x4ca8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1548) mov.f32 %ssa_311_3, %ssa_309; // vec4 32 ssa_311 = vec4 ssa_306, ssa_307, ssa_308, ssa_309
bb_19	:  PC=0x4cb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1551) mov.f32 %ssa_494, %ssa_311_0; // vec1 32 ssa_494 = mov ssa_311.x
bb_19	:  PC=0x4cb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1554) mov.f32 %ssa_497, %ssa_311_1; // vec1 32 ssa_497 = mov ssa_311.y
bb_19	:  PC=0x4cc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1557) mov.f32 %ssa_500, %ssa_311_2; // vec1 32 ssa_500 = mov ssa_311.z
bb_19	:  PC=0x4cc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1560) mov.f32 %ssa_503, %ssa_311_3; // vec1 32 ssa_503 = mov ssa_311.w
bb_19	:  PC=0x4cd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1563) mov.f32 %ssa_507, %ssa_310_0; // vec1 32 ssa_507 = mov ssa_310.x
bb_19	:  PC=0x4cd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1566) mov.f32 %ssa_510, %ssa_310_1; // vec1 32 ssa_510 = mov ssa_310.y
bb_19	:  PC=0x4ce0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1569) mov.f32 %ssa_513, %ssa_310_2; // vec1 32 ssa_513 = mov ssa_310.z
bb_19	:  PC=0x4ce8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1572) mov.f32 %ssa_516, %ssa_310_3; // vec1 32 ssa_516 = mov ssa_310.w
bb_19	:  PC=0x4cf0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1574) mov.s32 %ssa_420, %ssa_286; // vec1 32 ssa_420 = phi block_19: ssa_286, block_29: ssa_417
bb_19	:  PC=0x4cf8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1575) mov.b32 %ssa_496, %ssa_494; // vec1 32 ssa_496 = phi block_19: ssa_494, block_29: ssa_495
bb_19	:  PC=0x4d00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1576) mov.b32 %ssa_499, %ssa_497; // vec1 32 ssa_499 = phi block_19: ssa_497, block_29: ssa_498
bb_19	:  PC=0x4d08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1577) mov.b32 %ssa_502, %ssa_500; // vec1 32 ssa_502 = phi block_19: ssa_500, block_29: ssa_501
bb_19	:  PC=0x4d10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1578) mov.b32 %ssa_505, %ssa_503; // vec1 32 ssa_505 = phi block_19: ssa_503, block_29: ssa_504
bb_19	:  PC=0x4d18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1579) mov.b32 %ssa_509, %ssa_507; // vec1 32 ssa_509 = phi block_19: ssa_507, block_29: ssa_508
bb_19	:  PC=0x4d20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1580) mov.b32 %ssa_512, %ssa_510; // vec1 32 ssa_512 = phi block_19: ssa_510, block_29: ssa_511
bb_19	:  PC=0x4d28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1581) mov.b32 %ssa_515, %ssa_513; // vec1 32 ssa_515 = phi block_19: ssa_513, block_29: ssa_514
bb_19	:  PC=0x4d30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1582) mov.b32 %ssa_518, %ssa_516; // vec1 32 ssa_518 = phi block_19: ssa_516, block_29: ssa_517
bb_19	:  PC=0x4d38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1585) bra end_if_19;

bb_20	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1590) .reg .f32 %ssa_312;
bb_20	:  PC=0x4d40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1591) mov.f32 %ssa_312, 0F00000002; // vec1 32 ssa_312 = load_const (0x00000002 /* 0.000000 */)
bb_20	:  PC=0x4d48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1593) mov.b32 %ssa_312_bits, 0F00000002;
bb_20	:  PC=0x4d50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1596) setp.eq.s32 %ssa_313, %ssa_40, %ssa_312_bits; // vec1  1 ssa_313 = ieq ssa_40, ssa_312
bb_20	:  PC=0x4d58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1601) @!%ssa_313 bra else_22;

bb_21	:  PC=0x4d60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1609) mov.f32 %ssa_314_0, 0F3f800000;
bb_21	:  PC=0x4d68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1610) mov.f32 %ssa_314_1, 0F3f800000;
bb_21	:  PC=0x4d70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1611) mov.f32 %ssa_314_2, 0F3f800000;
bb_21	:  PC=0x4d78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1612) mov.f32 %ssa_314_3, 0F3f800000;
bb_21	:  PC=0x4d80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1616) mul.f32 %ssa_315, %ssa_185, %ssa_63;// vec1 32 ssa_315 = fmul ssa_185, ssa_63
bb_21	:  PC=0x4d88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1619) mul.f32 %ssa_316, %ssa_186, %ssa_64;// vec1 32 ssa_316 = fmul ssa_186, ssa_64
bb_21	:  PC=0x4d90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1622) mul.f32 %ssa_317, %ssa_187, %ssa_65;// vec1 32 ssa_317 = fmul ssa_187, ssa_65
bb_21	:  PC=0x4d98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1628) mov.f32 %ssa_318_0, %ssa_315;
bb_21	:  PC=0x4da0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1629) mov.f32 %ssa_318_1, %ssa_316;
bb_21	:  PC=0x4da8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1630) mov.f32 %ssa_318_2, %ssa_317; // vec3 32 ssa_318 = vec3 ssa_315, ssa_316, ssa_317
bb_21	:  PC=0x4db0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1633) add.f32 %ssa_319, %ssa_318_0, %ssa_318_1;
bb_21	:  PC=0x4db8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1634) add.f32 %ssa_319, %ssa_319, %ssa_318_2; // vec1 32 ssa_319 = fsum3 ssa_318
bb_21	:  PC=0x4dc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1637) setp.lt.f32 %ssa_320, %ssa_1, %ssa_319;// vec1  1 ssa_320 = flt! ssa_1, ssa_319
bb_21	:  PC=0x4dc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1640) neg.f32 %ssa_321, %ssa_63;// vec1 32 ssa_321 = fneg ssa_63
bb_21	:  PC=0x4dd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1643) neg.f32 %ssa_322, %ssa_64;// vec1 32 ssa_322 = fneg ssa_64
bb_21	:  PC=0x4dd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1646) neg.f32 %ssa_323, %ssa_65;// vec1 32 ssa_323 = fneg ssa_65
bb_21	:  PC=0x4de0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1649) selp.f32 %ssa_324, %ssa_321, %ssa_63, %ssa_320; // vec1 32 ssa_324 = bcsel ssa_320, ssa_321, ssa_63
bb_21	:  PC=0x4de8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1652) selp.f32 %ssa_325, %ssa_322, %ssa_64, %ssa_320; // vec1 32 ssa_325 = bcsel ssa_320, ssa_322, ssa_64
bb_21	:  PC=0x4df0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1655) selp.f32 %ssa_326, %ssa_323, %ssa_65, %ssa_320; // vec1 32 ssa_326 = bcsel ssa_320, ssa_323, ssa_65
bb_21	:  PC=0x4df8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1658) rcp.approx.f32 %ssa_327, %ssa_38;// vec1 32 ssa_327 = frcp ssa_38
bb_21	:  PC=0x4e00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1661) selp.f32 %ssa_328, %ssa_38, %ssa_327, %ssa_320; // vec1 32 ssa_328 = bcsel ssa_320, ssa_38, ssa_327
bb_21	:  PC=0x4e08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1664) mul.f32 %ssa_329, %ssa_38, %ssa_319;// vec1 32 ssa_329 = fmul ssa_38, ssa_319
bb_21	:  PC=0x4e10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1667) neg.f32 %ssa_330, %ssa_319;// vec1 32 ssa_330 = fneg ssa_319
bb_21	:  PC=0x4e18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1670) selp.f32 %ssa_331, %ssa_329, %ssa_330, %ssa_320; // vec1 32 ssa_331 = bcsel ssa_320, ssa_329, ssa_330
bb_21	:  PC=0x4e20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1673) mul.f32 %ssa_332, %ssa_324, %ssa_185;// vec1 32 ssa_332 = fmul ssa_324, ssa_185
bb_21	:  PC=0x4e28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1676) mul.f32 %ssa_333, %ssa_325, %ssa_186;// vec1 32 ssa_333 = fmul ssa_325, ssa_186
bb_21	:  PC=0x4e30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1679) mul.f32 %ssa_334, %ssa_326, %ssa_187;// vec1 32 ssa_334 = fmul ssa_326, ssa_187
bb_21	:  PC=0x4e38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1685) mov.f32 %ssa_335_0, %ssa_332;
bb_21	:  PC=0x4e40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1686) mov.f32 %ssa_335_1, %ssa_333;
bb_21	:  PC=0x4e48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1687) mov.f32 %ssa_335_2, %ssa_334; // vec3 32 ssa_335 = vec3 ssa_332, ssa_333, ssa_334
bb_21	:  PC=0x4e50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1690) add.f32 %ssa_336, %ssa_335_0, %ssa_335_1;
bb_21	:  PC=0x4e58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1691) add.f32 %ssa_336, %ssa_336, %ssa_335_2; // vec1 32 ssa_336 = fsum3 ssa_335
bb_21	:  PC=0x4e60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1694) mul.f32 %ssa_337, %ssa_336, %ssa_336;// vec1 32 ssa_337 = fmul ssa_336, ssa_336
bb_21	:  PC=0x4e68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1697) neg.f32 %ssa_338, %ssa_337;// vec1 32 ssa_338 = fneg ssa_337
bb_21	:  PC=0x4e70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1700) add.f32 %ssa_339, %ssa_338, %ssa_67;// vec1 32 ssa_339 = fadd ssa_338, ssa_67
bb_21	:  PC=0x4e78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1703) mul.f32 %ssa_340, %ssa_328, %ssa_339;// vec1 32 ssa_340 = fmul ssa_328, ssa_339
bb_21	:  PC=0x4e80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1706) mul.f32 %ssa_341, %ssa_328, %ssa_340;// vec1 32 ssa_341 = fmul ssa_328, ssa_340
bb_21	:  PC=0x4e88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1709) neg.f32 %ssa_342, %ssa_341;// vec1 32 ssa_342 = fneg ssa_341
bb_21	:  PC=0x4e90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1712) add.f32 %ssa_343, %ssa_342, %ssa_67;// vec1 32 ssa_343 = fadd ssa_342, ssa_67
bb_21	:  PC=0x4e98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1715) sqrt.approx.f32 %ssa_344, %ssa_343;// vec1 32 ssa_344 = fsqrt ssa_343
bb_21	:  PC=0x4ea0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1718) mul.f32 %ssa_345, %ssa_328, %ssa_336;// vec1 32 ssa_345 = fmul ssa_328, ssa_336
bb_21	:  PC=0x4ea8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1721) add.f32 %ssa_346, %ssa_345, %ssa_344;// vec1 32 ssa_346 = fadd ssa_345, ssa_344
bb_21	:  PC=0x4eb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1724) mul.f32 %ssa_347, %ssa_328, %ssa_185;// vec1 32 ssa_347 = fmul ssa_328, ssa_185
bb_21	:  PC=0x4eb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1727) mul.f32 %ssa_348, %ssa_328, %ssa_186;// vec1 32 ssa_348 = fmul ssa_328, ssa_186
bb_21	:  PC=0x4ec0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1730) mul.f32 %ssa_349, %ssa_328, %ssa_187;// vec1 32 ssa_349 = fmul ssa_328, ssa_187
bb_21	:  PC=0x4ec8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1733) mul.f32 %ssa_350, %ssa_346, %ssa_324;// vec1 32 ssa_350 = fmul ssa_346, ssa_324
bb_21	:  PC=0x4ed0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1736) neg.f32 %ssa_351, %ssa_350;// vec1 32 ssa_351 = fneg ssa_350
bb_21	:  PC=0x4ed8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1739) mul.f32 %ssa_352, %ssa_346, %ssa_325;// vec1 32 ssa_352 = fmul ssa_346, ssa_325
bb_21	:  PC=0x4ee0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1742) neg.f32 %ssa_353, %ssa_352;// vec1 32 ssa_353 = fneg ssa_352
bb_21	:  PC=0x4ee8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1745) mul.f32 %ssa_354, %ssa_346, %ssa_326;// vec1 32 ssa_354 = fmul ssa_346, ssa_326
bb_21	:  PC=0x4ef0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1748) neg.f32 %ssa_355, %ssa_354;// vec1 32 ssa_355 = fneg ssa_354
bb_21	:  PC=0x4ef8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1751) add.f32 %ssa_356, %ssa_351, %ssa_347;// vec1 32 ssa_356 = fadd ssa_351, ssa_347
bb_21	:  PC=0x4f00 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1754) add.f32 %ssa_357, %ssa_353, %ssa_348;// vec1 32 ssa_357 = fadd ssa_353, ssa_348
bb_21	:  PC=0x4f08 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1757) add.f32 %ssa_358, %ssa_355, %ssa_349;// vec1 32 ssa_358 = fadd ssa_355, ssa_349
bb_21	:  PC=0x4f10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1760) setp.lt.f32 %ssa_359, %ssa_343, %ssa_1;// vec1  1 ssa_359 = flt ssa_343, ssa_1
bb_21	:  PC=0x4f18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1763) selp.f32 %ssa_360, %ssa_1_bits, %ssa_356, %ssa_359; // vec1 32 ssa_360 = bcsel ssa_359, ssa_1, ssa_356
bb_21	:  PC=0x4f20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1766) selp.f32 %ssa_361, %ssa_1_bits, %ssa_357, %ssa_359; // vec1 32 ssa_361 = bcsel ssa_359, ssa_1, ssa_357
bb_21	:  PC=0x4f28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1769) selp.f32 %ssa_362, %ssa_1_bits, %ssa_358, %ssa_359; // vec1 32 ssa_362 = bcsel ssa_359, ssa_1, ssa_358
bb_21	:  PC=0x4f30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1772) abs.f32 %ssa_363, %ssa_361;// vec1 32 ssa_363 = fabs! ssa_361
bb_21	:  PC=0x4f38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1775) abs.f32 %ssa_364, %ssa_362;// vec1 32 ssa_364 = fabs! ssa_362
bb_21	:  PC=0x4f40 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1778) add.f32 %ssa_365, %ssa_363, %ssa_364;// vec1 32 ssa_365 = fadd! ssa_363, ssa_364
bb_21	:  PC=0x4f48 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1781) abs.f32 %ssa_366, %ssa_360;// vec1 32 ssa_366 = fabs! ssa_360
bb_21	:  PC=0x4f50 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1784) add.f32 %ssa_367, %ssa_366, %ssa_365;// vec1 32 ssa_367 = fadd! ssa_366, ssa_365
bb_21	:  PC=0x4f58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1787) setp.ne.f32 %ssa_368, %ssa_367, %ssa_1;// vec1  1 ssa_368 = fneu! ssa_367, ssa_1
bb_21	:  PC=0x4f60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1792) @!%ssa_368 bra else_23;

bb_22	:  PC=0x4f68 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1797) mov.f32 %ssa_369, 0F40a00000; // vec1 32 ssa_369 = load_const (0x40a00000 /* 5.000000 */)
bb_22	:  PC=0x4f70 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1799) mov.b32 %ssa_369_bits, 0F40a00000;
bb_22	:  PC=0x4f78 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1802) neg.f32 %ssa_370, %ssa_38;// vec1 32 ssa_370 = fneg ssa_38
bb_22	:  PC=0x4f80 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1805) add.f32 %ssa_371, %ssa_67, %ssa_370;// vec1 32 ssa_371 = fadd ssa_67, ssa_370
bb_22	:  PC=0x4f88 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1808) add.f32 %ssa_372, %ssa_67, %ssa_38;// vec1 32 ssa_372 = fadd ssa_67, ssa_38
bb_22	:  PC=0x4f90 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1811) rcp.approx.f32 %ssa_373, %ssa_372;// vec1 32 ssa_373 = frcp ssa_372
bb_22	:  PC=0x4f98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1814) mul.f32 %ssa_374, %ssa_371, %ssa_373;// vec1 32 ssa_374 = fmul ssa_371, ssa_373
bb_22	:  PC=0x4fa0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1817) mul.f32 %ssa_375, %ssa_374, %ssa_374;// vec1 32 ssa_375 = fmul ssa_374, ssa_374
bb_22	:  PC=0x4fa8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1820) neg.f32 %ssa_376, %ssa_375;// vec1 32 ssa_376 = fneg ssa_375
bb_22	:  PC=0x4fb0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1823) add.f32 %ssa_377, %ssa_67, %ssa_376;// vec1 32 ssa_377 = fadd ssa_67, ssa_376
bb_22	:  PC=0x4fb8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1826) neg.f32 %ssa_378, %ssa_331;// vec1 32 ssa_378 = fneg ssa_331
bb_22	:  PC=0x4fc0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1829) add.f32 %ssa_379, %ssa_67, %ssa_378;// vec1 32 ssa_379 = fadd ssa_67, ssa_378
bb_22	:  PC=0x4fc8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1832) lg2.approx.f32 %ssa_380, %ssa_379;
bb_22	:  PC=0x4fd0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1833) mul.f32 %ssa_380, %ssa_380, %ssa_369;
bb_22	:  PC=0x4fd8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1834) ex2.approx.f32 %ssa_380, %ssa_380;
bb_22	:  PC=0x4fe0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1837) mul.f32 %ssa_381, %ssa_377, %ssa_380;// vec1 32 ssa_381 = fmul ssa_377, ssa_380
bb_22	:  PC=0x4fe8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1840) add.f32 %ssa_382, %ssa_375, %ssa_381;// vec1 32 ssa_382 = fadd ssa_375, ssa_381
bb_22	:  PC=0x4ff0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1842) mov.f32 %ssa_383, %ssa_382; // vec1 32 ssa_383 = phi block_22: ssa_382, block_23: ssa_67
bb_22	:  PC=0x4ff8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1845) bra end_if_23;

bb_23	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1850) mov.f32 %ssa_383, %ssa_67; // vec1 32 ssa_383 = phi block_22: ssa_382, block_23: ssa_67
bb_23	:  PC=0x5000 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1850) mov.f32 %ssa_383, %ssa_67; // vec1 32 ssa_383 = phi block_22: ssa_382, block_23: ssa_67

bb_24	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1857) .reg .pred %ssa_384;
bb_24	:  PC=0x5008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1858) setp.ge.s32 %ssa_384, %ssa_34, %ssa_1_bits; // vec1  1 ssa_384 = ige ssa_34, ssa_1
bb_24	:  PC=0x5010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1863) @!%ssa_384 bra else_24;

bb_25	:  PC=0x5018 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1868) mov.b64 %ssa_385, %TextureSamplers; // vec1 32 ssa_385 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_25	:  PC=0x5020 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1873) cvt.u32.s32 %ssa_386_array_index_32, %ssa_34;
bb_25	:  PC=0x5028 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1874) mul.wide.u32 %ssa_386_array_index_64, %ssa_386_array_index_32, 48;
bb_25	:  PC=0x5030 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1875) add.u64 %ssa_386, %ssa_385, %ssa_386_array_index_64; // vec1 32 ssa_386 = deref_array &(*ssa_385)[ssa_34] (uniform sampler2D) /* &TextureSamplers[ssa_34] */
bb_25	:  PC=0x5038 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1881) txl %ssa_386, %ssa_386, %ssa_387_0, %ssa_387_1, %ssa_387_2, %ssa_387_3, %ssa_175_0, %ssa_175_1, %ssa_1; // vec4 32 ssa_387 = (float32)txl ssa_386 (texture_deref), ssa_386 (sampler_deref), ssa_175 (coord), ssa_1 (lod), texture non-uniform, sampler non-uniform
bb_25	:  PC=0x5040 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1884) mov.f32 %ssa_455, %ssa_387_0; // vec1 32 ssa_455 = mov ssa_387.x
bb_25	:  PC=0x5048 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1887) mov.f32 %ssa_458, %ssa_387_1; // vec1 32 ssa_458 = mov ssa_387.y
bb_25	:  PC=0x5050 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1890) mov.f32 %ssa_461, %ssa_387_2; // vec1 32 ssa_461 = mov ssa_387.z
bb_25	:  PC=0x5058 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1893) mov.f32 %ssa_464, %ssa_387_3; // vec1 32 ssa_464 = mov ssa_387.w
bb_25	:  PC=0x5060 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1895) mov.f32 %ssa_457, %ssa_455; // vec1 32 ssa_457 = phi block_25: ssa_455, block_26: ssa_554
bb_25	:  PC=0x5068 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1896) mov.f32 %ssa_460, %ssa_458; // vec1 32 ssa_460 = phi block_25: ssa_458, block_26: ssa_555
bb_25	:  PC=0x5070 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1897) mov.f32 %ssa_463, %ssa_461; // vec1 32 ssa_463 = phi block_25: ssa_461, block_26: ssa_556
bb_25	:  PC=0x5078 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1898) mov.f32 %ssa_466, %ssa_464; // vec1 32 ssa_466 = phi block_25: ssa_464, block_26: ssa_557
bb_25	:  PC=0x5080 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1901) bra end_if_24;

bb_26	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1906) .reg .f32 %ssa_554;
bb_26	:  PC=0x5088 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1907) mov.f32 %ssa_554, 0F3f800000; // vec1 32 ssa_554 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x5090 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1909) mov.b32 %ssa_554_bits, 0F3f800000;
bb_26	:  PC=0x5098 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1912) mov.f32 %ssa_555, 0F3f800000; // vec1 32 ssa_555 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x50a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1914) mov.b32 %ssa_555_bits, 0F3f800000;
bb_26	:  PC=0x50a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1917) mov.f32 %ssa_556, 0F3f800000; // vec1 32 ssa_556 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x50b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1919) mov.b32 %ssa_556_bits, 0F3f800000;
bb_26	:  PC=0x50b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1922) mov.f32 %ssa_557, 0F3f800000; // vec1 32 ssa_557 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x50c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1924) mov.b32 %ssa_557_bits, 0F3f800000;
bb_26	:  PC=0x50c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1926) mov.f32 %ssa_457, %ssa_554; // vec1 32 ssa_457 = phi block_25: ssa_455, block_26: ssa_554
bb_26	:  PC=0x50d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1927) mov.f32 %ssa_460, %ssa_555; // vec1 32 ssa_460 = phi block_25: ssa_458, block_26: ssa_555
bb_26	:  PC=0x50d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1928) mov.f32 %ssa_463, %ssa_556; // vec1 32 ssa_463 = phi block_25: ssa_461, block_26: ssa_556
bb_26	:  PC=0x50e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1929) mov.f32 %ssa_466, %ssa_557; // vec1 32 ssa_466 = phi block_25: ssa_464, block_26: ssa_557

bb_27	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1939) .reg .b32 %ssa_467_0;
bb_27	:  PC=0x50e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1943) mov.b32 %ssa_467_0, %ssa_457;
bb_27	:  PC=0x50f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1944) mov.b32 %ssa_467_1, %ssa_460;
bb_27	:  PC=0x50f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1945) mov.b32 %ssa_467_2, %ssa_463;
bb_27	:  PC=0x5100 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1946) mov.b32 %ssa_467_3, %ssa_466; // vec4 32 ssa_467 = vec4 ssa_457, ssa_460, ssa_463, ssa_466
bb_27	:  PC=0x5108 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1949) mov.f32 %ssa_389, 0F00ffffff; // vec1 32 ssa_389 = load_const (0x00ffffff /* 0.000000 */)
bb_27	:  PC=0x5110 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1951) mov.b32 %ssa_389_bits, 0F00ffffff;
bb_27	:  PC=0x5118 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1954) mov.f32 %ssa_390, 0F3c6ef35f; // vec1 32 ssa_390 = load_const (0x3c6ef35f /* 0.014584 */)
bb_27	:  PC=0x5120 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1956) mov.b32 %ssa_390_bits, 0F3c6ef35f;
bb_27	:  PC=0x5128 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1959) mov.f32 %ssa_391, 0F0019660d; // vec1 32 ssa_391 = load_const (0x0019660d /* 0.000000 */)
bb_27	:  PC=0x5130 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1961) mov.b32 %ssa_391_bits, 0F0019660d;
bb_27	:  PC=0x5138 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1964) mul.lo.s32 %ssa_392, %ssa_391_bits, %ssa_178; // vec1 32 ssa_392 = imul ssa_391, ssa_178
bb_27	:  PC=0x5140 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1967) add.s32 %ssa_393, %ssa_392, %ssa_390_bits; // vec1 32 ssa_393 = iadd ssa_392, ssa_390
bb_27	:  PC=0x5148 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1970) and.b32 %ssa_394, %ssa_393, %ssa_389;// vec1 32 ssa_394 = iand ssa_393, ssa_389
bb_27	:  PC=0x5150 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1973) cvt.rn.f32.u32 %ssa_395, %ssa_394;// vec1 32 ssa_395 = u2f32 ssa_394
bb_27	:  PC=0x5158 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1976) mov.f32 %ssa_396, 0F33800000; // vec1 32 ssa_396 = load_const (0x33800000 /* 0.000000 */)
bb_27	:  PC=0x5160 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1978) mov.b32 %ssa_396_bits, 0F33800000;
bb_27	:  PC=0x5168 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1981) mul.f32 %ssa_397, %ssa_395, %ssa_396;// vec1 32 ssa_397 = fmul ssa_395, ssa_396
bb_27	:  PC=0x5170 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1984) setp.lt.f32 %ssa_398, %ssa_397, %ssa_383;// vec1  1 ssa_398 = flt! ssa_397, ssa_383
bb_27	:  PC=0x5178 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1987) mov.f32 %ssa_399, 0F40000000; // vec1 32 ssa_399 = load_const (0x40000000 /* 2.000000 */)
bb_27	:  PC=0x5180 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1989) mov.b32 %ssa_399_bits, 0F40000000;
bb_27	:  PC=0x5188 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1992) mul.f32 %ssa_400, %ssa_319, %ssa_399;// vec1 32 ssa_400 = fmul ssa_319, ssa_399
bb_27	:  PC=0x5190 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1995) mul.f32 %ssa_401, %ssa_63, %ssa_400;// vec1 32 ssa_401 = fmul ssa_63, ssa_400
bb_27	:  PC=0x5198 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1998) neg.f32 %ssa_402, %ssa_401;// vec1 32 ssa_402 = fneg ssa_401
bb_27	:  PC=0x51a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2001) mul.f32 %ssa_403, %ssa_64, %ssa_400;// vec1 32 ssa_403 = fmul ssa_64, ssa_400
bb_27	:  PC=0x51a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2004) neg.f32 %ssa_404, %ssa_403;// vec1 32 ssa_404 = fneg ssa_403
bb_27	:  PC=0x51b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2007) mul.f32 %ssa_405, %ssa_65, %ssa_400;// vec1 32 ssa_405 = fmul ssa_65, ssa_400
bb_27	:  PC=0x51b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2010) neg.f32 %ssa_406, %ssa_405;// vec1 32 ssa_406 = fneg ssa_405
bb_27	:  PC=0x51c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2013) add.f32 %ssa_407, %ssa_402, %ssa_185;// vec1 32 ssa_407 = fadd ssa_402, ssa_185
bb_27	:  PC=0x51c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2016) add.f32 %ssa_408, %ssa_404, %ssa_186;// vec1 32 ssa_408 = fadd ssa_404, ssa_186
bb_27	:  PC=0x51d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2019) add.f32 %ssa_409, %ssa_406, %ssa_187;// vec1 32 ssa_409 = fadd ssa_406, ssa_187
bb_27	:  PC=0x51d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2022) selp.f32 %ssa_410, %ssa_407, %ssa_360, %ssa_398; // vec1 32 ssa_410 = bcsel ssa_398, ssa_407, ssa_360
bb_27	:  PC=0x51e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2025) selp.f32 %ssa_411, %ssa_408, %ssa_361, %ssa_398; // vec1 32 ssa_411 = bcsel ssa_398, ssa_408, ssa_361
bb_27	:  PC=0x51e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2028) selp.f32 %ssa_412, %ssa_409, %ssa_362, %ssa_398; // vec1 32 ssa_412 = bcsel ssa_398, ssa_409, ssa_362
bb_27	:  PC=0x51f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2034) mov.f32 %ssa_413_0, %ssa_410;
bb_27	:  PC=0x51f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2035) mov.f32 %ssa_413_1, %ssa_411;
bb_27	:  PC=0x5200 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2036) mov.f32 %ssa_413_2, %ssa_412;
bb_27	:  PC=0x5208 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2037) mov.f32 %ssa_413_3, %ssa_67; // vec4 32 ssa_413 = vec4 ssa_410, ssa_411, ssa_412, ssa_67
bb_27	:  PC=0x5210 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2043) mov.b32 %ssa_414_0, %ssa_467_0;
bb_27	:  PC=0x5218 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2044) mov.b32 %ssa_414_1, %ssa_467_1;
bb_27	:  PC=0x5220 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2045) mov.b32 %ssa_414_2, %ssa_467_2;
bb_27	:  PC=0x5228 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2046) mov.b32 %ssa_414_3, %ssa_48; // vec4 32 ssa_414 = vec4 ssa_467.x, ssa_467.y, ssa_467.z, ssa_48
bb_27	:  PC=0x5230 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2049) mov.f32 %ssa_468, %ssa_413_0; // vec1 32 ssa_468 = mov ssa_413.x
bb_27	:  PC=0x5238 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2052) mov.f32 %ssa_471, %ssa_413_1; // vec1 32 ssa_471 = mov ssa_413.y
bb_27	:  PC=0x5240 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2055) mov.f32 %ssa_474, %ssa_413_2; // vec1 32 ssa_474 = mov ssa_413.z
bb_27	:  PC=0x5248 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2058) mov.f32 %ssa_477, %ssa_413_3; // vec1 32 ssa_477 = mov ssa_413.w
bb_27	:  PC=0x5250 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2061) mov.b32 %ssa_481, %ssa_414_0; // vec1 32 ssa_481 = mov ssa_414.x
bb_27	:  PC=0x5258 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2064) mov.b32 %ssa_484, %ssa_414_1; // vec1 32 ssa_484 = mov ssa_414.y
bb_27	:  PC=0x5260 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2067) mov.b32 %ssa_487, %ssa_414_2; // vec1 32 ssa_487 = mov ssa_414.z
bb_27	:  PC=0x5268 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2070) mov.b32 %ssa_490, %ssa_414_3; // vec1 32 ssa_490 = mov ssa_414.w
bb_27	:  PC=0x5270 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2072) mov.s32 %ssa_417, %ssa_393; // vec1 32 ssa_417 = phi block_27: ssa_393, block_28: ssa_178
bb_27	:  PC=0x5278 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2073) mov.f32 %ssa_470, %ssa_468; // vec1 32 ssa_470 = phi block_27: ssa_468, block_28: ssa_558
bb_27	:  PC=0x5280 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2074) mov.f32 %ssa_473, %ssa_471; // vec1 32 ssa_473 = phi block_27: ssa_471, block_28: ssa_559
bb_27	:  PC=0x5288 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2075) mov.f32 %ssa_476, %ssa_474; // vec1 32 ssa_476 = phi block_27: ssa_474, block_28: ssa_560
bb_27	:  PC=0x5290 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2076) mov.f32 %ssa_479, %ssa_477; // vec1 32 ssa_479 = phi block_27: ssa_477, block_28: ssa_561
bb_27	:  PC=0x5298 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2077) mov.b32 %ssa_483, %ssa_481; // vec1 32 ssa_483 = phi block_27: ssa_481, block_28: ssa_482
bb_27	:  PC=0x52a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2078) mov.b32 %ssa_486, %ssa_484; // vec1 32 ssa_486 = phi block_27: ssa_484, block_28: ssa_485
bb_27	:  PC=0x52a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2079) mov.b32 %ssa_489, %ssa_487; // vec1 32 ssa_489 = phi block_27: ssa_487, block_28: ssa_488
bb_27	:  PC=0x52b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2080) mov.b32 %ssa_492, %ssa_490; // vec1 32 ssa_492 = phi block_27: ssa_490, block_28: ssa_491
bb_27	:  PC=0x52b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2083) bra end_if_22;

bb_28	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2088) .reg .f32 %ssa_415_0;
bb_28	:  PC=0x52c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2092) mov.f32 %ssa_415_0, 0F3f800000;
bb_28	:  PC=0x52c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2093) mov.f32 %ssa_415_1, 0F00000000;
bb_28	:  PC=0x52d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2094) mov.f32 %ssa_415_2, 0F00000000;
bb_28	:  PC=0x52d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2095) mov.f32 %ssa_415_3, 0F00000000;
bb_28	:  PC=0x52e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2102) mov.f32 %ssa_416_0, %ssa_32_0;
bb_28	:  PC=0x52e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2103) mov.f32 %ssa_416_1, %ssa_32_1;
bb_28	:  PC=0x52f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2104) mov.f32 %ssa_416_2, %ssa_32_2;
bb_28	:  PC=0x52f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2105) mov.f32 %ssa_416_3, %ssa_48; // vec4 32 ssa_416 = vec4 ssa_32.x, ssa_32.y, ssa_32.z, ssa_48
bb_28	:  PC=0x5300 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2108) mov.f32 %ssa_558, 0F3f800000; // vec1 32 ssa_558 = load_const (0x3f800000 /* 1.000000 */)
bb_28	:  PC=0x5308 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2110) mov.b32 %ssa_558_bits, 0F3f800000;
bb_28	:  PC=0x5310 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2113) mov.f32 %ssa_559, 0F00000000; // vec1 32 ssa_559 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x5318 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2115) mov.b32 %ssa_559_bits, 0F00000000;
bb_28	:  PC=0x5320 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2118) mov.f32 %ssa_560, 0F00000000; // vec1 32 ssa_560 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x5328 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2120) mov.b32 %ssa_560_bits, 0F00000000;
bb_28	:  PC=0x5330 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2123) mov.f32 %ssa_561, 0F00000000; // vec1 32 ssa_561 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x5338 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2125) mov.b32 %ssa_561_bits, 0F00000000;
bb_28	:  PC=0x5340 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2128) mov.f32 %ssa_482, %ssa_416_0; // vec1 32 ssa_482 = mov ssa_416.x
bb_28	:  PC=0x5348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2131) mov.f32 %ssa_485, %ssa_416_1; // vec1 32 ssa_485 = mov ssa_416.y
bb_28	:  PC=0x5350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2134) mov.f32 %ssa_488, %ssa_416_2; // vec1 32 ssa_488 = mov ssa_416.z
bb_28	:  PC=0x5358 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2137) mov.f32 %ssa_491, %ssa_416_3; // vec1 32 ssa_491 = mov ssa_416.w
bb_28	:  PC=0x5360 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2139) mov.s32 %ssa_417, %ssa_178; // vec1 32 ssa_417 = phi block_27: ssa_393, block_28: ssa_178
bb_28	:  PC=0x5368 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2140) mov.f32 %ssa_470, %ssa_558; // vec1 32 ssa_470 = phi block_27: ssa_468, block_28: ssa_558
bb_28	:  PC=0x5370 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2141) mov.f32 %ssa_473, %ssa_559; // vec1 32 ssa_473 = phi block_27: ssa_471, block_28: ssa_559
bb_28	:  PC=0x5378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2142) mov.f32 %ssa_476, %ssa_560; // vec1 32 ssa_476 = phi block_27: ssa_474, block_28: ssa_560
bb_28	:  PC=0x5380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2143) mov.f32 %ssa_479, %ssa_561; // vec1 32 ssa_479 = phi block_27: ssa_477, block_28: ssa_561
bb_28	:  PC=0x5388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2144) mov.b32 %ssa_483, %ssa_482; // vec1 32 ssa_483 = phi block_27: ssa_481, block_28: ssa_482
bb_28	:  PC=0x5390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2145) mov.b32 %ssa_486, %ssa_485; // vec1 32 ssa_486 = phi block_27: ssa_484, block_28: ssa_485
bb_28	:  PC=0x5398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2146) mov.b32 %ssa_489, %ssa_488; // vec1 32 ssa_489 = phi block_27: ssa_487, block_28: ssa_488
bb_28	:  PC=0x53a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2147) mov.b32 %ssa_492, %ssa_491; // vec1 32 ssa_492 = phi block_27: ssa_490, block_28: ssa_491

bb_29	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2162) .reg .b32 %ssa_493_0;
bb_29	:  PC=0x53a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2166) mov.b32 %ssa_493_0, %ssa_483;
bb_29	:  PC=0x53b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2167) mov.b32 %ssa_493_1, %ssa_486;
bb_29	:  PC=0x53b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2168) mov.b32 %ssa_493_2, %ssa_489;
bb_29	:  PC=0x53c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2169) mov.b32 %ssa_493_3, %ssa_492; // vec4 32 ssa_493 = vec4 ssa_483, ssa_486, ssa_489, ssa_492
bb_29	:  PC=0x53c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2175) mov.b32 %ssa_480_0, %ssa_470;
bb_29	:  PC=0x53d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2176) mov.b32 %ssa_480_1, %ssa_473;
bb_29	:  PC=0x53d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2177) mov.b32 %ssa_480_2, %ssa_476;
bb_29	:  PC=0x53e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2178) mov.b32 %ssa_480_3, %ssa_479; // vec4 32 ssa_480 = vec4 ssa_470, ssa_473, ssa_476, ssa_479
bb_29	:  PC=0x53e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2181) mov.b32 %ssa_495, %ssa_480_0; // vec1 32 ssa_495 = mov ssa_480.x
bb_29	:  PC=0x53f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2184) mov.b32 %ssa_498, %ssa_480_1; // vec1 32 ssa_498 = mov ssa_480.y
bb_29	:  PC=0x53f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2187) mov.b32 %ssa_501, %ssa_480_2; // vec1 32 ssa_501 = mov ssa_480.z
bb_29	:  PC=0x5400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2190) mov.b32 %ssa_504, %ssa_480_3; // vec1 32 ssa_504 = mov ssa_480.w
bb_29	:  PC=0x5408 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2193) mov.b32 %ssa_508, %ssa_493_0; // vec1 32 ssa_508 = mov ssa_493.x
bb_29	:  PC=0x5410 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2196) mov.b32 %ssa_511, %ssa_493_1; // vec1 32 ssa_511 = mov ssa_493.y
bb_29	:  PC=0x5418 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2199) mov.b32 %ssa_514, %ssa_493_2; // vec1 32 ssa_514 = mov ssa_493.z
bb_29	:  PC=0x5420 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2202) mov.b32 %ssa_517, %ssa_493_3; // vec1 32 ssa_517 = mov ssa_493.w
bb_29	:  PC=0x5428 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2204) mov.s32 %ssa_420, %ssa_417; // vec1 32 ssa_420 = phi block_19: ssa_286, block_29: ssa_417
bb_29	:  PC=0x5430 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2205) mov.b32 %ssa_496, %ssa_495; // vec1 32 ssa_496 = phi block_19: ssa_494, block_29: ssa_495
bb_29	:  PC=0x5438 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2206) mov.b32 %ssa_499, %ssa_498; // vec1 32 ssa_499 = phi block_19: ssa_497, block_29: ssa_498
bb_29	:  PC=0x5440 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2207) mov.b32 %ssa_502, %ssa_501; // vec1 32 ssa_502 = phi block_19: ssa_500, block_29: ssa_501
bb_29	:  PC=0x5448 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2208) mov.b32 %ssa_505, %ssa_504; // vec1 32 ssa_505 = phi block_19: ssa_503, block_29: ssa_504
bb_29	:  PC=0x5450 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2209) mov.b32 %ssa_509, %ssa_508; // vec1 32 ssa_509 = phi block_19: ssa_507, block_29: ssa_508
bb_29	:  PC=0x5458 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2210) mov.b32 %ssa_512, %ssa_511; // vec1 32 ssa_512 = phi block_19: ssa_510, block_29: ssa_511
bb_29	:  PC=0x5460 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2211) mov.b32 %ssa_515, %ssa_514; // vec1 32 ssa_515 = phi block_19: ssa_513, block_29: ssa_514
bb_29	:  PC=0x5468 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2212) mov.b32 %ssa_518, %ssa_517; // vec1 32 ssa_518 = phi block_19: ssa_516, block_29: ssa_517

bb_30	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2227) .reg .b32 %ssa_519_0;
bb_30	:  PC=0x5470 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2231) mov.b32 %ssa_519_0, %ssa_509;
bb_30	:  PC=0x5478 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2232) mov.b32 %ssa_519_1, %ssa_512;
bb_30	:  PC=0x5480 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2233) mov.b32 %ssa_519_2, %ssa_515;
bb_30	:  PC=0x5488 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2234) mov.b32 %ssa_519_3, %ssa_518; // vec4 32 ssa_519 = vec4 ssa_509, ssa_512, ssa_515, ssa_518
bb_30	:  PC=0x5490 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2240) mov.b32 %ssa_506_0, %ssa_496;
bb_30	:  PC=0x5498 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2241) mov.b32 %ssa_506_1, %ssa_499;
bb_30	:  PC=0x54a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2242) mov.b32 %ssa_506_2, %ssa_502;
bb_30	:  PC=0x54a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2243) mov.b32 %ssa_506_3, %ssa_505; // vec4 32 ssa_506 = vec4 ssa_496, ssa_499, ssa_502, ssa_505
bb_30	:  PC=0x54b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2246) mov.b32 %ssa_521, %ssa_506_0; // vec1 32 ssa_521 = mov ssa_506.x
bb_30	:  PC=0x54b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2249) mov.b32 %ssa_524, %ssa_506_1; // vec1 32 ssa_524 = mov ssa_506.y
bb_30	:  PC=0x54c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2252) mov.b32 %ssa_527, %ssa_506_2; // vec1 32 ssa_527 = mov ssa_506.z
bb_30	:  PC=0x54c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2255) mov.b32 %ssa_530, %ssa_506_3; // vec1 32 ssa_530 = mov ssa_506.w
bb_30	:  PC=0x54d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2258) mov.b32 %ssa_534, %ssa_519_0; // vec1 32 ssa_534 = mov ssa_519.x
bb_30	:  PC=0x54d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2261) mov.b32 %ssa_537, %ssa_519_1; // vec1 32 ssa_537 = mov ssa_519.y
bb_30	:  PC=0x54e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2264) mov.b32 %ssa_540, %ssa_519_2; // vec1 32 ssa_540 = mov ssa_519.z
bb_30	:  PC=0x54e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2267) mov.b32 %ssa_543, %ssa_519_3; // vec1 32 ssa_543 = mov ssa_519.w
bb_30	:  PC=0x54f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2269) mov.s32 %ssa_423, %ssa_420; // vec1 32 ssa_423 = phi block_9: ssa_217, block_30: ssa_420
bb_30	:  PC=0x54f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2270) mov.b32 %ssa_522, %ssa_521; // vec1 32 ssa_522 = phi block_9: ssa_520, block_30: ssa_521
bb_30	:  PC=0x5500 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2271) mov.b32 %ssa_525, %ssa_524; // vec1 32 ssa_525 = phi block_9: ssa_523, block_30: ssa_524
bb_30	:  PC=0x5508 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2272) mov.b32 %ssa_528, %ssa_527; // vec1 32 ssa_528 = phi block_9: ssa_526, block_30: ssa_527
bb_30	:  PC=0x5510 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2273) mov.b32 %ssa_531, %ssa_530; // vec1 32 ssa_531 = phi block_9: ssa_529, block_30: ssa_530
bb_30	:  PC=0x5518 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2274) mov.b32 %ssa_535, %ssa_534; // vec1 32 ssa_535 = phi block_9: ssa_533, block_30: ssa_534
bb_30	:  PC=0x5520 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2275) mov.b32 %ssa_538, %ssa_537; // vec1 32 ssa_538 = phi block_9: ssa_536, block_30: ssa_537
bb_30	:  PC=0x5528 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2276) mov.b32 %ssa_541, %ssa_540; // vec1 32 ssa_541 = phi block_9: ssa_539, block_30: ssa_540
bb_30	:  PC=0x5530 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2277) mov.b32 %ssa_544, %ssa_543; // vec1 32 ssa_544 = phi block_9: ssa_542, block_30: ssa_543

bb_31	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2292) .reg .b32 %ssa_545_0;
bb_31	:  PC=0x5538 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2296) mov.b32 %ssa_545_0, %ssa_535;
bb_31	:  PC=0x5540 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2297) mov.b32 %ssa_545_1, %ssa_538;
bb_31	:  PC=0x5548 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2298) mov.b32 %ssa_545_2, %ssa_541;
bb_31	:  PC=0x5550 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2299) mov.b32 %ssa_545_3, %ssa_544; // vec4 32 ssa_545 = vec4 ssa_535, ssa_538, ssa_541, ssa_544
bb_31	:  PC=0x5558 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2305) mov.b32 %ssa_532_0, %ssa_522;
bb_31	:  PC=0x5560 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2306) mov.b32 %ssa_532_1, %ssa_525;
bb_31	:  PC=0x5568 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2307) mov.b32 %ssa_532_2, %ssa_528;
bb_31	:  PC=0x5570 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2308) mov.b32 %ssa_532_3, %ssa_531; // vec4 32 ssa_532 = vec4 ssa_522, ssa_525, ssa_528, ssa_531
bb_31	:  PC=0x5578 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2310) st.global.b32 [%ssa_177], %ssa_423; // intrinsic store_deref (%ssa_177, %ssa_423) (1, 0) /* wrmask=x */ /* access=0 */
bb_31	:  PC=0x5580 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2313) add.u64 %ssa_426, %ssa_176, 0; // vec1 32 ssa_426 = deref_struct &ssa_176->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_31	:  PC=0x5588 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2315) st.global.b32 [%ssa_426 + 0], %ssa_545_0;
bb_31	:  PC=0x5590 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2316) st.global.b32 [%ssa_426 + 4], %ssa_545_1;
bb_31	:  PC=0x5598 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2317) st.global.b32 [%ssa_426 + 8], %ssa_545_2;
bb_31	:  PC=0x55a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2318) st.global.b32 [%ssa_426 + 12], %ssa_545_3;
bb_31	:  PC=0x55a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2323) add.u64 %ssa_427, %ssa_176, 16; // vec1 32 ssa_427 = deref_struct &ssa_176->ScatterDirection (shader_call_data vec4) /* &Ray.ScatterDirection */
bb_31	:  PC=0x55b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2325) st.global.b32 [%ssa_427 + 0], %ssa_532_0;
bb_31	:  PC=0x55b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2326) st.global.b32 [%ssa_427 + 4], %ssa_532_1;
bb_31	:  PC=0x55c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2327) st.global.b32 [%ssa_427 + 8], %ssa_532_2;
bb_31	:  PC=0x55c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2328) st.global.b32 [%ssa_427 + 12], %ssa_532_3;
bb_31	:  PC=0x55d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2333) add.u64 %ssa_428, %ssa_176, 32; // vec1 32 ssa_428 = deref_struct &ssa_176->SurfaceNormal (shader_call_data vec3) /* &Ray.SurfaceNormal */
bb_31	:  PC=0x55d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2335) st.global.f32 [%ssa_428 + 0], %ssa_66_0;
bb_31	:  PC=0x55e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2336) st.global.f32 [%ssa_428 + 4], %ssa_66_1;
bb_31	:  PC=0x55e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2337) st.global.f32 [%ssa_428 + 8], %ssa_66_2;

bb_32	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2345) ret ;
bb_32	:  PC=0x55f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2345) ret ;

Summary of basic blocks for 'MESA_SHADER_CLOSEST_HIT_func3_main':
bb_00	: first: load_vulkan_descriptor	 last: bra	
bb_01	: first: mov	 last: bra	
bb_02	: first: mov	 last: bra	
bb_03	: first: mov	 last: mov	
bb_04	: first: mov	 last: mov	
bb_05	: first: mov	 last: bra	
bb_06	: first: bra	 last: bra	
bb_07	: first: bra	 last: bra	
bb_08	: first: mov	 last: bra	
bb_09	: first: add	 last: bra	
bb_10	: first: mov	 last: bra	
bb_11	: first: mov	 last: bra	
bb_12	: first: mov	 last: bra	
bb_13	: first: mov	 last: mov	
bb_14	: first: mov	 last: mov	
bb_15	: first: mov	 last: bra	
bb_16	: first: bra	 last: bra	
bb_17	: first: bra	 last: bra	
bb_18	: first: mov	 last: bra	
bb_19	: first: mul	 last: bra	
bb_20	: first: mov	 last: bra	
bb_21	: first: mov	 last: bra	
bb_22	: first: mov	 last: bra	
bb_23	: first: mov	 last: mov	
bb_24	: first: setp	 last: bra	
bb_25	: first: mov	 last: bra	
bb_26	: first: mov	 last: mov	
bb_27	: first: mov	 last: bra	
bb_28	: first: mov	 last: mov	
bb_29	: first: mov	 last: mov	
bb_30	: first: mov	 last: mov	
bb_31	: first: mov	 last: st	
bb_32	: first: ret	 last: ret	
bb_33	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_CLOSEST_HIT_func3_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_CLOSEST_HIT_func3_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_CLOSEST_HIT_func3_main'...
Operand information not set. load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_CLOSEST_HIT_func3_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x44b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:810) @!%ssa_188 bra else_16;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x5538 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2296) mov.b32 %ssa_545_0, %ssa_535;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x4528 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:854) @!%ssa_196 bra else_17;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4600 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:934) mov.b32 %ssa_441_0, %ssa_431;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x4598 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:892) bra end_if_17;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4600 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:934) mov.b32 %ssa_441_0, %ssa_431;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x4778 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1066) @!%ssa_233 bra else_18;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4780 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1070) bra loop_5_exit;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x4780 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1070) bra loop_5_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x47a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1093) add.f32 %ssa_234, %ssa_63, %ssa_225;// vec1 32 ssa_234 = fadd ssa_63, ssa_225
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x4788 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1074) bra end_if_18;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4790 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1084) mov.s32 %ssa_204, %ssa_217; // vec1 32 ssa_204 = phi block_4: ssa_178, block_8: ssa_217
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x4798 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1087) bra loop_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4640 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:956) mov.f32 %ssa_205, 0F00ffffff; // vec1 32 ssa_205 = load_const (0x00ffffff /* 0.000000 */)
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x4888 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1157) bra end_if_16;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x5538 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2296) mov.b32 %ssa_545_0, %ssa_535;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x48a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1173) @!%ssa_241 bra else_19;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x5470 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2231) mov.b32 %ssa_519_0, %ssa_509;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x49c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1273) @!%ssa_265 bra else_20;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4a98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1353) mov.b32 %ssa_454_0, %ssa_444;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x4a30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1311) bra end_if_20;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4a98 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1353) mov.b32 %ssa_454_0, %ssa_444;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x4c10 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1485) @!%ssa_302 bra else_21;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4c18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1489) bra loop_6_exit;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x4c18 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1489) bra loop_6_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4c38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1512) mul.f32 %ssa_303, %ssa_294, %ssa_36;// vec1 32 ssa_303 = fmul ssa_294, ssa_36
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x4c20 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1493) bra end_if_21;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4c28 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1503) mov.s32 %ssa_273, %ssa_286; // vec1 32 ssa_273 = phi block_14: ssa_178, block_18: ssa_286
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x4c30 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1506) bra loop_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x4ad8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1375) mov.f32 %ssa_274, 0F00ffffff; // vec1 32 ssa_274 = load_const (0x00ffffff /* 0.000000 */)
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x4d38 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1585) bra end_if_19;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x5470 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2231) mov.b32 %ssa_519_0, %ssa_509;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x4d58 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1601) @!%ssa_313 bra else_22;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x53a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2166) mov.b32 %ssa_493_0, %ssa_483;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x4f60 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1792) @!%ssa_368 bra else_23;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x5008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1858) setp.ge.s32 %ssa_384, %ssa_34, %ssa_1_bits; // vec1  1 ssa_384 = ige ssa_34, ssa_1
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x4ff8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1845) bra end_if_23;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x5008 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1858) setp.ge.s32 %ssa_384, %ssa_34, %ssa_1_bits; // vec1  1 ssa_384 = ige ssa_34, ssa_1
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x5010 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1863) @!%ssa_384 bra else_24;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x50e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1943) mov.b32 %ssa_467_0, %ssa_457;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x5080 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1901) bra end_if_24;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x50e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:1943) mov.b32 %ssa_467_0, %ssa_457;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x52b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2083) bra end_if_22;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x53a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx:2166) mov.b32 %ssa_493_0, %ssa_483;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_CLOSEST_HIT_func3_main
Operand information not set. load_vulkan_descriptor %ssa_2, 0, 7, 7; // vec2 32 ssa_2 = intrinsic vulkan_resource_index (%ssa_1) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_9, 0, 5, 7; // vec2 32 ssa_9 = intrinsic vulkan_resource_index (%ssa_1) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_20, 0, 4, 7; // vec2 32 ssa_20 = intrinsic vulkan_resource_index (%ssa_1) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_26, 0, 6, 7; // vec2 32 ssa_26 = intrinsic vulkan_resource_index (%ssa_1) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_41, 0, 9, 7; // vec2 32 ssa_41 = intrinsic vulkan_resource_index (%ssa_1) (0, 9, 7) /* desc_set=0 */ /* binding=9 */ /* desc_type=SSBO */
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_CLOSEST_HIT_func3_main'.
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_MISS_func1_main'...
Printing basic blocks for function 'MESA_SHADER_MISS_func1_main':
bb_00	:  PC=0x21e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:13) rt_alloc_mem %Ray, 48, 32; // decl_var shader_call_data INTERP_MODE_NONE RayPayload Ray
bb_00	:  PC=0x21e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:21) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x21f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:24) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x21f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:27) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x2200 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:30) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x2208 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:38) mov.f32 %ssa_0_0, 0F00000000;
bb_00	:  PC=0x2210 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:39) mov.f32 %ssa_0_1, 0F00000000;
bb_00	:  PC=0x2218 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:40) mov.f32 %ssa_0_2, 0F00000000;
bb_00	:  PC=0x2220 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:41) mov.f32 %ssa_0_3, 0Fbf800000;
bb_00	:  PC=0x2228 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:45) mov.f32 %ssa_1, 0Fbf800000; // vec1 32 ssa_1 = load_const (0xbf800000 /* -1.000000 */)
bb_00	:  PC=0x2230 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:47) mov.b32 %ssa_1_bits, 0Fbf800000;
bb_00	:  PC=0x2238 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:53) mov.f32 %ssa_2_0, 0F3f800000;
bb_00	:  PC=0x2240 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:54) mov.f32 %ssa_2_1, 0F3f800000;
bb_00	:  PC=0x2248 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:55) mov.f32 %ssa_2_2, 0F3f800000;
bb_00	:  PC=0x2250 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:56) mov.f32 %ssa_2_3, 0F00000000;
bb_00	:  PC=0x2258 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:60) mov.f32 %ssa_3, 0F3f800000; // vec1 32 ssa_3 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x2260 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:62) mov.b32 %ssa_3_bits, 0F3f800000;
bb_00	:  PC=0x2268 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:65) mov.f32 %ssa_4, 0F00000000; // vec1 32 ssa_4 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x2270 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:67) mov.b32 %ssa_4_bits, 0F00000000;
bb_00	:  PC=0x2278 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:70) load_vulkan_descriptor %ssa_5, 0, 3, 6; // vec2 32 ssa_5 = intrinsic vulkan_resource_index (%ssa_4) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
bb_00	:  PC=0x2280 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:73) mov.b64 %ssa_6, %ssa_5; // vec2 32 ssa_6 = intrinsic load_vulkan_descriptor (%ssa_5) (6) /* desc_type=UBO */
bb_00	:  PC=0x2288 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:76) mov.b64 %ssa_7, %ssa_6; // vec2 32 ssa_7 = deref_cast (UniformBufferObjectStruct *)ssa_6 (ubo UniformBufferObjectStruct)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2290 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:79) add.u64 %ssa_8, %ssa_7, 0; // vec2 32 ssa_8 = deref_struct &ssa_7->Camera (ubo UniformBufferObject) /* &((UniformBufferObjectStruct *)ssa_6)->Camera */
bb_00	:  PC=0x2298 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:82) add.u64 %ssa_9, %ssa_8, 312; // vec2 32 ssa_9 = deref_struct &ssa_8->HasSky (ubo uint) /* &((UniformBufferObjectStruct *)ssa_6)->Camera.HasSky */
bb_00	:  PC=0x22a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:85) ld.global.u32 %ssa_10, [%ssa_9]; // vec1 32 ssa_10 = intrinsic load_deref (%ssa_9) (0) /* access=0 */
bb_00	:  PC=0x22a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:88) setp.ne.s32 %ssa_11, %ssa_10, %ssa_4_bits; // vec1  1 ssa_11 = ine ssa_10, ssa_4
bb_00	:  PC=0x22b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:93) @!%ssa_11 bra else_6;

bb_01	:  PC=0x22b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:102) load_ray_world_direction %ssa_12_address; // vec3 32 ssa_12 = intrinsic load_ray_world_direction () ()
bb_01	:  PC=0x22c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:103) ld.global.f32 %ssa_12_0, [%ssa_12_address + 0];
bb_01	:  PC=0x22c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:104) ld.global.f32 %ssa_12_1, [%ssa_12_address + 4];
bb_01	:  PC=0x22d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:105) ld.global.f32 %ssa_12_2, [%ssa_12_address + 8];
bb_01	:  PC=0x22d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:106) ld.global.f32 %ssa_12_3, [%ssa_12_address + 12];
bb_01	:  PC=0x22e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:109) mul.f32 %ssa_13, %ssa_12_0, %ssa_12_0; // vec1 32 ssa_13 = fmul ssa_12.x, ssa_12.x
bb_01	:  PC=0x22e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:112) mul.f32 %ssa_14, %ssa_12_1, %ssa_12_1; // vec1 32 ssa_14 = fmul ssa_12.y, ssa_12.y
bb_01	:  PC=0x22f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:115) mul.f32 %ssa_15, %ssa_12_2, %ssa_12_2; // vec1 32 ssa_15 = fmul ssa_12.z, ssa_12.z
bb_01	:  PC=0x22f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:121) mov.f32 %ssa_16_0, %ssa_13;
bb_01	:  PC=0x2300 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:122) mov.f32 %ssa_16_1, %ssa_14;
bb_01	:  PC=0x2308 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:123) mov.f32 %ssa_16_2, %ssa_15; // vec3 32 ssa_16 = vec3 ssa_13, ssa_14, ssa_15
bb_01	:  PC=0x2310 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:126) add.f32 %ssa_17, %ssa_16_0, %ssa_16_1;
bb_01	:  PC=0x2318 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:127) add.f32 %ssa_17, %ssa_17, %ssa_16_2; // vec1 32 ssa_17 = fsum3 ssa_16
bb_01	:  PC=0x2320 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:130) rsqrt.approx.f32 %ssa_18, %ssa_17;// vec1 32 ssa_18 = frsq ssa_17
bb_01	:  PC=0x2328 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:133) mul.f32 %ssa_19, %ssa_12_1, %ssa_18; // vec1 32 ssa_19 = fmul ssa_12.y, ssa_18
bb_01	:  PC=0x2330 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:136) add.f32 %ssa_20, %ssa_19, %ssa_3;// vec1 32 ssa_20 = fadd ssa_19, ssa_3
bb_01	:  PC=0x2338 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:139) mov.f32 %ssa_21, 0Fbe800000; // vec1 32 ssa_21 = load_const (0xbe800000 /* -0.250000 */)
bb_01	:  PC=0x2340 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:141) mov.b32 %ssa_21_bits, 0Fbe800000;
bb_01	:  PC=0x2348 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:144) mul.f32 %ssa_22, %ssa_21, %ssa_20;// vec1 32 ssa_22 = fmul ssa_21, ssa_20
bb_01	:  PC=0x2350 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:147) mov.f32 %ssa_23, 0Fbe19999a; // vec1 32 ssa_23 = load_const (0xbe19999a /* -0.150000 */)
bb_01	:  PC=0x2358 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:149) mov.b32 %ssa_23_bits, 0Fbe19999a;
bb_01	:  PC=0x2360 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:152) mul.f32 %ssa_24, %ssa_23, %ssa_20;// vec1 32 ssa_24 = fmul ssa_23, ssa_20
bb_01	:  PC=0x2368 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:155) add.f32 %ssa_25, %ssa_2_0, %ssa_22; // vec1 32 ssa_25 = fadd ssa_2.x, ssa_22
bb_01	:  PC=0x2370 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:158) add.f32 %ssa_26, %ssa_2_1, %ssa_24; // vec1 32 ssa_26 = fadd ssa_2.y, ssa_24
bb_01	:  PC=0x2378 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:164) mov.f32 %ssa_27_0, %ssa_25;
bb_01	:  PC=0x2380 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:165) mov.f32 %ssa_27_1, %ssa_26;
bb_01	:  PC=0x2388 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:166) mov.f32 %ssa_27_2, %ssa_3;
bb_01	:  PC=0x2390 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:167) mov.f32 %ssa_27_3, %ssa_1; // vec4 32 ssa_27 = vec4 ssa_25, ssa_26, ssa_3, ssa_1
bb_01	:  PC=0x2398 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:170) mov.b64 %ssa_28, %Ray; // vec1 32 ssa_28 = deref_var &Ray (shader_call_data RayPayload) 
bb_01	:  PC=0x23a0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:173) add.u64 %ssa_29, %ssa_28, 0; // vec1 32 ssa_29 = deref_struct &ssa_28->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_01	:  PC=0x23a8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:175) st.global.f32 [%ssa_29 + 0], %ssa_27_0;
bb_01	:  PC=0x23b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:176) st.global.f32 [%ssa_29 + 4], %ssa_27_1;
bb_01	:  PC=0x23b8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:177) st.global.f32 [%ssa_29 + 8], %ssa_27_2;
bb_01	:  PC=0x23c0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:178) st.global.f32 [%ssa_29 + 12], %ssa_27_3;
bb_01	:  PC=0x23c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:184) bra end_if_6;

bb_02	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:189) .reg .b64 %ssa_30;
bb_02	:  PC=0x23d0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:190) mov.b64 %ssa_30, %Ray; // vec1 32 ssa_30 = deref_var &Ray (shader_call_data RayPayload) 
bb_02	:  PC=0x23d8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:193) add.u64 %ssa_31, %ssa_30, 0; // vec1 32 ssa_31 = deref_struct &ssa_30->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_02	:  PC=0x23e0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:195) st.global.f32 [%ssa_31 + 0], %ssa_0_0;
bb_02	:  PC=0x23e8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:196) st.global.f32 [%ssa_31 + 4], %ssa_0_1;
bb_02	:  PC=0x23f0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:197) st.global.f32 [%ssa_31 + 8], %ssa_0_2;
bb_02	:  PC=0x23f8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:198) st.global.f32 [%ssa_31 + 12], %ssa_0_3;

bb_03	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:210) shader_exit:
bb_03	:                 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
bb_03	:  PC=0x2400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;

Summary of basic blocks for 'MESA_SHADER_MISS_func1_main':
bb_00	: first: rt_alloc_mem	 last: bra	
bb_01	: first: load_ray_world_direction	 last: bra	
bb_02	: first: mov	 last: st	
bb_03	: first: ret	 last: ret	
bb_04	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_MISS_func1_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x22b0 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:93) @!%ssa_11 bra else_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x23c8 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:184) bra end_if_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2400 (/home/ggc/ray_tracing/gpgpu-sim_emerald/../mesa/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_MISS_func1_main
Operand information not set. load_vulkan_descriptor %ssa_5, 0, 3, 6; // vec2 32 ssa_5 = intrinsic vulkan_resource_index (%ssa_4) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_MISS_func1_main'.
gpgpusim: saving image SCENE to file 25-09-2023-10-55-32-SCENE.ppm
kernel_name = MESA_SHADER_RAYGEN_func0_main 
kernel_launch_uid = 1 
gpu_sim_cycle = 1078241
gpu_sim_insn = 22778501
gpu_ipc =      21.1256
gpu_tot_sim_cycle = 1078241
gpu_tot_sim_insn = 22778501
gpu_tot_ipc =      21.1256
gpu_tot_issued_cta = 2048
gpu_occupancy = 45.1235% 
gpu_tot_occupancy = 45.1235% 
max_total_param_size = 0
splits_table_push_back = 0
splits_table_update_active_entry = 0
max_recvg_time = 0
max_st entries = 0
max_rec entries = 0
triggered_timeouts = 0
gpu_st_spills = 0
gpu_rt_spills = 0
gpu_st_fills = 0
gpu_rt_fills = 0
gpu_st_fills_hits = 0
gpu_st_fills_misses = 0
gpu_rt_fills_hits = 0
gpu_rt_fills_misses = 0
avg_st_entries = 0.000000
avg_rt_entries = 0.000000
Reuse Stats:
Overall Average:
gpu_stall_dramfull = 45672
gpu_stall_icnt2sh    = 0
partiton_level_parallism =       0.5874
partiton_level_parallism_total  =       0.5874
partiton_level_parallism_util =       1.0000
partiton_level_parallism_util_total  =       1.0000
L2_BW  =      25.6569 GB/Sec
L2_BW_total  =      25.6569 GB/Sec
gpu_total_sim_rate=119259

========= Core cache stats =========
L1I_cache:
	L1I_total_cache_accesses = 0
	L1I_total_cache_misses = 0
	L1I_total_cache_pending_hits = 0
	L1I_total_cache_reservation_fails = 0
L1D_cache:
	L1D_cache_core[0]: Access = 826716, Miss = 481420, Miss_rate = 0.582, Pending_hits = 0, Reservation_fails = 28330
	L1D_cache_core[1]: Access = 874914, Miss = 516587, Miss_rate = 0.590, Pending_hits = 0, Reservation_fails = 28029
	L1D_total_cache_accesses = 1701630
	L1D_total_cache_misses = 998007
	L1D_total_cache_miss_rate = 0.5865
	L1D_total_cache_pending_hits = 0
	L1D_total_cache_reservation_fails = 56359
	L1D_cache_data_port_util = 0.334
	L1D_cache_fill_port_util = 0.069
L1C_cache:
	L1C_total_cache_accesses = 0
	L1C_total_cache_misses = 0
	L1C_total_cache_pending_hits = 0
	L1C_total_cache_reservation_fails = 0
L1T_cache:
	L1T_total_cache_accesses = 0
	L1T_total_cache_misses = 0
	L1T_total_cache_pending_hits = 0
	L1T_total_cache_reservation_fails = 0
L0_Complet_Cache:
	L0C_cache_core[0]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[1]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_total_cache_accesses = 0
	L0C_total_cache_misses = 0
	L0C_total_cache_pending_hits = 0
	L0C_total_cache_reservation_fails = 0

Total_core_cache_stats:
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][HIT] = 666936
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][MISS] = 104064
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][RESERVATION_FAIL] = 29260
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][SECTOR_MISS] = 443162
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][HIT] = 36687
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][MISS] = 450578
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][RESERVATION_FAIL] = 27099
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][SECTOR_MISS] = 203
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][HIT] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][MISS] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][HIT] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][MISS] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][HIT] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][MISS] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][HIT] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][MISS] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][HIT] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][MISS] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][TOTAL_ACCESS] = 1214162
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][TOTAL_ACCESS] = 487468
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R]_miss_rate = 0.4507
RT_Total_core_cache_stats_breakdown:
	rt_read_cold_miss = 3022
	rt_read_other_miss = 11491
	rt_stats[READ][HIT] = 194413
	rt_stats[READ][HIT_RESERVED] = 0
	rt_stats[READ][MISS] = 14513
	rt_stats[READ][RESERVATION_FAIL] = 5383
	rt_stats[READ][SECTOR_MISS] = 2746
	rt_read_miss_rate = 0.0815
	rt_stats[WRITE][HIT] = 0
	rt_stats[WRITE][HIT_RESERVED] = 0
	rt_stats[WRITE][MISS] = 104908
	rt_stats[WRITE][RESERVATION_FAIL] = 23936
	rt_stats[WRITE][SECTOR_MISS] = 0
	rt_overall_miss_rate = 0.3859

Total_core_cache_fail_stats:
	Total_core_cache_fail_stats_breakdown[GLOBAL_ACC_R][MISS_QUEUE_FULL] = 28681
	Total_core_cache_fail_stats_breakdown[GLOBAL_ACC_R][MSHR_MERGE_ENTRY_FAIL] = 579
	Total_core_cache_fail_stats_breakdown[GLOBAL_ACC_W][MISS_QUEUE_FULL] = 27099
ctas_completed 1, Shader 0 warp_id issue ditsribution:
warp_id:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
distro:
83703, 76839, 77182, 72440, 76148, 77406, 87405, 70958, 77046, 71406, 81927, 83980, 79152, 97127, 85514, 75775, 
gpgpu_n_tot_thrd_icount = 82293152
gpgpu_n_tot_w_icount = 2571661
gpgpu_n_stall_shd_mem = 1174781
gpgpu_n_mem_read_local = 0
gpgpu_n_mem_write_local = 0
gpgpu_n_mem_read_global = 145872
gpgpu_n_mem_write_global = 487468
gpgpu_n_mem_texture = 0
gpgpu_n_mem_const = 0
gpgpu_n_rt_mem:
28725	94103	54844	10858	0	0	23054	0	
gpgpu_n_local_load_insn  = 0
gpgpu_n_local_store_insn = 0
gpgpu_n_global_load_insn  = 1791336
gpgpu_n_global_store_insn = 387620
gpgpu_n_shmem_insn = 0
gpgpu_n_sstarr_insn = 0
gpgpu_n_tex_insn = 0
gpgpu_n_const_mem_insn = 0
gpgpu_n_param_mem_insn = 0
gpgpu_n_rt_insn = 28787
gpgpu_n_rt_access_insn = 480311
gpgpu_n_shmem_bkconflict = 0
gpgpu_n_cache_bkconflict = 0
gpgpu_n_intrawarp_mshr_merge = 0
gpgpu_n_cmem_portconflict = 0
gpgpu_stall_shd_mem[c_mem][resource_stall] = 0
gpgpu_stall_shd_mem[s_mem][bk_conf] = 0
gpgpu_stall_shd_mem[gl_mem][resource_stall] = 1174781
gpgpu_stall_shd_mem[gl_mem][coal_stall] = 0
gpgpu_stall_shd_mem[gl_mem][data_port_stall] = 0
gpu_reg_bank_conflict_stalls = 0
rt_avg_warp_latency = 1068.687256
rt_avg_thread_latency = 182.837799
rt_avg_efficiency = 0.179559
rt_avg_warp_occupancy = 0.481956
rt_total_cacheline_fetched = 106197	103622	
rt_total_intersection_stages = 1603420	1702424	
rt_op_intensity = 15.098543	16.429174	
rt_perf = 2.277168	2.360864	
rt_avg_op_intensity = 15.763859
rt_avg_performance = 2.319016
rt_writes = 104908
rt_max_mem_store_q = 666
rt_avg_mem_store_cycles = 64422.000000
rt_cycles = 0.660906
rt_total_cycles = 712615.500000
rt_total_cycles_sum = 1425231
rt_cycles_dist:	704129	721102
rt_store_cycles_dist:	62011	66833
rt_latency_dist = 0.00	0.00	210.07	76.18	993.49	0.00	158.49	4.68	2.60	25.36	0.00	18.96	32.62	20.30	52.41	
warp_dist_rt = 1272935	620058	188871	7920	3083	12039	546	18	0	0	3483	
warp_dist_empty = 145753	67791	36549	20195	26345	1812320	0	0	0	0	0	
Warp Occupancy Distribution:
Stall:2476691	W0_Idle:366467	W0_Scoreboard:3020993	W1:1083772	W2:264344	W3:177652	W4:109254	W5:61894	W6:55929	W7:45351	W8:41620	W9:25147	W10:20230	W11:17854	W12:16271	W13:14936	W14:15606	W15:13547	W16:15466	W17:14092	W18:10564	W19:10899	W20:9674	W21:6241	W22:8475	W23:13082	W24:10431	W25:8744	W26:11740	W27:9695	W28:5247	W29:10306	W30:7687	W31:218397	W32:237514
single_issue_nums: WS0:653328	WS1:634616	WS2:650465	WS3:633252	
dual_issue_nums: WS0:0	WS1:0	WS2:0	WS3:0	
traffic_breakdown_coretomem[GLOBAL_ACC_R] = 1166976 {8:145872,}
traffic_breakdown_coretomem[GLOBAL_ACC_W] = 19498720 {40:487468,}
traffic_breakdown_memtocore[GLOBAL_ACC_R] = 5834880 {40:145872,}
traffic_breakdown_memtocore[GLOBAL_ACC_W] = 3899744 {8:487468,}
maxmflatency = 3529 
max_icnt2mem_latency = 2121 
maxmrqlatency = 1885 
max_icnt2sh_latency = 2 
averagemflatency = 423 
avg_icnt2mem_latency = 151 
avg_mrq_latency = 156 
avg_icnt2sh_latency = 2 
mrq_lat_table:33486 	2153 	2591 	6092 	20426 	22551 	29912 	36623 	30280 	10924 	1142 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
dq_lat_table:0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
mf_lat_table:0 	0 	0 	0 	0 	0 	0 	269015 	213681 	111681 	36468 	2495 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
icnt2mem_lat_table:0 	19608 	12808 	10950 	199005 	117709 	91830 	75215 	61426 	31298 	13416 	75 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
icnt2sh_lat_table:0 	633340 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
mf_lat_pw_table:0 	0 	0 	0 	0 	0 	0 	564 	1181 	271 	89 	2 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
maximum concurrent accesses to same row:
dram[0]:        19        32        20        32        21        32        17        32        19        32        17        32        20        32        20        32 
maximum service time to same row:
dram[0]:     31794     39161     10430     18989     15306     19874     10691     21016     10872     17983     15408     12386     52945     16586     10482     24700 
average row accesses per activate:
dram[0]:  2.628935  6.446675  2.539434  5.868496  2.684855  8.187708  2.283311  6.645778  2.469658  5.435241  2.555425  6.083941  2.661912  5.792442  2.687705  5.616202 
average row locality = 196180/57624 = 3.404484
number of total memory accesses made:
dram[0]:         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 
total accesses: 0
min_bank_accesses = 0!
min_chip_accesses = 0!
number of total read accesses:
dram[0]:     13502     18880     11734     17904     11852     18286     10280     17888     14212     19674     15936     18938     17168     19136     19204     20582 
total dram reads = 265176
bank skew: 20582/10280 = 2.00
chip skew: 265176/265176 = 1.00
number of total write accesses:
dram[0]:     20536      4356     20688      5712     17632      3210     20322      5260     20902      4390     20950      2642     23162      4636     23358      3866 
total dram writes = 201622
bank skew: 23358/2642 = 8.84
chip skew: 201622/201622 = 1.00
average mf latency per bank:
dram[0]:        729       352       711       355       725       332       733       340       720       355       743       342       716       360       710       344
maximum mf latency per bank:
dram[0]:       2649      2640      2690      2758      2662      2345      2655      3046      3529      2243      2953      2908      2594      2987      2829      2552
DRAM[0]: 16 bks, busW=2 BL=8 CL=20, tRRD=10 tCCD=4, tRCD=20 tRAS=50 tRP=20 tRC=62
n_cmd=2764718 n_nop=2199052 n_act=57624 n_pre=57608 n_ref_event=4525216909631963960 n_req=196181 n_rd=265176 n_rd_L2_A=0 n_write=0 n_wr_bk=201616 bw_util=0.6754
n_activity=2205146 dram_eff=0.8467
bk0: 13502a 1507805i bk1: 18880a 2228608i bk2: 11734a 1526702i bk3: 17904a 2186925i bk4: 11852a 1600732i bk5: 18286a 2317415i bk6: 10280a 1495594i bk7: 17888a 2216887i bk8: 14212a 1389936i bk9: 19674a 2125252i bk10: 15936a 1359762i bk11: 18938a 2243075i bk12: 17168a 1323534i bk13: 19136a 2187388i bk14: 19204a 1264093i bk15: 20582a 2146917i 

------------------------------------------------------------------------

Row_Buffer_Locality = 0.706270
Row_Buffer_Locality_read = 0.851857
Row_Buffer_Locality_write = 0.402724
Bank_Level_Parallism = 7.124240
Bank_Level_Parallism_Col = 0.000000
Bank_Level_Parallism_Ready = 3.302159
write_to_read_ratio_blp_rw_average = 0.000000
GrpLevelPara = 0.000000 

BW Util details:
bwutil = 0.675356 
total_CMD = 2764718 
util_bw = 1867168 
Wasted_Col = 203165 
Wasted_Row = 81635 
Idle = 612750 

BW Util Bottlenecks: 
RCDc_limit = 80196 
RCDWRc_limit = 67195 
WTRc_limit = 232460 
RTWc_limit = 271109 
CCDLc_limit = 0 
rwq = 0 
CCDLc_limit_alone = 0 
WTRc_limit_alone = 232460 
RTWc_limit_alone = 271109 

Commands details: 
total_CMD = 2764718 
n_nop = 2199052 
Read = 265176 
Write = 0 
L2_Alloc = 0 
L2_WB = 201616 
n_act = 57624 
n_pre = 57608 
n_ref = 4525216909631963960 
n_req = 196181 
total_req = 466792 

Dual Bus Interface Util: 
issued_total_row = 115232 
issued_total_col = 466792 
Row_Bus_Util =  0.041679 
CoL_Bus_Util = 0.168839 
Either_Row_CoL_Bus_Util = 0.204602 
Issued_on_Two_Bus_Simul_Util = 0.005917 
issued_two_Eff = 0.028918 
queue_avg = 28.509951 


dram_util_bins: 0 0 0 0 0 0 0 0 0 0
dram_eff_bins: 0 0 0 0 0 0 0 0 0 0
mrqq: max=64 avg=28.51

========= L2 cache stats =========
L2_cache_bank[0]: Access = 633340, Miss = 438924, Miss_rate = 0.693, Pending_hits = 472, Reservation_fails = 1444
L2_total_cache_accesses = 633340
L2_total_cache_misses = 438924
L2_total_cache_miss_rate = 0.6930
L2_total_cache_pending_hits = 472
L2_total_cache_reservation_fails = 1444
L2_total_cache_breakdown:
	L2_cache_stats_breakdown[GLOBAL_ACC_R][HIT] = 13092
	L2_cache_stats_breakdown[GLOBAL_ACC_R][HIT_RESERVED] = 192
	L2_cache_stats_breakdown[GLOBAL_ACC_R][MISS] = 59221
	L2_cache_stats_breakdown[GLOBAL_ACC_R][RESERVATION_FAIL] = 1444
	L2_cache_stats_breakdown[GLOBAL_ACC_R][SECTOR_MISS] = 73367
	L2_cache_stats_breakdown[LOCAL_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[GLOBAL_ACC_W][HIT] = 180852
	L2_cache_stats_breakdown[GLOBAL_ACC_W][HIT_RESERVED] = 280
	L2_cache_stats_breakdown[GLOBAL_ACC_W][MISS] = 47168
	L2_cache_stats_breakdown[GLOBAL_ACC_W][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[GLOBAL_ACC_W][SECTOR_MISS] = 259168
	L2_cache_stats_breakdown[BRU_ST_SPILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][HIT] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][MISS] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][HIT] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][MISS] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][HIT] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][MISS] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[INST_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[INST_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[INST_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[INST_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[INST_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][HIT] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][MISS] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][HIT] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][MISS] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[GLOBAL_ACC_R][TOTAL_ACCESS] = 145872
	L2_cache_stats_breakdown[GLOBAL_ACC_W][TOTAL_ACCESS] = 487468
	L2_cache_stats_breakdown[GLOBAL_ACC_R]_miss_rate = 0.9089
RT_L2_cache_stats_breakdown:
	rt_read_cold_miss = 710
	rt_read_other_miss = 3950
	rt_stats[READ][HIT] = 1747
	rt_stats[READ][HIT_RESERVED] = 139
	rt_stats[READ][MISS] = 4660
	rt_stats[READ][RESERVATION_FAIL] = 16
	rt_stats[READ][SECTOR_MISS] = 8860
	rt_read_miss_rate = 0.8776
	rt_stats[WRITE][HIT] = 70551
	rt_stats[WRITE][HIT_RESERVED] = 0
	rt_stats[WRITE][MISS] = 14295
	rt_stats[WRITE][RESERVATION_FAIL] = 0
	rt_stats[WRITE][SECTOR_MISS] = 20062
	rt_overall_miss_rate = 0.3979
L2_total_cache_reservation_fail_breakdown:
	L2_cache_stats_fail_breakdown[GLOBAL_ACC_R][MISS_QUEUE_FULL] = 341
	L2_cache_stats_fail_breakdown[GLOBAL_ACC_R][MSHR_ENTRY_FAIL] = 1103
L2_cache_data_port_util = 0.221
L2_cache_fill_port_util = 0.123
Stats for Kernel 0 Classification

Min 0.000000 Max 15.000000 Average 3.117958 
[ 314752 18283155 0 879998 271007 2168540 0 0 0 0 0 1000237 28787 81241 0 2234076 0 0 0 0 0 0 0 0 0 ]
Stats for Kernel 0 OP Classification

Min 0.000000 Max 147.000000 Average 39.150998 
[ 98360 4313214 0 0 230694 0 0 0 0 0 0 1047973 0 0 0 0 0 0 0 0 0 0 0 208398 0 0 0 2100 0 0 0 1791336 0 2100 0 0 0 0 18412 0 36824 7281937 0 2981179 537720 0 0 28787 72577 0 0 0 0 0 0 147678 0 0 146777 0 39203 0 211492 961561 0 0 322896 322896 0 0 79926 0 0 377204 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 645792 0 0 0 10416 28787 1147014 ]
Ray tracing memory access distribution: 
81707	240776	52920	52454	0	0	52454	0	
rt_num_hits = 0
rt_num_any_hits = 0
rt_n_anyhit_rays = 0
rt_n_closesthit_rays = 28787
rt_n_total_rays = 28787
rt_max_tree_depth = 7
rt_max_nodes_per_ray = 79
rt_tot_nodes_per_ray = 346150
rt_avg_nodes_per_ray = 12.024525
g_inst_type_latency = 0 9819632 3288511 0 0 5667665 2371194 0 49351115 0 0 3178022 3468483 900794 0 0 66501 92975 0 0 0 0 0 0 0 0 0 0 
inst_class_by_shader
0:198979	7701770	0	600672	52080	665337	0	0	0	0	0	337794	28787	81241	0	65536	0	0	0	0	
1:10375	487625	0	20750	10375	93375	0	0	0	0	0	31125	0	0	0	0	0	0	0	0	
2:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
3:36824	6852222	0	109878	120972	681244	0	0	0	0	0	239356	0	0	0	0	0	0	0	0	
4:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
5:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
6:68574	3241538	0	148698	87580	728584	0	0	0	0	0	391962	0	0	0	0	0	0	0	0	
7:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
8:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
9:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
10:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
11:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
12:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
13:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
14:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
15:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	

icnt_total_pkts_mem_to_simt=633340
icnt_total_pkts_simt_to_mem=633340
LD_mem_lat_dist  0 0 2.41808 0 0 0 0 105.646 163.071 18.47 2.07659 26.1481 118.412 97.3133 27.4137 14.2453 6.84467 0.877775 0.349994 0 10.3747 1 1 0 0 0 0
ST_mem_lat_dist  0 0 0 0 0 0 0 6.64028 114.28 163.311 0 0 0 0 0 0 0 0 0 0 14.4483 14.5864 1 1 0 0 0
----------------------------Interconnect-DETAILS--------------------------------
Req_Network_injected_packets_num = 633340
Req_Network_cycles = 1078241
Req_Network_injected_packets_per_cycle =       0.5874 
Req_Network_conflicts_per_cycle =       0.2561
Req_Network_conflicts_per_cycle_util =       0.4333
Req_Bank_Level_Parallism =       0.9939
Req_Network_in_buffer_full_per_cycle =       0.0045
Req_Network_in_buffer_avg_util =      21.5800
Req_Network_out_buffer_full_per_cycle =       0.0036
Req_Network_out_buffer_avg_util =      33.5514

Reply_Network_injected_packets_num = 633340
Reply_Network_cycles = 1078241
Reply_Network_injected_packets_per_cycle =        0.5874
Reply_Network_conflicts_per_cycle =        0.0000
Reply_Network_conflicts_per_cycle_util =       0.0000
Reply_Bank_Level_Parallism =       1.0000
Reply_Network_in_buffer_full_per_cycle =       0.0000
Reply_Network_in_buffer_avg_util =       0.0000
Reply_Network_out_buffer_full_per_cycle =       0.0000
Reply_Network_out_buffer_avg_util =       0.2937
----------------------------END-of-Interconnect-DETAILS-------------------------


gpgpu_simulation_time = 0 days, 0 hrs, 3 min, 11 sec (191 sec)
gpgpu_simulation_rate = 119259 (inst/sec)
gpgpu_simulation_rate = 5645 (cycle/sec)
gpgpu_silicon_slowdown = 241806x
Shader 0 trace_ray added.
Shader 1 trace_ray added.
Shader 2 trace_ray added.
Shader 3 trace_ray added.
Shader 4 trace_ray added.
Shader 5 trace_ray added.
Shader 6 trace_ray added.
Shader 7 trace_ray added.
Shader 8 trace_ray added.
Shader 9 trace_ray added.
Destroy streams for kernel 1: size 0
Max simulated kernels of 1 has reached, exiting.
GPGPU-Sim: *** exit detected ***
